/**
 * TikHub.io - Your Ultimate Social Media Data & API Marketplace
 * High-performance asynchronous Douyin(抖音) TikTok Xiaohongshu(小红书) Kuaishou(快手) Weibo(微博) Instagram YouTube(油管) Twitter(X) Captcha Solver(验证码解决器) Temp Mail(临时邮箱) API(接口).
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.3.1.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * PiPiXiaAppAPIApi.h
 *
 * 
 */

#ifndef IO_TIKHUB_CLIENT_API_PiPiXiaAppAPIApi_H_
#define IO_TIKHUB_CLIENT_API_PiPiXiaAppAPIApi_H_


#include "../ApiClient.h"

#include "HttpValidationError.h"
#include "ResponseModel.h"
#include <cpprest/details/basic_types.h>


#include <boost/optional.hpp>

namespace io {
namespace tikhub {
namespace client {
namespace api {

using namespace org::openapitools::client::model;



class  PiPiXiaAppAPIApi 
{
public:

    explicit PiPiXiaAppAPIApi( std::shared_ptr<const ApiClient> apiClient );

    virtual ~PiPiXiaAppAPIApi();

    /// <summary>
    /// 获取话题详情/Get hashtag detail
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取话题详情数据。 ### 参数: - hashtag_id: 话题id，可以从分享链接中获取。 ### 返回: - 话题详情数据  # [English] ### Purpose: - Get hashtag detail data. ### Parameters: - hashtag_id: AKA hashtag id, can be obtained from the share link. ### Return: - Hashtag detail data # [示例/Example] hashtag_id &#x3D; \&quot;129559\&quot;
    /// </remarks>
    /// <param name="hashtagId">话题id/Hashtag id</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchHashtagDetailApiV1PipixiaAppFetchHashtagDetailGet(
        utility::string_t hashtagId
    ) const;
    /// <summary>
    /// 获取话题详情/Get hashtag detail
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取话题详情数据。 ### 参数: - hashtag_id: 话题id，可以从分享链接中获取。 ### 返回: - 话题详情数据  # [English] ### Purpose: - Get hashtag detail data. ### Parameters: - hashtag_id: AKA hashtag id, can be obtained from the share link. ### Return: - Hashtag detail data # [示例/Example] hashtag_id &#x3D; \&quot;129559\&quot;
    /// </remarks>
    /// <param name="hashtagId">话题id/Hashtag id</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchHashtagDetailApiV1PipixiaAppFetchHashtagDetailGet_0(
        utility::string_t hashtagId
    ) const;
    /// <summary>
    /// 获取话题作品列表/Get hashtag post list
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取话题作品列表数据。 ### 参数: - hashtag_id: 话题id，可以从分享链接中获取。 - cursor: 翻页游标，默认为0，后续页码从上一页返回的 &#x60;loadmore_cursor&#x60; Key中获取对应值。 - feed_count: 翻页数量，默认为0，后续每次翻页加1，比如第一页为0，第二页为1，第三页为2，以此类推。 - hashtag_request_type: 话题请求类型，默认为0，可用值如下：     - 0: 热门     - 1: 最新     - 2: 精华 - hashtag_sort_type: 话题排序类型，默认为3，可用值如下：     - 3: 按热度     - 2: 按时间，从新到旧     - 1: 精华 ### 返回: - 话题作品列表数据  # [English] ### Purpose: - Get hashtag post list data. ### Parameters: - hashtag_id: AKA hashtag id, can be obtained from the share link. - cursor: Page cursor, default is 0, get the corresponding value from the &#x60;loadmore_cursor&#x60; Key in the previous page. - feed_count: Page count, default is 0, add 1 for each page, such as 0 for the first page, 1 for the second page, 2 for the third page, and so on. ### Return: - Hashtag post list data  # [示例/Example] hashtag_id &#x3D; \&quot;129559\&quot; cursor &#x3D; \&quot;0\&quot; feed_count &#x3D; \&quot;0\&quot;
    /// </remarks>
    /// <param name="hashtagId">话题id/Hashtag id</param>
    /// <param name="cursor">翻页游标/Page cursor (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="feedCount">翻页数量/Page count (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="hashtagRequestType">话题请求类型/Hashtag request type (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="hashtagSortType">话题排序类型/Hashtag sort type (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchHashtagPostListApiV1PipixiaAppFetchHashtagPostListGet(
        utility::string_t hashtagId,
        boost::optional<utility::string_t> cursor,
        boost::optional<utility::string_t> feedCount,
        boost::optional<utility::string_t> hashtagRequestType,
        boost::optional<utility::string_t> hashtagSortType
    ) const;
    /// <summary>
    /// 获取话题作品列表/Get hashtag post list
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取话题作品列表数据。 ### 参数: - hashtag_id: 话题id，可以从分享链接中获取。 - cursor: 翻页游标，默认为0，后续页码从上一页返回的 &#x60;loadmore_cursor&#x60; Key中获取对应值。 - feed_count: 翻页数量，默认为0，后续每次翻页加1，比如第一页为0，第二页为1，第三页为2，以此类推。 - hashtag_request_type: 话题请求类型，默认为0，可用值如下：     - 0: 热门     - 1: 最新     - 2: 精华 - hashtag_sort_type: 话题排序类型，默认为3，可用值如下：     - 3: 按热度     - 2: 按时间，从新到旧     - 1: 精华 ### 返回: - 话题作品列表数据  # [English] ### Purpose: - Get hashtag post list data. ### Parameters: - hashtag_id: AKA hashtag id, can be obtained from the share link. - cursor: Page cursor, default is 0, get the corresponding value from the &#x60;loadmore_cursor&#x60; Key in the previous page. - feed_count: Page count, default is 0, add 1 for each page, such as 0 for the first page, 1 for the second page, 2 for the third page, and so on. ### Return: - Hashtag post list data  # [示例/Example] hashtag_id &#x3D; \&quot;129559\&quot; cursor &#x3D; \&quot;0\&quot; feed_count &#x3D; \&quot;0\&quot;
    /// </remarks>
    /// <param name="hashtagId">话题id/Hashtag id</param>
    /// <param name="cursor">翻页游标/Page cursor (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="feedCount">翻页数量/Page count (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="hashtagRequestType">话题请求类型/Hashtag request type (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="hashtagSortType">话题排序类型/Hashtag sort type (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchHashtagPostListApiV1PipixiaAppFetchHashtagPostListGet_0(
        utility::string_t hashtagId,
        boost::optional<utility::string_t> cursor,
        boost::optional<utility::string_t> feedCount,
        boost::optional<utility::string_t> hashtagRequestType,
        boost::optional<utility::string_t> hashtagSortType
    ) const;
    /// <summary>
    /// 获取首页推荐/Get home feed
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取首页推荐数据。 ### 参数: - cursor: 翻页游标，默认为0，后续页码从上一页返回的 &#x60;loadmore_cursor&#x60; Key中获取对应值。 ### 返回: - 首页推荐数据  # [English] ### Purpose: - Get home feed data. ### Parameters: - cursor: Page cursor, default is 0, get the corresponding value from the &#x60;loadmore_cursor&#x60; Key in the previous page. ### Return: - Home feed data  # [示例/Example] cursor &#x3D; \&quot;0\&quot;
    /// </remarks>
    /// <param name="cursor">翻页游标/Page cursor (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchHomeFeedApiV1PipixiaAppFetchHomeFeedGet(
        boost::optional<utility::string_t> cursor
    ) const;
    /// <summary>
    /// 获取首页推荐/Get home feed
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取首页推荐数据。 ### 参数: - cursor: 翻页游标，默认为0，后续页码从上一页返回的 &#x60;loadmore_cursor&#x60; Key中获取对应值。 ### 返回: - 首页推荐数据  # [English] ### Purpose: - Get home feed data. ### Parameters: - cursor: Page cursor, default is 0, get the corresponding value from the &#x60;loadmore_cursor&#x60; Key in the previous page. ### Return: - Home feed data  # [示例/Example] cursor &#x3D; \&quot;0\&quot;
    /// </remarks>
    /// <param name="cursor">翻页游标/Page cursor (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchHomeFeedApiV1PipixiaAppFetchHomeFeedGet_0(
        boost::optional<utility::string_t> cursor
    ) const;
    /// <summary>
    /// 获取首页短剧推荐/Get home short drama feed
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取首页短剧推荐数据。 ### 参数: - page: 页码，默认为1，每次翻页加1。 ### 返回: - 首页短剧推荐数据  # [English] ### Purpose: - Get home short drama feed data. ### Parameters: - page: Page number, default is 1, add 1 for each page. ### Return: - Home short drama feed data  # [示例/Example] page &#x3D; 1
    /// </remarks>
    /// <param name="page">页码/Page number (optional, default to 0)</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchHomeShortDramaFeedApiV1PipixiaAppFetchHomeShortDramaFeedGet(
        boost::optional<int32_t> page
    ) const;
    /// <summary>
    /// 获取首页短剧推荐/Get home short drama feed
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取首页短剧推荐数据。 ### 参数: - page: 页码，默认为1，每次翻页加1。 ### 返回: - 首页短剧推荐数据  # [English] ### Purpose: - Get home short drama feed data. ### Parameters: - page: Page number, default is 1, add 1 for each page. ### Return: - Home short drama feed data  # [示例/Example] page &#x3D; 1
    /// </remarks>
    /// <param name="page">页码/Page number (optional, default to 0)</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchHomeShortDramaFeedApiV1PipixiaAppFetchHomeShortDramaFeedGet_0(
        boost::optional<int32_t> page
    ) const;
    /// <summary>
    /// 获取热搜榜单详情/Get hot search board detail
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取热搜榜单详情数据。 ### 参数: - block_type: 榜单类型，可以从&#x60;/fetch_hot_search_board_list&#x60;接口中获取。 ### 返回: - 热搜榜单详情数据  # [English] ### Purpose: - Get hot search board detail data. ### Parameters: - block_type: Board type, can be obtained from the &#x60;/fetch_hot_search_board_list&#x60; interface. ### Return: - Hot search board detail data  # [示例/Example] block_type &#x3D; 12
    /// </remarks>
    /// <param name="blockType">榜单类型/Board type</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchHotSearchBoardDetailApiV1PipixiaAppFetchHotSearchBoardDetailGet(
        int32_t blockType
    ) const;
    /// <summary>
    /// 获取热搜榜单详情/Get hot search board detail
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取热搜榜单详情数据。 ### 参数: - block_type: 榜单类型，可以从&#x60;/fetch_hot_search_board_list&#x60;接口中获取。 ### 返回: - 热搜榜单详情数据  # [English] ### Purpose: - Get hot search board detail data. ### Parameters: - block_type: Board type, can be obtained from the &#x60;/fetch_hot_search_board_list&#x60; interface. ### Return: - Hot search board detail data  # [示例/Example] block_type &#x3D; 12
    /// </remarks>
    /// <param name="blockType">榜单类型/Board type</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchHotSearchBoardDetailApiV1PipixiaAppFetchHotSearchBoardDetailGet_0(
        int32_t blockType
    ) const;
    /// <summary>
    /// 获取热搜榜单列表/Get hot search board list
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取热搜榜单列表数据。 ### 返回: - 热搜榜单列表数据  # [English] ### Purpose: - Get hot search board list data. ### Return: - Hot search board list data  # [示例/Example] 无/None
    /// </remarks>
    pplx::task<std::shared_ptr<ResponseModel>> fetchHotSearchBoardListApiV1PipixiaAppFetchHotSearchBoardListGet(
    ) const;
    /// <summary>
    /// 获取热搜榜单列表/Get hot search board list
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取热搜榜单列表数据。 ### 返回: - 热搜榜单列表数据  # [English] ### Purpose: - Get hot search board list data. ### Return: - Hot search board list data  # [示例/Example] 无/None
    /// </remarks>
    pplx::task<std::shared_ptr<ResponseModel>> fetchHotSearchBoardListApiV1PipixiaAppFetchHotSearchBoardListGet_0(
    ) const;
    /// <summary>
    /// 获取热搜词条/Get hot search words
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取热搜词条数据。 ### 返回: - 热搜词条数据  # [English] ### Purpose: - Get hot search words data. ### Return: - Hot search words data  # [示例/Example] 无/None
    /// </remarks>
    pplx::task<std::shared_ptr<ResponseModel>> fetchHotSearchWordsApiV1PipixiaAppFetchHotSearchWordsGet(
    ) const;
    /// <summary>
    /// 获取热搜词条/Get hot search words
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取热搜词条数据。 ### 返回: - 热搜词条数据  # [English] ### Purpose: - Get hot search words data. ### Return: - Hot search words data  # [示例/Example] 无/None
    /// </remarks>
    pplx::task<std::shared_ptr<ResponseModel>> fetchHotSearchWordsApiV1PipixiaAppFetchHotSearchWordsGet_0(
    ) const;
    /// <summary>
    /// 增加作品浏览数/Increase post view count
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 增加作品浏览数。 ### 参数: - cell_id: 作品id，可以从分享链接中获取。 - cell_type: 作品类型，1为视频，多大数保持默认值即可。 ### 返回: - 执行结果  # [English] ### Purpose: - Increase post view count. ### Parameters: - cell_id: AKA video id, can be obtained from the share link. - cell_type: Video type, 1 for video, keep the default value for other types. ### Return: - Execution result  # [示例/Example] cell_id &#x3D; \&quot;7411193113223371043\&quot; cell_type &#x3D; 1
    /// </remarks>
    /// <param name="cellId">作品id/Video id</param>
    /// <param name="cellType">作品类型/Video type (optional, default to 0)</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchIncreasePostViewCountApiV1PipixiaAppFetchIncreasePostViewCountGet(
        utility::string_t cellId,
        boost::optional<int32_t> cellType
    ) const;
    /// <summary>
    /// 增加作品浏览数/Increase post view count
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 增加作品浏览数。 ### 参数: - cell_id: 作品id，可以从分享链接中获取。 - cell_type: 作品类型，1为视频，多大数保持默认值即可。 ### 返回: - 执行结果  # [English] ### Purpose: - Increase post view count. ### Parameters: - cell_id: AKA video id, can be obtained from the share link. - cell_type: Video type, 1 for video, keep the default value for other types. ### Return: - Execution result  # [示例/Example] cell_id &#x3D; \&quot;7411193113223371043\&quot; cell_type &#x3D; 1
    /// </remarks>
    /// <param name="cellId">作品id/Video id</param>
    /// <param name="cellType">作品类型/Video type (optional, default to 0)</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchIncreasePostViewCountApiV1PipixiaAppFetchIncreasePostViewCountGet_0(
        utility::string_t cellId,
        boost::optional<int32_t> cellType
    ) const;
    /// <summary>
    /// 获取作品评论列表/Get post comment list
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取作品的评论列表。 ### 参数: - cell_id: 作品id，可以从分享链接中获取。 - cell_type: 作品类型，1为视频，多大数保持默认值即可。 - offset: 翻页游标，默认为0，后续页码从上一页返回的 &#x60;offset&#x60; Key中获取对应值。 ### 返回: - 作品评论列表  # [English] ### Purpose: - Get the comment list of a post. ### Parameters: - cell_id: AKA video id, can be obtained from the share link. - cell_type: Video type, 1 for video, keep the default value for other types. - offset: Page cursor, default is 0, get the corresponding value from the &#x60;offset&#x60; Key in the previous page. ### Return: - Post comment list  # [示例/Example] cell_id &#x3D; \&quot;7411193113223371043\&quot; cell_type &#x3D; 1 offset &#x3D; \&quot;0\&quot;
    /// </remarks>
    /// <param name="cellId">作品id/Video id</param>
    /// <param name="cellType">作品类型/Video type (optional, default to 0)</param>
    /// <param name="offset">翻页游标/Page cursor (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchPostCommentListApiV1PipixiaAppFetchPostCommentListGet(
        utility::string_t cellId,
        boost::optional<int32_t> cellType,
        boost::optional<utility::string_t> offset
    ) const;
    /// <summary>
    /// 获取作品评论列表/Get post comment list
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取作品的评论列表。 ### 参数: - cell_id: 作品id，可以从分享链接中获取。 - cell_type: 作品类型，1为视频，多大数保持默认值即可。 - offset: 翻页游标，默认为0，后续页码从上一页返回的 &#x60;offset&#x60; Key中获取对应值。 ### 返回: - 作品评论列表  # [English] ### Purpose: - Get the comment list of a post. ### Parameters: - cell_id: AKA video id, can be obtained from the share link. - cell_type: Video type, 1 for video, keep the default value for other types. - offset: Page cursor, default is 0, get the corresponding value from the &#x60;offset&#x60; Key in the previous page. ### Return: - Post comment list  # [示例/Example] cell_id &#x3D; \&quot;7411193113223371043\&quot; cell_type &#x3D; 1 offset &#x3D; \&quot;0\&quot;
    /// </remarks>
    /// <param name="cellId">作品id/Video id</param>
    /// <param name="cellType">作品类型/Video type (optional, default to 0)</param>
    /// <param name="offset">翻页游标/Page cursor (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchPostCommentListApiV1PipixiaAppFetchPostCommentListGet_0(
        utility::string_t cellId,
        boost::optional<int32_t> cellType,
        boost::optional<utility::string_t> offset
    ) const;
    /// <summary>
    /// 获取单个作品数据/Get single video data
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取单个作品数据，支持图文、视频等。 ### 参数: - cell_id: 作品id，可以从分享链接中获取。 - cell_type: 作品类型，1为视频，多大数保持默认值即可。 ### 返回: - 作品数据  # [English] ### Purpose: - Get single video data, support photo, video, etc. ### Parameters: - cell_id: AKA video id, can be obtained from the share link. - cell_type: Video type, 1 for video, keep the default value for other types. ### Return: - Video data  # [示例/Example] cell_id &#x3D; \&quot;7411193113223371043\&quot;
    /// </remarks>
    /// <param name="cellId">作品id/Video id</param>
    /// <param name="cellType">作品类型/Video type (optional, default to 0)</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchPostDetailApiV1PipixiaAppFetchPostDetailGet(
        utility::string_t cellId,
        boost::optional<int32_t> cellType
    ) const;
    /// <summary>
    /// 获取单个作品数据/Get single video data
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取单个作品数据，支持图文、视频等。 ### 参数: - cell_id: 作品id，可以从分享链接中获取。 - cell_type: 作品类型，1为视频，多大数保持默认值即可。 ### 返回: - 作品数据  # [English] ### Purpose: - Get single video data, support photo, video, etc. ### Parameters: - cell_id: AKA video id, can be obtained from the share link. - cell_type: Video type, 1 for video, keep the default value for other types. ### Return: - Video data  # [示例/Example] cell_id &#x3D; \&quot;7411193113223371043\&quot;
    /// </remarks>
    /// <param name="cellId">作品id/Video id</param>
    /// <param name="cellType">作品类型/Video type (optional, default to 0)</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchPostDetailApiV1PipixiaAppFetchPostDetailGet_0(
        utility::string_t cellId,
        boost::optional<int32_t> cellType
    ) const;
    /// <summary>
    /// 获取作品统计数据/Get post statistics
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取单个作品的统计数据，如点赞数、评论数、转发数等。 ### 参数: - cell_id: 作品id，可以从分享链接中获取。 ### 返回: - 作品统计数据  # [English] ### Purpose: - Get the statistics of a single post, such as the number of likes, comments, reposts, etc. ### Parameters: - cell_id: AKA video id, can be obtained from the share link. ### Return: - Post statistics  # [示例/Example] cell_id &#x3D; \&quot;7411193113223371043\&quot;
    /// </remarks>
    /// <param name="cellId">作品id/Video id</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchPostStatisticsApiV1PipixiaAppFetchPostStatisticsGet(
        utility::string_t cellId
    ) const;
    /// <summary>
    /// 获取作品统计数据/Get post statistics
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取单个作品的统计数据，如点赞数、评论数、转发数等。 ### 参数: - cell_id: 作品id，可以从分享链接中获取。 ### 返回: - 作品统计数据  # [English] ### Purpose: - Get the statistics of a single post, such as the number of likes, comments, reposts, etc. ### Parameters: - cell_id: AKA video id, can be obtained from the share link. ### Return: - Post statistics  # [示例/Example] cell_id &#x3D; \&quot;7411193113223371043\&quot;
    /// </remarks>
    /// <param name="cellId">作品id/Video id</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchPostStatisticsApiV1PipixiaAppFetchPostStatisticsGet_0(
        utility::string_t cellId
    ) const;
    /// <summary>
    /// 搜索接口/Search API
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 搜索接口，支持搜索用户、作品等。 ### 参数: - keyword: 搜索关键词。 - offset: 翻页游标，默认为0，后续页码从上一页返回的 &#x60;offset&#x60; Key中获取对应值。 - search_type: 搜索类型，可用值如下：     - 1: 综合     - 8: 热门     - 9: 新鲜     - 2：视频     - 3：图文     - 4：用户     - 5：话题 ### 返回: - 搜索结果  # [English] ### Purpose: - Search API, support search user, post, etc. ### Parameters: - keyword: Search keyword. - offset: Page cursor, default is 0, get the corresponding value from the &#x60;offset&#x60; Key in the previous page. - search_type: Search type, available values are as follows:     - 1: Comprehensive     - 8: Hot     - 9: Fresh     - 2: Video     - 3: Photo     - 4: User     - 5: Hashtag ### Return: - Search result  # [示例/Example] keyword &#x3D; \&quot;皮皮虾\&quot; offset &#x3D; \&quot;0\&quot; search_type &#x3D; \&quot;1\&quot;
    /// </remarks>
    /// <param name="keyword">搜索关键词/Search keyword</param>
    /// <param name="offset">翻页游标/Page cursor (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="searchType">搜索类型/Search type (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchSearchApiV1PipixiaAppFetchSearchGet(
        utility::string_t keyword,
        boost::optional<utility::string_t> offset,
        boost::optional<utility::string_t> searchType
    ) const;
    /// <summary>
    /// 搜索接口/Search API
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 搜索接口，支持搜索用户、作品等。 ### 参数: - keyword: 搜索关键词。 - offset: 翻页游标，默认为0，后续页码从上一页返回的 &#x60;offset&#x60; Key中获取对应值。 - search_type: 搜索类型，可用值如下：     - 1: 综合     - 8: 热门     - 9: 新鲜     - 2：视频     - 3：图文     - 4：用户     - 5：话题 ### 返回: - 搜索结果  # [English] ### Purpose: - Search API, support search user, post, etc. ### Parameters: - keyword: Search keyword. - offset: Page cursor, default is 0, get the corresponding value from the &#x60;offset&#x60; Key in the previous page. - search_type: Search type, available values are as follows:     - 1: Comprehensive     - 8: Hot     - 9: Fresh     - 2: Video     - 3: Photo     - 4: User     - 5: Hashtag ### Return: - Search result  # [示例/Example] keyword &#x3D; \&quot;皮皮虾\&quot; offset &#x3D; \&quot;0\&quot; search_type &#x3D; \&quot;1\&quot;
    /// </remarks>
    /// <param name="keyword">搜索关键词/Search keyword</param>
    /// <param name="offset">翻页游标/Page cursor (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="searchType">搜索类型/Search type (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchSearchApiV1PipixiaAppFetchSearchGet_0(
        utility::string_t keyword,
        boost::optional<utility::string_t> offset,
        boost::optional<utility::string_t> searchType
    ) const;
    /// <summary>
    /// 生成短连接/Generate short URL
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 生成短连接。 ### 参数: - original_url: 原始链接，可以是任意链接。 ### 返回: - 短连接  # [English] ### Purpose: - Generate short URL. ### Parameters: - original_url: Original URL, can be any link. ### Return: - Short URL  # [示例/Example] original_url &#x3D; \&quot;https://h5.pipix.com/item/7385813877985909043\&quot;
    /// </remarks>
    /// <param name="originalUrl">原始链接/Original URL</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchShortUrlApiV1PipixiaAppFetchShortUrlGet(
        utility::string_t originalUrl
    ) const;
    /// <summary>
    /// 生成短连接/Generate short URL
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 生成短连接。 ### 参数: - original_url: 原始链接，可以是任意链接。 ### 返回: - 短连接  # [English] ### Purpose: - Generate short URL. ### Parameters: - original_url: Original URL, can be any link. ### Return: - Short URL  # [示例/Example] original_url &#x3D; \&quot;https://h5.pipix.com/item/7385813877985909043\&quot;
    /// </remarks>
    /// <param name="originalUrl">原始链接/Original URL</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchShortUrlApiV1PipixiaAppFetchShortUrlGet_0(
        utility::string_t originalUrl
    ) const;
    /// <summary>
    /// 获取用户粉丝列表/Get user follower list
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取用户的粉丝列表。 ### 参数: - user_id: 用户id，可以从分享链接中获取。 - cursor: 翻页游标，默认为0，后续页码从上一页返回的 &#x60;loadmore_cursor&#x60; Key中获取对应值。 ### 返回: - 用户粉丝列表  # [English] ### Purpose: - Get user&#39;s follower list. ### Parameters: - user_id: AKA user id, can be obtained from the share link. - cursor: Page cursor, default is 0, get the corresponding value from the &#x60;loadmore_cursor&#x60; Key in the previous page. ### Return: - User follower list  # [示例/Example] user_id &#x3D; \&quot;1310254082831248\&quot; cursor &#x3D; \&quot;0\&quot;
    /// </remarks>
    /// <param name="userId">用户id/User id</param>
    /// <param name="cursor">翻页游标/Page cursor (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchUserFollowerListApiV1PipixiaAppFetchUserFollowerListGet(
        utility::string_t userId,
        boost::optional<utility::string_t> cursor
    ) const;
    /// <summary>
    /// 获取用户粉丝列表/Get user follower list
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取用户的粉丝列表。 ### 参数: - user_id: 用户id，可以从分享链接中获取。 - cursor: 翻页游标，默认为0，后续页码从上一页返回的 &#x60;loadmore_cursor&#x60; Key中获取对应值。 ### 返回: - 用户粉丝列表  # [English] ### Purpose: - Get user&#39;s follower list. ### Parameters: - user_id: AKA user id, can be obtained from the share link. - cursor: Page cursor, default is 0, get the corresponding value from the &#x60;loadmore_cursor&#x60; Key in the previous page. ### Return: - User follower list  # [示例/Example] user_id &#x3D; \&quot;1310254082831248\&quot; cursor &#x3D; \&quot;0\&quot;
    /// </remarks>
    /// <param name="userId">用户id/User id</param>
    /// <param name="cursor">翻页游标/Page cursor (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchUserFollowerListApiV1PipixiaAppFetchUserFollowerListGet_0(
        utility::string_t userId,
        boost::optional<utility::string_t> cursor
    ) const;
    /// <summary>
    /// 获取用户关注列表/Get user following list
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取用户的关注列表。 ### 参数: - user_id: 用户id，可以从分享链接中获取。 - cursor: 翻页游标，默认为0，后续页码从上一页返回的 &#x60;loadmore_cursor&#x60; Key中获取对应值。 ### 返回: - 用户关注列表  # [English] ### Purpose: - Get user&#39;s following list. ### Parameters: - user_id: AKA user id, can be obtained from the share link. - cursor: Page cursor, default is 0, get the corresponding value from the &#x60;loadmore_cursor&#x60; Key in the previous page. ### Return: - User following list  # [示例/Example] user_id &#x3D; \&quot;1310254082831248\&quot; cursor &#x3D; \&quot;0\&quot;
    /// </remarks>
    /// <param name="userId">用户id/User id</param>
    /// <param name="cursor">翻页游标/Page cursor (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchUserFollowingListApiV1PipixiaAppFetchUserFollowingListGet(
        utility::string_t userId,
        boost::optional<utility::string_t> cursor
    ) const;
    /// <summary>
    /// 获取用户关注列表/Get user following list
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取用户的关注列表。 ### 参数: - user_id: 用户id，可以从分享链接中获取。 - cursor: 翻页游标，默认为0，后续页码从上一页返回的 &#x60;loadmore_cursor&#x60; Key中获取对应值。 ### 返回: - 用户关注列表  # [English] ### Purpose: - Get user&#39;s following list. ### Parameters: - user_id: AKA user id, can be obtained from the share link. - cursor: Page cursor, default is 0, get the corresponding value from the &#x60;loadmore_cursor&#x60; Key in the previous page. ### Return: - User following list  # [示例/Example] user_id &#x3D; \&quot;1310254082831248\&quot; cursor &#x3D; \&quot;0\&quot;
    /// </remarks>
    /// <param name="userId">用户id/User id</param>
    /// <param name="cursor">翻页游标/Page cursor (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchUserFollowingListApiV1PipixiaAppFetchUserFollowingListGet_0(
        utility::string_t userId,
        boost::optional<utility::string_t> cursor
    ) const;
    /// <summary>
    /// 获取用户信息/Get user information
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取用户信息，如昵称、性别、头像等。 ### 参数: - user_id: 用户id，可以从分享链接中获取。 ### 返回: - 用户信息  # [English] ### Purpose: - Get user information, such as nickname and avatar. ### Parameters: - user_id: AKA user id, can be obtained from the share link. ### Return: - User information  # [示例/Example] user_id &#x3D; \&quot;1310254082831248\&quot;
    /// </remarks>
    /// <param name="userId">用户id/User id</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchUserInfoApiV1PipixiaAppFetchUserInfoGet(
        utility::string_t userId
    ) const;
    /// <summary>
    /// 获取用户信息/Get user information
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取用户信息，如昵称、性别、头像等。 ### 参数: - user_id: 用户id，可以从分享链接中获取。 ### 返回: - 用户信息  # [English] ### Purpose: - Get user information, such as nickname and avatar. ### Parameters: - user_id: AKA user id, can be obtained from the share link. ### Return: - User information  # [示例/Example] user_id &#x3D; \&quot;1310254082831248\&quot;
    /// </remarks>
    /// <param name="userId">用户id/User id</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchUserInfoApiV1PipixiaAppFetchUserInfoGet_0(
        utility::string_t userId
    ) const;
    /// <summary>
    /// 获取用户作品列表/Get user post list
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取用户作品列表，如视频、图文等。 ### 参数: - user_id: 用户id，可以从分享链接中获取。 - cursor: 翻页游标，默认为0，后续页码从上一页返回的 &#x60;loadmore_cursor&#x60; Key中获取对应值。 - feed_count: 翻页数量，默认为0，后续每次翻页加1，比如第一页为0，第二页为1，第三页为2，以此类推。 ### 返回: - 用户作品列表  # [English] ### Purpose: - Get user post list, such as videos, photos, etc. ### Parameters: - user_id: AKA user id, can be obtained from the share link. - cursor: Page cursor, default is 0, get the corresponding value from the &#x60;loadmore_cursor&#x60; Key in the previous page. - feed_count: Page count, default is 0, add 1 for each page, such as 0 for the first page, 1 for the second page, 2 for the third page, and so on. ### Return: - User post list  # [示例/Example] user_id &#x3D; \&quot;1310254082831248\&quot; cursor &#x3D; \&quot;0\&quot; feed_count &#x3D; \&quot;0\&quot;
    /// </remarks>
    /// <param name="userId">用户id/User id</param>
    /// <param name="cursor">翻页游标/Page cursor (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="feedCount">翻页数量/Page count (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchUserPostListApiV1PipixiaAppFetchUserPostListGet(
        utility::string_t userId,
        boost::optional<utility::string_t> cursor,
        boost::optional<utility::string_t> feedCount
    ) const;
    /// <summary>
    /// 获取用户作品列表/Get user post list
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取用户作品列表，如视频、图文等。 ### 参数: - user_id: 用户id，可以从分享链接中获取。 - cursor: 翻页游标，默认为0，后续页码从上一页返回的 &#x60;loadmore_cursor&#x60; Key中获取对应值。 - feed_count: 翻页数量，默认为0，后续每次翻页加1，比如第一页为0，第二页为1，第三页为2，以此类推。 ### 返回: - 用户作品列表  # [English] ### Purpose: - Get user post list, such as videos, photos, etc. ### Parameters: - user_id: AKA user id, can be obtained from the share link. - cursor: Page cursor, default is 0, get the corresponding value from the &#x60;loadmore_cursor&#x60; Key in the previous page. - feed_count: Page count, default is 0, add 1 for each page, such as 0 for the first page, 1 for the second page, 2 for the third page, and so on. ### Return: - User post list  # [示例/Example] user_id &#x3D; \&quot;1310254082831248\&quot; cursor &#x3D; \&quot;0\&quot; feed_count &#x3D; \&quot;0\&quot;
    /// </remarks>
    /// <param name="userId">用户id/User id</param>
    /// <param name="cursor">翻页游标/Page cursor (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="feedCount">翻页数量/Page count (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchUserPostListApiV1PipixiaAppFetchUserPostListGet_0(
        utility::string_t userId,
        boost::optional<utility::string_t> cursor,
        boost::optional<utility::string_t> feedCount
    ) const;

protected:
    std::shared_ptr<const ApiClient> m_ApiClient;
};

}
}
}
}

#endif /* IO_TIKHUB_CLIENT_API_PiPiXiaAppAPIApi_H_ */

