/**
 * TikHub.io - Your Ultimate Social Media Data & API Marketplace
 * High-performance asynchronous Douyin(抖音) TikTok Xiaohongshu(小红书) Kuaishou(快手) Weibo(微博) Instagram YouTube(油管) Twitter(X) Captcha Solver(验证码解决器) Temp Mail(临时邮箱) API(接口).
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.3.1.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * KuaishouWebAPIApi.h
 *
 * 
 */

#ifndef IO_TIKHUB_CLIENT_API_KuaishouWebAPIApi_H_
#define IO_TIKHUB_CLIENT_API_KuaishouWebAPIApi_H_


#include "../ApiClient.h"

#include "HttpValidationError.h"
#include "ResponseModel.h"
#include <cpprest/details/basic_types.h>


#include <boost/optional.hpp>

namespace io {
namespace tikhub {
namespace client {
namespace api {

using namespace org::openapitools::client::model;



class  KuaishouWebAPIApi 
{
public:

    explicit KuaishouWebAPIApi( std::shared_ptr<const ApiClient> apiClient );

    virtual ~KuaishouWebAPIApi();

    /// <summary>
    /// 根据链接获取单个作品数据/Fetch single video by URL
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 根据链接获取单个作品数据 ### 参数: - url: 作品链接 ### 返回: - 视频数据  # [English] ### Purpose: - Fetch single video by URL ### Parameters: - url: Photo URL ### Returns: - Video data  # [示例/Example] url &#x3D; \&quot;https://v.kuaishou.com/GKTpYm\&quot;
    /// </remarks>
    /// <param name="url"></param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchOneVideoByUrlApiV1KuaishouWebFetchOneVideoByUrlGet(
        utility::string_t url
    ) const;
    /// <summary>
    /// 根据链接获取单个作品数据/Fetch single video by URL
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 根据链接获取单个作品数据 ### 参数: - url: 作品链接 ### 返回: - 视频数据  # [English] ### Purpose: - Fetch single video by URL ### Parameters: - url: Photo URL ### Returns: - Video data  # [示例/Example] url &#x3D; \&quot;https://v.kuaishou.com/GKTpYm\&quot;
    /// </remarks>
    /// <param name="url"></param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchOneVideoByUrlApiV1KuaishouWebFetchOneVideoByUrlGet_0(
        utility::string_t url
    ) const;
    /// <summary>
    /// 快手单一视频查询接口V2/Kuaishou single video query API V2
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 快手单一视频查询接口V2 ### 参数: - photo_id: 作品ID，作品ID可以从作品链接中提取 ### 返回: - 视频数据  # [English] ### Purpose: - Kuaishou single video query API V2 ### Parameters: - photo_id: Photo ID, the photo ID can be extracted from the photo link ### Returns: - Video data  # [示例/Example] photo_id &#x3D; \&quot;3xtdqvdnqd3psuc\&quot;
    /// </remarks>
    /// <param name="photoId"></param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchOneVideoV2ApiV1KuaishouWebFetchOneVideoV2Get(
        utility::string_t photoId
    ) const;
    /// <summary>
    /// 快手单一视频查询接口V2/Kuaishou single video query API V2
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 快手单一视频查询接口V2 ### 参数: - photo_id: 作品ID，作品ID可以从作品链接中提取 ### 返回: - 视频数据  # [English] ### Purpose: - Kuaishou single video query API V2 ### Parameters: - photo_id: Photo ID, the photo ID can be extracted from the photo link ### Returns: - Video data  # [示例/Example] photo_id &#x3D; \&quot;3xtdqvdnqd3psuc\&quot;
    /// </remarks>
    /// <param name="photoId"></param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchOneVideoV2ApiV1KuaishouWebFetchOneVideoV2Get_0(
        utility::string_t photoId
    ) const;

protected:
    std::shared_ptr<const ApiClient> m_ApiClient;
};

}
}
}
}

#endif /* IO_TIKHUB_CLIENT_API_KuaishouWebAPIApi_H_ */

