/**
 * TikHub.io - Your Ultimate Social Media Data & API Marketplace
 * High-performance asynchronous Douyin(抖音) TikTok Xiaohongshu(小红书) Kuaishou(快手) Weibo(微博) Instagram YouTube(油管) Twitter(X) Captcha Solver(验证码解决器) Temp Mail(临时邮箱) API(接口).
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.3.1.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * ZhihuWebAPIApi.h
 *
 * 
 */

#ifndef IO_TIKHUB_CLIENT_API_ZhihuWebAPIApi_H_
#define IO_TIKHUB_CLIENT_API_ZhihuWebAPIApi_H_


#include "../ApiClient.h"

#include "HttpValidationError.h"
#include "ResponseModel.h"
#include <cpprest/details/basic_types.h>


#include <boost/optional.hpp>

namespace io {
namespace tikhub {
namespace client {
namespace api {

using namespace org::openapitools::client::model;



class  ZhihuWebAPIApi 
{
public:

    explicit ZhihuWebAPIApi( std::shared_ptr<const ApiClient> apiClient );

    virtual ~ZhihuWebAPIApi();

    /// <summary>
    /// 获取知乎AI搜索/Get Zhihu AI Search
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取知乎AI搜索 ### 参数: - message_content: 搜索内容 ### 返回: - 知乎AI搜索消息ID，用于请求搜索结果  # [English] ### Purpose: - Get Zhihu AI Search ### Parameters: - message_content: Search Content ### Returns: - Zhihu AI Search Message ID for requesting search results  # [示例/Example] message_content &#x3D; \&quot;deepseek\&quot;
    /// </remarks>
    /// <param name="messageContent">搜索内容/Search Content</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchAiSearchApiV1ZhihuWebFetchAiSearchGet(
        utility::string_t messageContent
    ) const;
    /// <summary>
    /// 获取知乎AI搜索/Get Zhihu AI Search
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取知乎AI搜索 ### 参数: - message_content: 搜索内容 ### 返回: - 知乎AI搜索消息ID，用于请求搜索结果  # [English] ### Purpose: - Get Zhihu AI Search ### Parameters: - message_content: Search Content ### Returns: - Zhihu AI Search Message ID for requesting search results  # [示例/Example] message_content &#x3D; \&quot;deepseek\&quot;
    /// </remarks>
    /// <param name="messageContent">搜索内容/Search Content</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchAiSearchApiV1ZhihuWebFetchAiSearchGet_0(
        utility::string_t messageContent
    ) const;
    /// <summary>
    /// 获取知乎AI搜索结果/Get Zhihu AI Search Result
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取知乎AI搜索结果 ### 参数: - message_id: 消息ID ### 返回: - 知乎AI搜索结果  # [English] ### Purpose: - Get Zhihu AI Search Result ### Parameters: - message_id: Message ID ### Returns: - Zhihu AI Search Result  # [示例/Example] message_id &#x3D; \&quot;5f8b4f4a-0b7c-4d1b-8c4f-2e5c0d6c1b9d\&quot;
    /// </remarks>
    /// <param name="messageId">消息ID/Message ID</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchAiSearchResultApiV1ZhihuWebFetchAiSearchResultGet(
        utility::string_t messageId
    ) const;
    /// <summary>
    /// 获取知乎AI搜索结果/Get Zhihu AI Search Result
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取知乎AI搜索结果 ### 参数: - message_id: 消息ID ### 返回: - 知乎AI搜索结果  # [English] ### Purpose: - Get Zhihu AI Search Result ### Parameters: - message_id: Message ID ### Returns: - Zhihu AI Search Result  # [示例/Example] message_id &#x3D; \&quot;5f8b4f4a-0b7c-4d1b-8c4f-2e5c0d6c1b9d\&quot;
    /// </remarks>
    /// <param name="messageId">消息ID/Message ID</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchAiSearchResultApiV1ZhihuWebFetchAiSearchResultGet_0(
        utility::string_t messageId
    ) const;
    /// <summary>
    /// 获取知乎文章搜索V3/Get Zhihu Article Search V3
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取知乎文章搜索V3 ### 参数: - keyword: 搜索关键词 - offset: 偏移量 - limit: 每页文章数量 - show_all_topics: 显示所有主题，     - 0 不显示话题     - 1 显示话题 - search_source: 搜索来源     - Filter 过滤参数生效     - Normal 为普通结果 - search_hash_id: 搜索哈希ID，用于过滤重复搜索结果 - vertical: 空 不限类型     - answer 只看回答     - article 只看文章     - zvideo 只看视频 - sort: 空 综合排序     - upvoted_count 最多赞同     - created_time 最新发布 - time_interval: 时间间隔     - 空 不限时间     - a_day 一天内     - a_week 一周内     - a_month 一个月内     - three_months 三个月内     - half_a_year 半年内     - a_year 一年内 - vertical_info: 垂类信息     - 0,0,0,0,0,0,0,0,0,0,0,0 不限类型，不会设置勿填 ### 返回: - 知乎文章搜索V3  # [English] ### Purpose: - Get Zhihu Article Search V3 ### Parameters: - keyword: Search Keywords - offset: Offset - limit: Number of articles per page - show_all_topics: Show all topics     - 0 Do not show topics     - 1 Show topics - search_source: Search Source     - Filter parameter takes effect     - Normal is normal result - search_hash_id: Search Hash ID, used to filter duplicate search results - vertical: Empty unlimited type     - answer only see answers     - article only see articles     - zvideo only see videos - sort: Empty comprehensive sorting     - upvoted_count most upvoted     - created_time latest release - time_interval: Time interval     - Empty unlimited time     - a_day within a day     - a_week within a week     - a_month within a month     - three_months within three months     - half_a_year within half a year     - a_year within a year - vertical_info: Vertical information     - 0,0,0,0,0,0,0,0,0,0,0,0 unlimited type, do not set do not fill ### Returns: - Zhihu Article Search V3  # [示例/Example] # 默认搜索，综合排序，不限时间 keyword &#x3D; \&quot;deepseek\&quot; offset &#x3D; \&quot;0\&quot; limit &#x3D; \&quot;20\&quot; show_all_topics &#x3D; 0 search_source &#x3D; \&quot;Normal\&quot; search_hash_id &#x3D; \&quot;\&quot; vertical &#x3D; \&quot;\&quot; sort &#x3D; \&quot;\&quot; time_interval &#x3D; \&quot;\&quot; vertical_info &#x3D; \&quot;\&quot;  # 只看回答，最多赞同，三月内 keyword &#x3D; \&quot;deepseek\&quot; offset &#x3D; \&quot;0\&quot; limit &#x3D; \&quot;20\&quot; show_all_topics &#x3D; 0 search_source &#x3D; \&quot;Filter\&quot; search_hash_id &#x3D; \&quot;\&quot; vertical &#x3D; \&quot;answer\&quot; sort &#x3D; \&quot;upvoted_count\&quot; time_interval &#x3D; \&quot;three_months\&quot; vertical_info &#x3D; \&quot;0,0,0,0,0,0,0,0,0,0,0,0\&quot;
    /// </remarks>
    /// <param name="keyword">搜索关键词/Search Keywords</param>
    /// <param name="offset">偏移量/Offset (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="limit">每页文章数量/Number of articles per page (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="showAllTopics">显示所有主题/Show all topics (optional, default to 0)</param>
    /// <param name="searchSource">搜索来源/Search Source (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="searchHashId">搜索哈希ID/Search Hash ID (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="vertical">垂类/Vertical Type (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="sort">排序/Sort (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="timeInterval">时间间隔/Time Interval (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="verticalInfo">垂类信息/Vertical Info (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchArticleSearchV3ApiV1ZhihuWebFetchArticleSearchV3Get(
        utility::string_t keyword,
        boost::optional<utility::string_t> offset,
        boost::optional<utility::string_t> limit,
        boost::optional<int32_t> showAllTopics,
        boost::optional<utility::string_t> searchSource,
        boost::optional<utility::string_t> searchHashId,
        boost::optional<utility::string_t> vertical,
        boost::optional<utility::string_t> sort,
        boost::optional<utility::string_t> timeInterval,
        boost::optional<utility::string_t> verticalInfo
    ) const;
    /// <summary>
    /// 获取知乎文章搜索V3/Get Zhihu Article Search V3
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取知乎文章搜索V3 ### 参数: - keyword: 搜索关键词 - offset: 偏移量 - limit: 每页文章数量 - show_all_topics: 显示所有主题，     - 0 不显示话题     - 1 显示话题 - search_source: 搜索来源     - Filter 过滤参数生效     - Normal 为普通结果 - search_hash_id: 搜索哈希ID，用于过滤重复搜索结果 - vertical: 空 不限类型     - answer 只看回答     - article 只看文章     - zvideo 只看视频 - sort: 空 综合排序     - upvoted_count 最多赞同     - created_time 最新发布 - time_interval: 时间间隔     - 空 不限时间     - a_day 一天内     - a_week 一周内     - a_month 一个月内     - three_months 三个月内     - half_a_year 半年内     - a_year 一年内 - vertical_info: 垂类信息     - 0,0,0,0,0,0,0,0,0,0,0,0 不限类型，不会设置勿填 ### 返回: - 知乎文章搜索V3  # [English] ### Purpose: - Get Zhihu Article Search V3 ### Parameters: - keyword: Search Keywords - offset: Offset - limit: Number of articles per page - show_all_topics: Show all topics     - 0 Do not show topics     - 1 Show topics - search_source: Search Source     - Filter parameter takes effect     - Normal is normal result - search_hash_id: Search Hash ID, used to filter duplicate search results - vertical: Empty unlimited type     - answer only see answers     - article only see articles     - zvideo only see videos - sort: Empty comprehensive sorting     - upvoted_count most upvoted     - created_time latest release - time_interval: Time interval     - Empty unlimited time     - a_day within a day     - a_week within a week     - a_month within a month     - three_months within three months     - half_a_year within half a year     - a_year within a year - vertical_info: Vertical information     - 0,0,0,0,0,0,0,0,0,0,0,0 unlimited type, do not set do not fill ### Returns: - Zhihu Article Search V3  # [示例/Example] # 默认搜索，综合排序，不限时间 keyword &#x3D; \&quot;deepseek\&quot; offset &#x3D; \&quot;0\&quot; limit &#x3D; \&quot;20\&quot; show_all_topics &#x3D; 0 search_source &#x3D; \&quot;Normal\&quot; search_hash_id &#x3D; \&quot;\&quot; vertical &#x3D; \&quot;\&quot; sort &#x3D; \&quot;\&quot; time_interval &#x3D; \&quot;\&quot; vertical_info &#x3D; \&quot;\&quot;  # 只看回答，最多赞同，三月内 keyword &#x3D; \&quot;deepseek\&quot; offset &#x3D; \&quot;0\&quot; limit &#x3D; \&quot;20\&quot; show_all_topics &#x3D; 0 search_source &#x3D; \&quot;Filter\&quot; search_hash_id &#x3D; \&quot;\&quot; vertical &#x3D; \&quot;answer\&quot; sort &#x3D; \&quot;upvoted_count\&quot; time_interval &#x3D; \&quot;three_months\&quot; vertical_info &#x3D; \&quot;0,0,0,0,0,0,0,0,0,0,0,0\&quot;
    /// </remarks>
    /// <param name="keyword">搜索关键词/Search Keywords</param>
    /// <param name="offset">偏移量/Offset (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="limit">每页文章数量/Number of articles per page (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="showAllTopics">显示所有主题/Show all topics (optional, default to 0)</param>
    /// <param name="searchSource">搜索来源/Search Source (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="searchHashId">搜索哈希ID/Search Hash ID (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="vertical">垂类/Vertical Type (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="sort">排序/Sort (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="timeInterval">时间间隔/Time Interval (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="verticalInfo">垂类信息/Vertical Info (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchArticleSearchV3ApiV1ZhihuWebFetchArticleSearchV3Get_0(
        utility::string_t keyword,
        boost::optional<utility::string_t> offset,
        boost::optional<utility::string_t> limit,
        boost::optional<int32_t> showAllTopics,
        boost::optional<utility::string_t> searchSource,
        boost::optional<utility::string_t> searchHashId,
        boost::optional<utility::string_t> vertical,
        boost::optional<utility::string_t> sort,
        boost::optional<utility::string_t> timeInterval,
        boost::optional<utility::string_t> verticalInfo
    ) const;
    /// <summary>
    /// 获取知乎专栏文章详情/Get Zhihu Column Article Detail
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取知乎专栏文章详情 ### 参数: - article_id: 文章ID ### 返回: - 知乎专栏文章详情  # [English] ### Purpose: - Get Zhihu Column Article Detail ### Parameters: - article_id: Article ID ### Returns: - Zhihu Column Article Detail  # [示例/Example] article_id &#x3D; \&quot;669214677\&quot;
    /// </remarks>
    /// <param name="articleId">文章ID/Article ID</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchColumnArticleDetailApiV1ZhihuWebFetchColumnArticleDetailGet(
        utility::string_t articleId
    ) const;
    /// <summary>
    /// 获取知乎专栏文章详情/Get Zhihu Column Article Detail
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取知乎专栏文章详情 ### 参数: - article_id: 文章ID ### 返回: - 知乎专栏文章详情  # [English] ### Purpose: - Get Zhihu Column Article Detail ### Parameters: - article_id: Article ID ### Returns: - Zhihu Column Article Detail  # [示例/Example] article_id &#x3D; \&quot;669214677\&quot;
    /// </remarks>
    /// <param name="articleId">文章ID/Article ID</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchColumnArticleDetailApiV1ZhihuWebFetchColumnArticleDetailGet_0(
        utility::string_t articleId
    ) const;
    /// <summary>
    /// 获取知乎专栏文章列表/Get Zhihu Column Articles
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取知乎专栏文章列表 ### 参数: - column_id: 专栏ID - limit: 每页文章数量 - offset: 偏移量 ### 返回: - 知乎专栏文章列表  # [English] ### Purpose: - Get Zhihu Column Articles ### Parameters: - column_id: Column ID - limit: Number of articles per page - offset: Offset ### Returns: - Zhihu Column Articles  # [示例/Example] column_id &#x3D; \&quot;zhangjiawei\&quot; limit &#x3D; \&quot;10\&quot; offset &#x3D; \&quot;0\&quot;
    /// </remarks>
    /// <param name="columnId">专栏ID/Column ID</param>
    /// <param name="limit">每页文章数量/Number of articles per page (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="offset">偏移量/Offset (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchColumnArticlesApiV1ZhihuWebFetchColumnArticlesGet(
        utility::string_t columnId,
        boost::optional<utility::string_t> limit,
        boost::optional<utility::string_t> offset
    ) const;
    /// <summary>
    /// 获取知乎专栏文章列表/Get Zhihu Column Articles
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取知乎专栏文章列表 ### 参数: - column_id: 专栏ID - limit: 每页文章数量 - offset: 偏移量 ### 返回: - 知乎专栏文章列表  # [English] ### Purpose: - Get Zhihu Column Articles ### Parameters: - column_id: Column ID - limit: Number of articles per page - offset: Offset ### Returns: - Zhihu Column Articles  # [示例/Example] column_id &#x3D; \&quot;zhangjiawei\&quot; limit &#x3D; \&quot;10\&quot; offset &#x3D; \&quot;0\&quot;
    /// </remarks>
    /// <param name="columnId">专栏ID/Column ID</param>
    /// <param name="limit">每页文章数量/Number of articles per page (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="offset">偏移量/Offset (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchColumnArticlesApiV1ZhihuWebFetchColumnArticlesGet_0(
        utility::string_t columnId,
        boost::optional<utility::string_t> limit,
        boost::optional<utility::string_t> offset
    ) const;
    /// <summary>
    /// 获取知乎专栏评论区配置/Get Zhihu Column Comment Config
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取知乎专栏评论区配置 ### 参数: - article_id: 文章ID ### 返回: - 知乎专栏评论区配置  # [English] ### Purpose: - Get Zhihu Column Comment Config ### Parameters: - article_id: Article ID ### Returns: - Zhihu Column Comment Config  # [示例/Example] article_id &#x3D; \&quot;669214677\&quot;
    /// </remarks>
    /// <param name="articleId">文章ID/Article ID</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchColumnCommentConfigApiV1ZhihuWebFetchColumnCommentConfigGet(
        utility::string_t articleId
    ) const;
    /// <summary>
    /// 获取知乎专栏评论区配置/Get Zhihu Column Comment Config
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取知乎专栏评论区配置 ### 参数: - article_id: 文章ID ### 返回: - 知乎专栏评论区配置  # [English] ### Purpose: - Get Zhihu Column Comment Config ### Parameters: - article_id: Article ID ### Returns: - Zhihu Column Comment Config  # [示例/Example] article_id &#x3D; \&quot;669214677\&quot;
    /// </remarks>
    /// <param name="articleId">文章ID/Article ID</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchColumnCommentConfigApiV1ZhihuWebFetchColumnCommentConfigGet_0(
        utility::string_t articleId
    ) const;
    /// <summary>
    /// 获取知乎相似专栏推荐/Get Zhihu Similar Column Recommend
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取知乎相似专栏推荐 ### 参数: - article_id: 文章ID - limit: 每页专栏数量 - offset: 偏移量 ### 返回: - 知乎相似专栏推荐  # [English] ### Purpose: - Get Zhihu Similar Column Recommend ### Parameters: - article_id: Article ID - limit: Number of columns per page - offset: Offset ### Returns: - Zhihu Similar Column Recommend  # [示例/Example] article_id &#x3D; \&quot;669214677\&quot; limit &#x3D; \&quot;12\&quot; offset &#x3D; \&quot;0\&quot;
    /// </remarks>
    /// <param name="articleId">文章ID/Article ID</param>
    /// <param name="limit">每页专栏数量/Number of columns per page (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="offset">偏移量/Offset (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchColumnRecommendApiV1ZhihuWebFetchColumnRecommendGet(
        utility::string_t articleId,
        boost::optional<utility::string_t> limit,
        boost::optional<utility::string_t> offset
    ) const;
    /// <summary>
    /// 获取知乎相似专栏推荐/Get Zhihu Similar Column Recommend
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取知乎相似专栏推荐 ### 参数: - article_id: 文章ID - limit: 每页专栏数量 - offset: 偏移量 ### 返回: - 知乎相似专栏推荐  # [English] ### Purpose: - Get Zhihu Similar Column Recommend ### Parameters: - article_id: Article ID - limit: Number of columns per page - offset: Offset ### Returns: - Zhihu Similar Column Recommend  # [示例/Example] article_id &#x3D; \&quot;669214677\&quot; limit &#x3D; \&quot;12\&quot; offset &#x3D; \&quot;0\&quot;
    /// </remarks>
    /// <param name="articleId">文章ID/Article ID</param>
    /// <param name="limit">每页专栏数量/Number of columns per page (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="offset">偏移量/Offset (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchColumnRecommendApiV1ZhihuWebFetchColumnRecommendGet_0(
        utility::string_t articleId,
        boost::optional<utility::string_t> limit,
        boost::optional<utility::string_t> offset
    ) const;
    /// <summary>
    /// 获取知乎专栏文章互动关系/Get Zhihu Column Article Relationship
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取知乎专栏文章互动关系 ### 参数: - article_id: 文章ID ### 返回: - 知乎专栏互动关系  # [English] ### Purpose: - Get Zhihu Column Relationship ### Parameters: - article_id: Article ID ### Returns: - Zhihu Column Relationship  # [示例/Example] article_id &#x3D; \&quot;669214677\&quot;
    /// </remarks>
    /// <param name="articleId">文章ID/Article ID</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchColumnRelationshipApiV1ZhihuWebFetchColumnRelationshipGet(
        utility::string_t articleId
    ) const;
    /// <summary>
    /// 获取知乎专栏文章互动关系/Get Zhihu Column Article Relationship
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取知乎专栏文章互动关系 ### 参数: - article_id: 文章ID ### 返回: - 知乎专栏互动关系  # [English] ### Purpose: - Get Zhihu Column Relationship ### Parameters: - article_id: Article ID ### Returns: - Zhihu Column Relationship  # [示例/Example] article_id &#x3D; \&quot;669214677\&quot;
    /// </remarks>
    /// <param name="articleId">文章ID/Article ID</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchColumnRelationshipApiV1ZhihuWebFetchColumnRelationshipGet_0(
        utility::string_t articleId
    ) const;
    /// <summary>
    /// 获取知乎专栏搜索V3/Get Zhihu Column Search V3
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取知乎专栏搜索V3 ### 参数: - keyword: 搜索关键词 - offset: 偏移量 - limit: 每页专栏数量 - search_hash_id: 搜索哈希ID ### 返回: - 知乎专栏搜索V3  # [English] ### Purpose: - Get Zhihu Column Search V3 ### Parameters: - keyword: Search Keywords - offset: Offset - limit: Number of columns per page - search_hash_id: Search Hash ID ### Returns: - Zhihu Column Search V3  # [示例/Example] keyword &#x3D; \&quot;deepseek\&quot; limit &#x3D; \&quot;20\&quot; offset &#x3D; \&quot;0\&quot; search_hash_id &#x3D; \&quot;\&quot;
    /// </remarks>
    /// <param name="keyword">搜索关键词/Search Keywords</param>
    /// <param name="offset">偏移量/Offset (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="limit">每页专栏数量/Number of columns per page (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="searchHashId">搜索哈希ID/Search Hash ID (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchColumnSearchV3ApiV1ZhihuWebFetchColumnSearchV3Get(
        utility::string_t keyword,
        boost::optional<utility::string_t> offset,
        boost::optional<utility::string_t> limit,
        boost::optional<utility::string_t> searchHashId
    ) const;
    /// <summary>
    /// 获取知乎专栏搜索V3/Get Zhihu Column Search V3
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取知乎专栏搜索V3 ### 参数: - keyword: 搜索关键词 - offset: 偏移量 - limit: 每页专栏数量 - search_hash_id: 搜索哈希ID ### 返回: - 知乎专栏搜索V3  # [English] ### Purpose: - Get Zhihu Column Search V3 ### Parameters: - keyword: Search Keywords - offset: Offset - limit: Number of columns per page - search_hash_id: Search Hash ID ### Returns: - Zhihu Column Search V3  # [示例/Example] keyword &#x3D; \&quot;deepseek\&quot; limit &#x3D; \&quot;20\&quot; offset &#x3D; \&quot;0\&quot; search_hash_id &#x3D; \&quot;\&quot;
    /// </remarks>
    /// <param name="keyword">搜索关键词/Search Keywords</param>
    /// <param name="offset">偏移量/Offset (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="limit">每页专栏数量/Number of columns per page (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="searchHashId">搜索哈希ID/Search Hash ID (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchColumnSearchV3ApiV1ZhihuWebFetchColumnSearchV3Get_0(
        utility::string_t keyword,
        boost::optional<utility::string_t> offset,
        boost::optional<utility::string_t> limit,
        boost::optional<utility::string_t> searchHashId
    ) const;
    /// <summary>
    /// 获取知乎评论区V5/Get Zhihu Comment V5
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取知乎评论区V5 ### 参数: - answer_id: 回答ID - order_by: 排序     - score 最热排序     - ts 最新排序 - limit: 每页评论数量 - offset: 偏移量/页码 ### 返回: - 知乎评论区V5  # [English] ### Purpose: - Get Zhihu Comment V5 ### Parameters: - answer_id: Answer ID - order_by: Sort     - score Hottest Sort     - ts Latest Sort - limit: Number of comments per page - offset: Offset/Page Number ### Returns: - Zhihu Comment V5  # [示例/Example] answer_id &#x3D; \&quot;89226347214\&quot; order_by &#x3D; \&quot;score\&quot; limit &#x3D; \&quot;20\&quot; offset &#x3D; \&quot;\&quot; # 1739257701_11108372663_0
    /// </remarks>
    /// <param name="answerId">回答ID/Answer ID</param>
    /// <param name="orderBy">排序/Sort (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="limit">每页评论数量/Number of comments per page (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="offset">偏移量/Offset (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchCommentV5ApiV1ZhihuWebFetchCommentV5Get(
        utility::string_t answerId,
        boost::optional<utility::string_t> orderBy,
        boost::optional<utility::string_t> limit,
        boost::optional<utility::string_t> offset
    ) const;
    /// <summary>
    /// 获取知乎评论区V5/Get Zhihu Comment V5
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取知乎评论区V5 ### 参数: - answer_id: 回答ID - order_by: 排序     - score 最热排序     - ts 最新排序 - limit: 每页评论数量 - offset: 偏移量/页码 ### 返回: - 知乎评论区V5  # [English] ### Purpose: - Get Zhihu Comment V5 ### Parameters: - answer_id: Answer ID - order_by: Sort     - score Hottest Sort     - ts Latest Sort - limit: Number of comments per page - offset: Offset/Page Number ### Returns: - Zhihu Comment V5  # [示例/Example] answer_id &#x3D; \&quot;89226347214\&quot; order_by &#x3D; \&quot;score\&quot; limit &#x3D; \&quot;20\&quot; offset &#x3D; \&quot;\&quot; # 1739257701_11108372663_0
    /// </remarks>
    /// <param name="answerId">回答ID/Answer ID</param>
    /// <param name="orderBy">排序/Sort (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="limit">每页评论数量/Number of comments per page (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="offset">偏移量/Offset (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchCommentV5ApiV1ZhihuWebFetchCommentV5Get_0(
        utility::string_t answerId,
        boost::optional<utility::string_t> orderBy,
        boost::optional<utility::string_t> limit,
        boost::optional<utility::string_t> offset
    ) const;
    /// <summary>
    /// 获取知乎电子书搜索V3/Get Zhihu Ebook Search V3
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取知乎电子书搜索V3 ### 参数: - keyword: 搜索关键词 - offset: 偏移量 - limit: 每页电子书数量 - search_hash_id: 搜索哈希ID ### 返回: - 知乎电子书搜索V3  # [English] ### Purpose: - Get Zhihu Ebook Search V3 ### Parameters: - keyword: Search Keywords - offset: Offset - limit: Number of ebooks per page - search_hash_id: Search Hash ID ### Returns: - Zhihu Ebook Search V3  # [示例/Example] keyword &#x3D; \&quot;deepseek\&quot; limit &#x3D; \&quot;20\&quot; offset &#x3D; \&quot;0\&quot; search_hash_id &#x3D; \&quot;\&quot;
    /// </remarks>
    /// <param name="keyword">搜索关键词/Search Keywords</param>
    /// <param name="offset">偏移量/Offset (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="limit">每页电子书数量/Number of ebooks per page (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="searchHashId">搜索哈希ID/Search Hash ID (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchEbookSearchV3ApiV1ZhihuWebFetchEbookSearchV3Get(
        utility::string_t keyword,
        boost::optional<utility::string_t> offset,
        boost::optional<utility::string_t> limit,
        boost::optional<utility::string_t> searchHashId
    ) const;
    /// <summary>
    /// 获取知乎电子书搜索V3/Get Zhihu Ebook Search V3
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取知乎电子书搜索V3 ### 参数: - keyword: 搜索关键词 - offset: 偏移量 - limit: 每页电子书数量 - search_hash_id: 搜索哈希ID ### 返回: - 知乎电子书搜索V3  # [English] ### Purpose: - Get Zhihu Ebook Search V3 ### Parameters: - keyword: Search Keywords - offset: Offset - limit: Number of ebooks per page - search_hash_id: Search Hash ID ### Returns: - Zhihu Ebook Search V3  # [示例/Example] keyword &#x3D; \&quot;deepseek\&quot; limit &#x3D; \&quot;20\&quot; offset &#x3D; \&quot;0\&quot; search_hash_id &#x3D; \&quot;\&quot;
    /// </remarks>
    /// <param name="keyword">搜索关键词/Search Keywords</param>
    /// <param name="offset">偏移量/Offset (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="limit">每页电子书数量/Number of ebooks per page (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="searchHashId">搜索哈希ID/Search Hash ID (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchEbookSearchV3ApiV1ZhihuWebFetchEbookSearchV3Get_0(
        utility::string_t keyword,
        boost::optional<utility::string_t> offset,
        boost::optional<utility::string_t> limit,
        boost::optional<utility::string_t> searchHashId
    ) const;
    /// <summary>
    /// 获取知乎首页热榜/Get Zhihu Hot List
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取知乎首页热榜 ### 参数: - limit: 每页文章数量 - desktop: 是否为桌面端 ### 返回: - 知乎首页热榜  # [English] ### Purpose: - Get Zhihu Hot List ### Parameters: - limit: Number of articles per page - desktop: Is it a desktop ### Returns: - Zhihu Hot List  # [示例/Example] limit &#x3D; \&quot;50\&quot; desktop &#x3D; \&quot;true\&quot;
    /// </remarks>
    /// <param name="limit">每页文章数量/Number of articles per page (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="desktop">是否为桌面端/Is it a desktop (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchHotListApiV1ZhihuWebFetchHotListGet(
        boost::optional<utility::string_t> limit,
        boost::optional<utility::string_t> desktop
    ) const;
    /// <summary>
    /// 获取知乎首页热榜/Get Zhihu Hot List
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取知乎首页热榜 ### 参数: - limit: 每页文章数量 - desktop: 是否为桌面端 ### 返回: - 知乎首页热榜  # [English] ### Purpose: - Get Zhihu Hot List ### Parameters: - limit: Number of articles per page - desktop: Is it a desktop ### Returns: - Zhihu Hot List  # [示例/Example] limit &#x3D; \&quot;50\&quot; desktop &#x3D; \&quot;true\&quot;
    /// </remarks>
    /// <param name="limit">每页文章数量/Number of articles per page (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="desktop">是否为桌面端/Is it a desktop (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchHotListApiV1ZhihuWebFetchHotListGet_0(
        boost::optional<utility::string_t> limit,
        boost::optional<utility::string_t> desktop
    ) const;
    /// <summary>
    /// 获取知乎首页推荐/Get Zhihu Hot Recommend
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取知乎首页推荐 ### 参数: - offset: 偏移量 - page_number: 页码 - session_token: 会话令牌 ### 返回: - 知乎首页推荐  # [English] ### Purpose: - Get Zhihu Hot Recommend ### Parameters: - offset: Offset - page_number: Page Number - session_token: Session Token  # [示例/Example] offset &#x3D; \&quot;0\&quot; page_number &#x3D; \&quot;1\&quot; session_token &#x3D; \&quot;\&quot;
    /// </remarks>
    /// <param name="offset">偏移量/Offset (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="pageNumber">页码/Page Number (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="sessionToken">会话令牌/Session Token (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchHotRecommendApiV1ZhihuWebFetchHotRecommendGet(
        boost::optional<utility::string_t> offset,
        boost::optional<utility::string_t> pageNumber,
        boost::optional<utility::string_t> sessionToken
    ) const;
    /// <summary>
    /// 获取知乎首页推荐/Get Zhihu Hot Recommend
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取知乎首页推荐 ### 参数: - offset: 偏移量 - page_number: 页码 - session_token: 会话令牌 ### 返回: - 知乎首页推荐  # [English] ### Purpose: - Get Zhihu Hot Recommend ### Parameters: - offset: Offset - page_number: Page Number - session_token: Session Token  # [示例/Example] offset &#x3D; \&quot;0\&quot; page_number &#x3D; \&quot;1\&quot; session_token &#x3D; \&quot;\&quot;
    /// </remarks>
    /// <param name="offset">偏移量/Offset (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="pageNumber">页码/Page Number (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="sessionToken">会话令牌/Session Token (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchHotRecommendApiV1ZhihuWebFetchHotRecommendGet_0(
        boost::optional<utility::string_t> offset,
        boost::optional<utility::string_t> pageNumber,
        boost::optional<utility::string_t> sessionToken
    ) const;
    /// <summary>
    /// 获取知乎搜索预设词/Get Zhihu Preset Search
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取知乎搜索预设词 ### 参数: - 无 ### 返回: - 知乎搜索预设词  # [English] ### Purpose: - Get Zhihu Preset Search ### Parameters: - None ### Returns: - Zhihu Preset Search
    /// </remarks>
    pplx::task<std::shared_ptr<ResponseModel>> fetchPresetSearchApiV1ZhihuWebFetchPresetSearchGet(
    ) const;
    /// <summary>
    /// 获取知乎搜索预设词/Get Zhihu Preset Search
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取知乎搜索预设词 ### 参数: - 无 ### 返回: - 知乎搜索预设词  # [English] ### Purpose: - Get Zhihu Preset Search ### Parameters: - None ### Returns: - Zhihu Preset Search
    /// </remarks>
    pplx::task<std::shared_ptr<ResponseModel>> fetchPresetSearchApiV1ZhihuWebFetchPresetSearchGet_0(
    ) const;
    /// <summary>
    /// 获取知乎推荐关注列表/Get Zhihu Recommend Followees
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取知乎推荐关注列表 ### 参数: - 无 ### 返回: - 知乎推荐关注列表  # [English] ### Purpose: - Get Zhihu Recommend Followees ### Parameters: - None ### Returns: - Zhihu Recommend Followees
    /// </remarks>
    pplx::task<std::shared_ptr<ResponseModel>> fetchRecommendFolloweesApiV1ZhihuWebFetchRecommendFolloweesGet(
    ) const;
    /// <summary>
    /// 获取知乎推荐关注列表/Get Zhihu Recommend Followees
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取知乎推荐关注列表 ### 参数: - 无 ### 返回: - 知乎推荐关注列表  # [English] ### Purpose: - Get Zhihu Recommend Followees ### Parameters: - None ### Returns: - Zhihu Recommend Followees
    /// </remarks>
    pplx::task<std::shared_ptr<ResponseModel>> fetchRecommendFolloweesApiV1ZhihuWebFetchRecommendFolloweesGet_0(
    ) const;
    /// <summary>
    /// 获取知乎盐选内容搜索V3/Get Zhihu Salt Search V3
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取知乎盐选内容搜索V3 ### 参数: - keyword: 搜索关键词 - offset: 偏移量 - limit: 每页内容数量 - search_hash_id: 搜索哈希ID ### 返回: - 知乎盐选内容搜索V3  # [English] ### Purpose: - Get Zhihu Salt Search V3 ### Parameters: - keyword: Search Keywords - offset: Offset - limit: Number of contents per page - search_hash_id: Search Hash ID ### Returns: - Zhihu Salt Search V3  # [示例/Example] keyword &#x3D; \&quot;deepseek\&quot; limit &#x3D; \&quot;20\&quot; offset &#x3D; \&quot;0\&quot; search_hash_id &#x3D; \&quot;\&quot;
    /// </remarks>
    /// <param name="keyword">搜索关键词/Search Keywords</param>
    /// <param name="offset">偏移量/Offset (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="limit">每页内容数量/Number of contents per page (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="searchHashId">搜索哈希ID/Search Hash ID (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchSaltSearchV3ApiV1ZhihuWebFetchSaltSearchV3Get(
        utility::string_t keyword,
        boost::optional<utility::string_t> offset,
        boost::optional<utility::string_t> limit,
        boost::optional<utility::string_t> searchHashId
    ) const;
    /// <summary>
    /// 获取知乎盐选内容搜索V3/Get Zhihu Salt Search V3
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取知乎盐选内容搜索V3 ### 参数: - keyword: 搜索关键词 - offset: 偏移量 - limit: 每页内容数量 - search_hash_id: 搜索哈希ID ### 返回: - 知乎盐选内容搜索V3  # [English] ### Purpose: - Get Zhihu Salt Search V3 ### Parameters: - keyword: Search Keywords - offset: Offset - limit: Number of contents per page - search_hash_id: Search Hash ID ### Returns: - Zhihu Salt Search V3  # [示例/Example] keyword &#x3D; \&quot;deepseek\&quot; limit &#x3D; \&quot;20\&quot; offset &#x3D; \&quot;0\&quot; search_hash_id &#x3D; \&quot;\&quot;
    /// </remarks>
    /// <param name="keyword">搜索关键词/Search Keywords</param>
    /// <param name="offset">偏移量/Offset (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="limit">每页内容数量/Number of contents per page (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="searchHashId">搜索哈希ID/Search Hash ID (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchSaltSearchV3ApiV1ZhihuWebFetchSaltSearchV3Get_0(
        utility::string_t keyword,
        boost::optional<utility::string_t> offset,
        boost::optional<utility::string_t> limit,
        boost::optional<utility::string_t> searchHashId
    ) const;
    /// <summary>
    /// 获取知乎论文搜索V3/Get Zhihu Scholar Search V3
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取知乎论文搜索V3 ### 参数: - keyword: 搜索关键词 - offset: 偏移量 - limit: 每页论文数量 - filter_fields: 过滤字段 ### 返回: - 知乎论文搜索V3  # [English] ### Purpose: - Get Zhihu Scholar Search V3 ### Parameters: - keyword: Search Keywords - offset: Offset - limit: Number of papers per page - filter_fields: Filter Fields ### Returns: - Zhihu Scholar Search V3  # [示例/Example] keyword &#x3D; \&quot;人工智能\&quot; offset &#x3D; \&quot;0\&quot; limit &#x3D; \&quot;25\&quot;
    /// </remarks>
    /// <param name="keyword">搜索关键词/Search Keywords</param>
    /// <param name="offset">偏移量/Offset (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="limit">每页论文数量/Number of papers per page (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="body"> (optional)</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchScholarSearchV3ApiV1ZhihuWebFetchScholarSearchV3Post(
        utility::string_t keyword,
        boost::optional<utility::string_t> offset,
        boost::optional<utility::string_t> limit,
        boost::optional<std::shared_ptr<Object>> body
    ) const;
    /// <summary>
    /// 获取知乎论文搜索V3/Get Zhihu Scholar Search V3
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取知乎论文搜索V3 ### 参数: - keyword: 搜索关键词 - offset: 偏移量 - limit: 每页论文数量 - filter_fields: 过滤字段 ### 返回: - 知乎论文搜索V3  # [English] ### Purpose: - Get Zhihu Scholar Search V3 ### Parameters: - keyword: Search Keywords - offset: Offset - limit: Number of papers per page - filter_fields: Filter Fields ### Returns: - Zhihu Scholar Search V3  # [示例/Example] keyword &#x3D; \&quot;人工智能\&quot; offset &#x3D; \&quot;0\&quot; limit &#x3D; \&quot;25\&quot;
    /// </remarks>
    /// <param name="keyword">搜索关键词/Search Keywords</param>
    /// <param name="offset">偏移量/Offset (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="limit">每页论文数量/Number of papers per page (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="body"> (optional)</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchScholarSearchV3ApiV1ZhihuWebFetchScholarSearchV3Post_0(
        utility::string_t keyword,
        boost::optional<utility::string_t> offset,
        boost::optional<utility::string_t> limit,
        boost::optional<std::shared_ptr<Object>> body
    ) const;
    /// <summary>
    /// 获取知乎搜索发现/Get Zhihu Search Recommend
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取知乎搜索发现 ### 参数: - 无 ### 返回: - 知乎搜索发现  # [English] ### Purpose: - Get Zhihu Search Recommend ### Parameters: - None ### Returns: - Zhihu Search Recommend
    /// </remarks>
    pplx::task<std::shared_ptr<ResponseModel>> fetchSearchRecommendApiV1ZhihuWebFetchSearchRecommendGet(
    ) const;
    /// <summary>
    /// 获取知乎搜索发现/Get Zhihu Search Recommend
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取知乎搜索发现 ### 参数: - 无 ### 返回: - 知乎搜索发现  # [English] ### Purpose: - Get Zhihu Search Recommend ### Parameters: - None ### Returns: - Zhihu Search Recommend
    /// </remarks>
    pplx::task<std::shared_ptr<ResponseModel>> fetchSearchRecommendApiV1ZhihuWebFetchSearchRecommendGet_0(
    ) const;
    /// <summary>
    /// 知乎搜索预测词/Get Zhihu Search Suggest
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 知乎搜索预测词 ### 参数: - keyword: 搜索关键词 ### 返回: - 知乎搜索预测词  # [English] ### Purpose: - Get Zhihu Search Suggest ### Parameters: - keyword: Search Keywords ### Returns: - Zhihu Search Suggest  # [示例/Example] keyword &#x3D; \&quot;deepseek\&quot;
    /// </remarks>
    /// <param name="keyword">搜索关键词/Search Keywords</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchSearchSuggestApiV1ZhihuWebFetchSearchSuggestGet(
        utility::string_t keyword
    ) const;
    /// <summary>
    /// 知乎搜索预测词/Get Zhihu Search Suggest
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 知乎搜索预测词 ### 参数: - keyword: 搜索关键词 ### 返回: - 知乎搜索预测词  # [English] ### Purpose: - Get Zhihu Search Suggest ### Parameters: - keyword: Search Keywords ### Returns: - Zhihu Search Suggest  # [示例/Example] keyword &#x3D; \&quot;deepseek\&quot;
    /// </remarks>
    /// <param name="keyword">搜索关键词/Search Keywords</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchSearchSuggestApiV1ZhihuWebFetchSearchSuggestGet_0(
        utility::string_t keyword
    ) const;
    /// <summary>
    /// 获取知乎子评论区V5/Get Zhihu Sub Comment V5
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取知乎子评论区V5 ### 参数: - comment_id: 评论ID - order_by: 排序     - score 最热排序     - ts 最新排序 - limit: 每页评论数量 - offset: 偏移量/页码 ### 返回: - 知乎子评论区V5  # [English] ### Purpose: - Get Zhihu Sub Comment V5 ### Parameters: - comment_id: Comment ID - order_by: Sort     - score Hottest Sort     - ts Latest Sort - limit: Number of comments per page - offset: Offset/Page Number ### Returns: - Zhihu Sub Comment V5  # [示例/Example] comment_id &#x3D; \&quot;11100789728\&quot; order_by &#x3D; \&quot;score\&quot; limit &#x3D; \&quot;20\&quot; offset &#x3D; \&quot;\&quot;
    /// </remarks>
    /// <param name="commentId">评论ID/Comment ID</param>
    /// <param name="orderBy">排序/Sort (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="limit">每页评论数量/Number of comments per page (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="offset">偏移量/Offset (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchSubCommentV5ApiV1ZhihuWebFetchSubCommentV5Get(
        utility::string_t commentId,
        boost::optional<utility::string_t> orderBy,
        boost::optional<utility::string_t> limit,
        boost::optional<utility::string_t> offset
    ) const;
    /// <summary>
    /// 获取知乎子评论区V5/Get Zhihu Sub Comment V5
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取知乎子评论区V5 ### 参数: - comment_id: 评论ID - order_by: 排序     - score 最热排序     - ts 最新排序 - limit: 每页评论数量 - offset: 偏移量/页码 ### 返回: - 知乎子评论区V5  # [English] ### Purpose: - Get Zhihu Sub Comment V5 ### Parameters: - comment_id: Comment ID - order_by: Sort     - score Hottest Sort     - ts Latest Sort - limit: Number of comments per page - offset: Offset/Page Number ### Returns: - Zhihu Sub Comment V5  # [示例/Example] comment_id &#x3D; \&quot;11100789728\&quot; order_by &#x3D; \&quot;score\&quot; limit &#x3D; \&quot;20\&quot; offset &#x3D; \&quot;\&quot;
    /// </remarks>
    /// <param name="commentId">评论ID/Comment ID</param>
    /// <param name="orderBy">排序/Sort (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="limit">每页评论数量/Number of comments per page (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="offset">偏移量/Offset (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchSubCommentV5ApiV1ZhihuWebFetchSubCommentV5Get_0(
        utility::string_t commentId,
        boost::optional<utility::string_t> orderBy,
        boost::optional<utility::string_t> limit,
        boost::optional<utility::string_t> offset
    ) const;
    /// <summary>
    /// 获取知乎话题搜索V3/Get Zhihu Topic Search V3
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取知乎话题搜索V3 ### 参数: - keyword: 搜索关键词 - offset: 偏移量 - limit: 每页话题数量 ### 返回: - 知乎话题搜索V3  # [English] ### Purpose: - Get Zhihu Topic Search V3 ### Parameters: - keyword: Search Keywords - offset: Offset - limit: Number of topics per page ### Returns: - Zhihu Topic Search V3  # [示例/Example] keyword &#x3D; \&quot;deepseek\&quot; offset &#x3D; \&quot;0\&quot; limit &#x3D; \&quot;25\&quot;
    /// </remarks>
    /// <param name="keyword">搜索关键词/Search Keywords</param>
    /// <param name="offset">偏移量/Offset (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="limit">每页话题数量/Number of topics per page (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchTopicSearchV3ApiV1ZhihuWebFetchTopicSearchV3Get(
        utility::string_t keyword,
        boost::optional<utility::string_t> offset,
        boost::optional<utility::string_t> limit
    ) const;
    /// <summary>
    /// 获取知乎话题搜索V3/Get Zhihu Topic Search V3
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取知乎话题搜索V3 ### 参数: - keyword: 搜索关键词 - offset: 偏移量 - limit: 每页话题数量 ### 返回: - 知乎话题搜索V3  # [English] ### Purpose: - Get Zhihu Topic Search V3 ### Parameters: - keyword: Search Keywords - offset: Offset - limit: Number of topics per page ### Returns: - Zhihu Topic Search V3  # [示例/Example] keyword &#x3D; \&quot;deepseek\&quot; offset &#x3D; \&quot;0\&quot; limit &#x3D; \&quot;25\&quot;
    /// </remarks>
    /// <param name="keyword">搜索关键词/Search Keywords</param>
    /// <param name="offset">偏移量/Offset (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="limit">每页话题数量/Number of topics per page (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchTopicSearchV3ApiV1ZhihuWebFetchTopicSearchV3Get_0(
        utility::string_t keyword,
        boost::optional<utility::string_t> offset,
        boost::optional<utility::string_t> limit
    ) const;
    /// <summary>
    /// 获取知乎用户关注的收藏/Get Zhihu User Follow Collections
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取知乎用户关注的收藏 ### 参数: - user_url_token: 用户ID - offset: 偏移量 - limit: 每页收藏数量 ### 返回: - 知乎用户关注的收藏  # [English] ### Purpose: - Get Zhihu User Follow Collections ### Parameters: - user_url_token: User ID - offset: Offset - limit: Number of collections per page ### Returns: - Zhihu User Follow Collections  # [示例/Example] user_url_token &#x3D; \&quot;ming-he-43-93\&quot; offset &#x3D; \&quot;0\&quot; limit &#x3D; \&quot;20\&quot;
    /// </remarks>
    /// <param name="userUrlToken">用户ID/User ID</param>
    /// <param name="offset">偏移量/Offset (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="limit">每页收藏数量/Number of collections per page (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchUserFollowCollectionsApiV1ZhihuWebFetchUserFollowCollectionsGet(
        utility::string_t userUrlToken,
        boost::optional<utility::string_t> offset,
        boost::optional<utility::string_t> limit
    ) const;
    /// <summary>
    /// 获取知乎用户关注的收藏/Get Zhihu User Follow Collections
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取知乎用户关注的收藏 ### 参数: - user_url_token: 用户ID - offset: 偏移量 - limit: 每页收藏数量 ### 返回: - 知乎用户关注的收藏  # [English] ### Purpose: - Get Zhihu User Follow Collections ### Parameters: - user_url_token: User ID - offset: Offset - limit: Number of collections per page ### Returns: - Zhihu User Follow Collections  # [示例/Example] user_url_token &#x3D; \&quot;ming-he-43-93\&quot; offset &#x3D; \&quot;0\&quot; limit &#x3D; \&quot;20\&quot;
    /// </remarks>
    /// <param name="userUrlToken">用户ID/User ID</param>
    /// <param name="offset">偏移量/Offset (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="limit">每页收藏数量/Number of collections per page (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchUserFollowCollectionsApiV1ZhihuWebFetchUserFollowCollectionsGet_0(
        utility::string_t userUrlToken,
        boost::optional<utility::string_t> offset,
        boost::optional<utility::string_t> limit
    ) const;
    /// <summary>
    /// 获取知乎用户订阅的专栏/Get Zhihu User Columns
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取知乎用户订阅的专栏 ### 参数: - user_url_token: 用户ID - offset: 偏移量 - limit: 每页专栏数量 ### 返回: - 知乎用户订阅的专栏  # [English] ### Purpose: - Get Zhihu User Columns ### Parameters: - user_url_token: User ID - offset: Offset - limit: Number of columns per page ### Returns: - Zhihu User Columns  # [示例/Example] user_url_token &#x3D; \&quot;ming-he-43-93\&quot; offset &#x3D; \&quot;0\&quot; limit &#x3D; \&quot;20\&quot;
    /// </remarks>
    /// <param name="userUrlToken">用户ID/User ID</param>
    /// <param name="offset">偏移量/Offset (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="limit">每页专栏数量/Number of columns per page (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchUserFollowColumnsApiV1ZhihuWebFetchUserFollowColumnsGet(
        utility::string_t userUrlToken,
        boost::optional<utility::string_t> offset,
        boost::optional<utility::string_t> limit
    ) const;
    /// <summary>
    /// 获取知乎用户订阅的专栏/Get Zhihu User Columns
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取知乎用户订阅的专栏 ### 参数: - user_url_token: 用户ID - offset: 偏移量 - limit: 每页专栏数量 ### 返回: - 知乎用户订阅的专栏  # [English] ### Purpose: - Get Zhihu User Columns ### Parameters: - user_url_token: User ID - offset: Offset - limit: Number of columns per page ### Returns: - Zhihu User Columns  # [示例/Example] user_url_token &#x3D; \&quot;ming-he-43-93\&quot; offset &#x3D; \&quot;0\&quot; limit &#x3D; \&quot;20\&quot;
    /// </remarks>
    /// <param name="userUrlToken">用户ID/User ID</param>
    /// <param name="offset">偏移量/Offset (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="limit">每页专栏数量/Number of columns per page (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchUserFollowColumnsApiV1ZhihuWebFetchUserFollowColumnsGet_0(
        utility::string_t userUrlToken,
        boost::optional<utility::string_t> offset,
        boost::optional<utility::string_t> limit
    ) const;
    /// <summary>
    /// 获取知乎用户关注的问题/Get Zhihu User Follow Questions
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取知乎用户关注的问题 ### 参数: - user_url_token: 用户ID - offset: 偏移量 - limit: 每页问题数量 ### 返回: - 知乎用户关注的问题  # [English] ### Purpose: - Get Zhihu User Follow Questions ### Parameters: - user_url_token: User ID - offset: Offset - limit: Number of questions per page ### Returns: - Zhihu User Follow Questions  # [示例/Example] user_url_token &#x3D; \&quot;ming-he-43-93\&quot; offset &#x3D; \&quot;0\&quot; limit &#x3D; \&quot;20\&quot;
    /// </remarks>
    /// <param name="userUrlToken">用户ID/User ID</param>
    /// <param name="offset">偏移量/Offset (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="limit">每页问题数量/Number of questions per page (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchUserFollowQuestionsApiV1ZhihuWebFetchUserFollowQuestionsGet(
        utility::string_t userUrlToken,
        boost::optional<utility::string_t> offset,
        boost::optional<utility::string_t> limit
    ) const;
    /// <summary>
    /// 获取知乎用户关注的问题/Get Zhihu User Follow Questions
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取知乎用户关注的问题 ### 参数: - user_url_token: 用户ID - offset: 偏移量 - limit: 每页问题数量 ### 返回: - 知乎用户关注的问题  # [English] ### Purpose: - Get Zhihu User Follow Questions ### Parameters: - user_url_token: User ID - offset: Offset - limit: Number of questions per page ### Returns: - Zhihu User Follow Questions  # [示例/Example] user_url_token &#x3D; \&quot;ming-he-43-93\&quot; offset &#x3D; \&quot;0\&quot; limit &#x3D; \&quot;20\&quot;
    /// </remarks>
    /// <param name="userUrlToken">用户ID/User ID</param>
    /// <param name="offset">偏移量/Offset (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="limit">每页问题数量/Number of questions per page (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchUserFollowQuestionsApiV1ZhihuWebFetchUserFollowQuestionsGet_0(
        utility::string_t userUrlToken,
        boost::optional<utility::string_t> offset,
        boost::optional<utility::string_t> limit
    ) const;
    /// <summary>
    /// 获取知乎用户关注的话题/Get Zhihu User Follow Topics
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取知乎用户关注的话题 ### 参数: - user_url_token: 用户ID - offset: 偏移量 - limit: 每页话题数量 ### 返回: - 知乎用户关注的话题  # [English] ### Purpose: - Get Zhihu User Follow Topics ### Parameters: - user_url_token: User ID - offset: Offset - limit: Number of topics per page ### Returns: - Zhihu User Follow Topics  # [示例/Example] user_url_token &#x3D; \&quot;ming-he-43-93\&quot; offset &#x3D; \&quot;0\&quot; limit &#x3D; \&quot;20\&quot;
    /// </remarks>
    /// <param name="userUrlToken">用户ID/User ID</param>
    /// <param name="offset">偏移量/Offset (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="limit">每页话题数量/Number of topics per page (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchUserFollowTopicsApiV1ZhihuWebFetchUserFollowTopicsGet(
        utility::string_t userUrlToken,
        boost::optional<utility::string_t> offset,
        boost::optional<utility::string_t> limit
    ) const;
    /// <summary>
    /// 获取知乎用户关注的话题/Get Zhihu User Follow Topics
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取知乎用户关注的话题 ### 参数: - user_url_token: 用户ID - offset: 偏移量 - limit: 每页话题数量 ### 返回: - 知乎用户关注的话题  # [English] ### Purpose: - Get Zhihu User Follow Topics ### Parameters: - user_url_token: User ID - offset: Offset - limit: Number of topics per page ### Returns: - Zhihu User Follow Topics  # [示例/Example] user_url_token &#x3D; \&quot;ming-he-43-93\&quot; offset &#x3D; \&quot;0\&quot; limit &#x3D; \&quot;20\&quot;
    /// </remarks>
    /// <param name="userUrlToken">用户ID/User ID</param>
    /// <param name="offset">偏移量/Offset (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="limit">每页话题数量/Number of topics per page (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchUserFollowTopicsApiV1ZhihuWebFetchUserFollowTopicsGet_0(
        utility::string_t userUrlToken,
        boost::optional<utility::string_t> offset,
        boost::optional<utility::string_t> limit
    ) const;
    /// <summary>
    /// 获取知乎用户关注列表/Get Zhihu User Following
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取知乎用户关注列表 ### 参数: - user_url_token: 用户ID - offset: 偏移量 - limit: 每页用户数量 ### 返回: - 知乎用户关注列表  # [English] ### Purpose: - Get Zhihu User Following ### Parameters: - user_url_token: User ID - offset: Offset - limit: Number of users per page ### Returns: - Zhihu User Following  # [示例/Example] user_url_token &#x3D; \&quot;ming-he-43-93\&quot; offset &#x3D; \&quot;0\&quot; limit &#x3D; \&quot;20\&quot;
    /// </remarks>
    /// <param name="userUrlToken">用户ID/User ID</param>
    /// <param name="offset">偏移量/Offset (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="limit">每页用户数量/Number of users per page (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchUserFolloweesApiV1ZhihuWebFetchUserFolloweesGet(
        utility::string_t userUrlToken,
        boost::optional<utility::string_t> offset,
        boost::optional<utility::string_t> limit
    ) const;
    /// <summary>
    /// 获取知乎用户关注列表/Get Zhihu User Following
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取知乎用户关注列表 ### 参数: - user_url_token: 用户ID - offset: 偏移量 - limit: 每页用户数量 ### 返回: - 知乎用户关注列表  # [English] ### Purpose: - Get Zhihu User Following ### Parameters: - user_url_token: User ID - offset: Offset - limit: Number of users per page ### Returns: - Zhihu User Following  # [示例/Example] user_url_token &#x3D; \&quot;ming-he-43-93\&quot; offset &#x3D; \&quot;0\&quot; limit &#x3D; \&quot;20\&quot;
    /// </remarks>
    /// <param name="userUrlToken">用户ID/User ID</param>
    /// <param name="offset">偏移量/Offset (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="limit">每页用户数量/Number of users per page (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchUserFolloweesApiV1ZhihuWebFetchUserFolloweesGet_0(
        utility::string_t userUrlToken,
        boost::optional<utility::string_t> offset,
        boost::optional<utility::string_t> limit
    ) const;
    /// <summary>
    /// 获取知乎用户粉丝列表/Get Zhihu User Followers
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取知乎用户粉丝列表 ### 参数: - user_url_token: 用户ID - offset: 偏移量 - limit: 每页用户数量 ### 返回: - 知乎用户粉丝列表  # [English] ### Purpose: - Get Zhihu User Followers ### Parameters: - user_url_token: User ID - offset: Offset - limit: Number of users per page ### Returns: - Zhihu User Followers  # [示例/Example] user_url_token &#x3D; \&quot;ming-he-43-93\&quot; offset &#x3D; \&quot;0\&quot; limit &#x3D; \&quot;20\&quot;
    /// </remarks>
    /// <param name="userUrlToken">用户ID/User ID</param>
    /// <param name="offset">偏移量/Offset (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="limit">每页用户数量/Number of users per page (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchUserFollowersApiV1ZhihuWebFetchUserFollowersGet(
        utility::string_t userUrlToken,
        boost::optional<utility::string_t> offset,
        boost::optional<utility::string_t> limit
    ) const;
    /// <summary>
    /// 获取知乎用户粉丝列表/Get Zhihu User Followers
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取知乎用户粉丝列表 ### 参数: - user_url_token: 用户ID - offset: 偏移量 - limit: 每页用户数量 ### 返回: - 知乎用户粉丝列表  # [English] ### Purpose: - Get Zhihu User Followers ### Parameters: - user_url_token: User ID - offset: Offset - limit: Number of users per page ### Returns: - Zhihu User Followers  # [示例/Example] user_url_token &#x3D; \&quot;ming-he-43-93\&quot; offset &#x3D; \&quot;0\&quot; limit &#x3D; \&quot;20\&quot;
    /// </remarks>
    /// <param name="userUrlToken">用户ID/User ID</param>
    /// <param name="offset">偏移量/Offset (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="limit">每页用户数量/Number of users per page (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchUserFollowersApiV1ZhihuWebFetchUserFollowersGet_0(
        utility::string_t userUrlToken,
        boost::optional<utility::string_t> offset,
        boost::optional<utility::string_t> limit
    ) const;
    /// <summary>
    /// 获取知乎用户信息/Get Zhihu User Info
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取知乎用户信息 ### 参数: - user_url_token: 用户ID ### 返回: - 知乎用户信息  # [English] ### Purpose: - Get Zhihu User Info ### Parameters: - user_url_token: User ID ### Returns: - Zhihu User Info  # [示例/Example] user_url_token &#x3D; \&quot;ming-he-43-93\&quot;
    /// </remarks>
    /// <param name="userUrlToken">用户ID/User ID</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchUserInfoApiV1ZhihuWebFetchUserInfoGet(
        utility::string_t userUrlToken
    ) const;
    /// <summary>
    /// 获取知乎用户信息/Get Zhihu User Info
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取知乎用户信息 ### 参数: - user_url_token: 用户ID ### 返回: - 知乎用户信息  # [English] ### Purpose: - Get Zhihu User Info ### Parameters: - user_url_token: User ID ### Returns: - Zhihu User Info  # [示例/Example] user_url_token &#x3D; \&quot;ming-he-43-93\&quot;
    /// </remarks>
    /// <param name="userUrlToken">用户ID/User ID</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchUserInfoApiV1ZhihuWebFetchUserInfoGet_0(
        utility::string_t userUrlToken
    ) const;
    /// <summary>
    /// 获取知乎用户搜索V3/Get Zhihu User Search V3
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取知乎用户搜索V3 ### 参数: - keyword: 搜索关键词 - offset: 偏移量 - limit: 每页用户数量 ### 返回: - 知乎用户搜索V3  # [English] ### Purpose: - Get Zhihu User Search V3 ### Parameters: - keyword: Search Keywords - offset: Offset - limit: Number of users per page ### Returns: - Zhihu User Search V3  # [示例/Example] keyword &#x3D; \&quot;deepseek\&quot; offset &#x3D; \&quot;0\&quot; limit &#x3D; \&quot;25\&quot;
    /// </remarks>
    /// <param name="keyword">搜索关键词/Search Keywords</param>
    /// <param name="offset">偏移量/Offset (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="limit">每页用户数量/Number of users per page (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchUserSearchV3ApiV1ZhihuWebFetchUserSearchV3Get(
        utility::string_t keyword,
        boost::optional<utility::string_t> offset,
        boost::optional<utility::string_t> limit
    ) const;
    /// <summary>
    /// 获取知乎用户搜索V3/Get Zhihu User Search V3
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取知乎用户搜索V3 ### 参数: - keyword: 搜索关键词 - offset: 偏移量 - limit: 每页用户数量 ### 返回: - 知乎用户搜索V3  # [English] ### Purpose: - Get Zhihu User Search V3 ### Parameters: - keyword: Search Keywords - offset: Offset - limit: Number of users per page ### Returns: - Zhihu User Search V3  # [示例/Example] keyword &#x3D; \&quot;deepseek\&quot; offset &#x3D; \&quot;0\&quot; limit &#x3D; \&quot;25\&quot;
    /// </remarks>
    /// <param name="keyword">搜索关键词/Search Keywords</param>
    /// <param name="offset">偏移量/Offset (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="limit">每页用户数量/Number of users per page (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchUserSearchV3ApiV1ZhihuWebFetchUserSearchV3Get_0(
        utility::string_t keyword,
        boost::optional<utility::string_t> offset,
        boost::optional<utility::string_t> limit
    ) const;
    /// <summary>
    /// 获取知乎首页视频榜/Get Zhihu Video List
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取知乎首页视频榜 ### 参数: - offset: 偏移量 - limit: 每页视频数量 ### 返回: - 知乎首页视频榜  # [English] ### Purpose: - Get Zhihu Video List ### Parameters: - offset: Offset - limit: Number of videos per page ### Returns: - Zhihu Video List  # [示例/Example] offset &#x3D; \&quot;\&quot; limit &#x3D; \&quot;12\&quot;
    /// </remarks>
    /// <param name="offset">偏移量/Offset (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="limit">每页视频数量/Number of videos per page (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchVideoListApiV1ZhihuWebFetchVideoListGet(
        boost::optional<utility::string_t> offset,
        boost::optional<utility::string_t> limit
    ) const;
    /// <summary>
    /// 获取知乎首页视频榜/Get Zhihu Video List
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取知乎首页视频榜 ### 参数: - offset: 偏移量 - limit: 每页视频数量 ### 返回: - 知乎首页视频榜  # [English] ### Purpose: - Get Zhihu Video List ### Parameters: - offset: Offset - limit: Number of videos per page ### Returns: - Zhihu Video List  # [示例/Example] offset &#x3D; \&quot;\&quot; limit &#x3D; \&quot;12\&quot;
    /// </remarks>
    /// <param name="offset">偏移量/Offset (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="limit">每页视频数量/Number of videos per page (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchVideoListApiV1ZhihuWebFetchVideoListGet_0(
        boost::optional<utility::string_t> offset,
        boost::optional<utility::string_t> limit
    ) const;
    /// <summary>
    /// 获取知乎视频搜索V3/Get Zhihu Video Search V3
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取知乎视频搜索V3 ### 参数: - keyword: 搜索关键词 - limit: 每页视频数量 - offset: 偏移量 - search_hash_id: 搜索哈希ID ### 返回: - 知乎视频搜索V3  # [English] ### Purpose: - Get Zhihu Video Search V3 ### Parameters: - keyword: Search Keywords - limit: Number of videos per page - offset: Offset - search_hash_id: Search Hash ID ### Returns: - Zhihu Video Search V3  # [示例/Example] keyword &#x3D; \&quot;deepseek\&quot; limit &#x3D; \&quot;20\&quot; offset &#x3D; \&quot;0\&quot; search_hash_id &#x3D; \&quot;\&quot;
    /// </remarks>
    /// <param name="keyword">搜索关键词/Search Keywords</param>
    /// <param name="limit">每页视频数量/Number of videos per page (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="offset">偏移量/Offset (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="searchHashId">搜索哈希ID/Search Hash ID (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchVideoSearchV3ApiV1ZhihuWebFetchVideoSearchV3Get(
        utility::string_t keyword,
        boost::optional<utility::string_t> limit,
        boost::optional<utility::string_t> offset,
        boost::optional<utility::string_t> searchHashId
    ) const;
    /// <summary>
    /// 获取知乎视频搜索V3/Get Zhihu Video Search V3
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取知乎视频搜索V3 ### 参数: - keyword: 搜索关键词 - limit: 每页视频数量 - offset: 偏移量 - search_hash_id: 搜索哈希ID ### 返回: - 知乎视频搜索V3  # [English] ### Purpose: - Get Zhihu Video Search V3 ### Parameters: - keyword: Search Keywords - limit: Number of videos per page - offset: Offset - search_hash_id: Search Hash ID ### Returns: - Zhihu Video Search V3  # [示例/Example] keyword &#x3D; \&quot;deepseek\&quot; limit &#x3D; \&quot;20\&quot; offset &#x3D; \&quot;0\&quot; search_hash_id &#x3D; \&quot;\&quot;
    /// </remarks>
    /// <param name="keyword">搜索关键词/Search Keywords</param>
    /// <param name="limit">每页视频数量/Number of videos per page (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="offset">偏移量/Offset (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="searchHashId">搜索哈希ID/Search Hash ID (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchVideoSearchV3ApiV1ZhihuWebFetchVideoSearchV3Get_0(
        utility::string_t keyword,
        boost::optional<utility::string_t> limit,
        boost::optional<utility::string_t> offset,
        boost::optional<utility::string_t> searchHashId
    ) const;

protected:
    std::shared_ptr<const ApiClient> m_ApiClient;
};

}
}
}
}

#endif /* IO_TIKHUB_CLIENT_API_ZhihuWebAPIApi_H_ */

