/**
 * TikHub.io - Your Ultimate Social Media Data & API Marketplace
 * High-performance asynchronous Douyin(抖音) TikTok Xiaohongshu(小红书) Kuaishou(快手) Weibo(微博) Instagram YouTube(油管) Twitter(X) Captcha Solver(验证码解决器) Temp Mail(临时邮箱) API(接口).
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.3.1.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * WeiboWebAPIApi.h
 *
 * 
 */

#ifndef IO_TIKHUB_CLIENT_API_WeiboWebAPIApi_H_
#define IO_TIKHUB_CLIENT_API_WeiboWebAPIApi_H_


#include "../ApiClient.h"

#include "HttpValidationError.h"
#include "ResponseModel.h"
#include <cpprest/details/basic_types.h>


#include <boost/optional.hpp>

namespace io {
namespace tikhub {
namespace client {
namespace api {

using namespace org::openapitools::client::model;



class  WeiboWebAPIApi 
{
public:

    explicit WeiboWebAPIApi( std::shared_ptr<const ApiClient> apiClient );

    virtual ~WeiboWebAPIApi();

    /// <summary>
    /// 获取单个作品数据/Get single video data
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取单个作品数据 ### 参数: - id: 作品id，从分享链接中获取  - https://weibo.com/5819018196/5092682368025584  - 作品id为：5092682368025584 ### 返回: - 作品数据  # [English] ### Purpose: - Get single video data ### Parameters: - id: Post id, obtained from the sharing link     - https://weibo.com/5819018196/5092682368025584     - The post id is: 5092682368025584 ### Return: - Post data  # [示例/Example] id &#x3D; \&quot;5092682368025584\&quot;
    /// </remarks>
    /// <param name="id">作品id/Post id</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchPostDetailApiV1WeiboWebFetchPostDetailGet(
        utility::string_t id
    ) const;
    /// <summary>
    /// 获取单个作品数据/Get single video data
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取单个作品数据 ### 参数: - id: 作品id，从分享链接中获取  - https://weibo.com/5819018196/5092682368025584  - 作品id为：5092682368025584 ### 返回: - 作品数据  # [English] ### Purpose: - Get single video data ### Parameters: - id: Post id, obtained from the sharing link     - https://weibo.com/5819018196/5092682368025584     - The post id is: 5092682368025584 ### Return: - Post data  # [示例/Example] id &#x3D; \&quot;5092682368025584\&quot;
    /// </remarks>
    /// <param name="id">作品id/Post id</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchPostDetailApiV1WeiboWebFetchPostDetailGet_0(
        utility::string_t id
    ) const;
    /// <summary>
    /// 获取搜索数据/Get search data
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取搜索数据 ### 参数: - keyword: 关键词 - page: 页数 - search_type: 搜索类型     - **1**: 综合     - **61**: 实时     - **3**: 用户     - **60**: 热门     - **64**: 视频     - **63**: 图片     - **21**: 文章     - **38**: 话题     - **98**: 超话 ### 返回: - 搜索数据  # [English] ### Purpose: - Get search data ### Parameters: - keyword: Keyword - page: Page number - search_type: Search type     - **1**: Comprehensive     - **61**: Real-time     - **3**: User     - **60**: Hot     - **64**: Video     - **63**: Picture     - **21**: Article     - **38**: Topic     - **98**: Super topic ### Return: - Search data  # [示例/Example] keyword &#x3D; \&quot;游戏\&quot; page &#x3D; \&quot;1\&quot; search_type &#x3D; \&quot;1\&quot;
    /// </remarks>
    /// <param name="keyword">关键词/Keyword</param>
    /// <param name="page">页数/Page number (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="searchType">搜索类型/Search type (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchSearchDataApiV1WeiboWebFetchSearchDataGet(
        utility::string_t keyword,
        boost::optional<utility::string_t> page,
        boost::optional<utility::string_t> searchType
    ) const;
    /// <summary>
    /// 获取搜索数据/Get search data
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取搜索数据 ### 参数: - keyword: 关键词 - page: 页数 - search_type: 搜索类型     - **1**: 综合     - **61**: 实时     - **3**: 用户     - **60**: 热门     - **64**: 视频     - **63**: 图片     - **21**: 文章     - **38**: 话题     - **98**: 超话 ### 返回: - 搜索数据  # [English] ### Purpose: - Get search data ### Parameters: - keyword: Keyword - page: Page number - search_type: Search type     - **1**: Comprehensive     - **61**: Real-time     - **3**: User     - **60**: Hot     - **64**: Video     - **63**: Picture     - **21**: Article     - **38**: Topic     - **98**: Super topic ### Return: - Search data  # [示例/Example] keyword &#x3D; \&quot;游戏\&quot; page &#x3D; \&quot;1\&quot; search_type &#x3D; \&quot;1\&quot;
    /// </remarks>
    /// <param name="keyword">关键词/Keyword</param>
    /// <param name="page">页数/Page number (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="searchType">搜索类型/Search type (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchSearchDataApiV1WeiboWebFetchSearchDataGet_0(
        utility::string_t keyword,
        boost::optional<utility::string_t> page,
        boost::optional<utility::string_t> searchType
    ) const;
    /// <summary>
    /// 获取短视频数据/Get short video data
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取短视频数据 ### 参数: - share_text: 视频分享链接 ### 返回: - 短视频数据  # [English] ### Purpose: - Get short video data ### Parameters: - share_text: Video sharing link ### Return: - Short video data  # [示例/Example] share_text &#x3D; \&quot;https://video.weibo.com/show?fid&#x3D;1034:4986069612167172\&quot;
    /// </remarks>
    /// <param name="shareText">视频分享链接/Video sharing link</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchShortVideoDataApiV1WeiboWebFetchShortVideoDataGet(
        utility::string_t shareText
    ) const;
    /// <summary>
    /// 获取短视频数据/Get short video data
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取短视频数据 ### 参数: - share_text: 视频分享链接 ### 返回: - 短视频数据  # [English] ### Purpose: - Get short video data ### Parameters: - share_text: Video sharing link ### Return: - Short video data  # [示例/Example] share_text &#x3D; \&quot;https://video.weibo.com/show?fid&#x3D;1034:4986069612167172\&quot;
    /// </remarks>
    /// <param name="shareText">视频分享链接/Video sharing link</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchShortVideoDataApiV1WeiboWebFetchShortVideoDataGet_0(
        utility::string_t shareText
    ) const;
    /// <summary>
    /// 获取话题详情/Get topic details
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取话题详情 ### 参数: - topic_name: 话题名称 - page: 页数 ### 返回: - 话题详情  # [English] ### Purpose: - Get topic details ### Parameters: - topic_name: Topic name - page: Page number ### Return: - Topic details  # [示例/Example] topic_name &#x3D; \&quot;游戏\&quot; page &#x3D; \&quot;\&quot;
    /// </remarks>
    /// <param name="topicName">话题名称/Topic name</param>
    /// <param name="page">页数/Page number (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchTopicDetailApiV1WeiboWebFetchTopicDetailGet(
        utility::string_t topicName,
        boost::optional<utility::string_t> page
    ) const;
    /// <summary>
    /// 获取话题详情/Get topic details
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取话题详情 ### 参数: - topic_name: 话题名称 - page: 页数 ### 返回: - 话题详情  # [English] ### Purpose: - Get topic details ### Parameters: - topic_name: Topic name - page: Page number ### Return: - Topic details  # [示例/Example] topic_name &#x3D; \&quot;游戏\&quot; page &#x3D; \&quot;\&quot;
    /// </remarks>
    /// <param name="topicName">话题名称/Topic name</param>
    /// <param name="page">页数/Page number (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchTopicDetailApiV1WeiboWebFetchTopicDetailGet_0(
        utility::string_t topicName,
        boost::optional<utility::string_t> page
    ) const;
    /// <summary>
    /// 获取话题统计数据/Get topic statistics
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取话题统计数据 ### 参数: - topic_name: 话题名称 ### 返回: - 话题统计数据  # [English] ### Purpose: - Get topic statistics ### Parameters: - topic_name: Topic name ### Return: - Topic statistics  # [示例/Example] topic_name &#x3D; \&quot;游戏\&quot;
    /// </remarks>
    /// <param name="topicName">话题名称/Topic name</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchTopicStatsApiV1WeiboWebFetchTopicStatsGet(
        utility::string_t topicName
    ) const;
    /// <summary>
    /// 获取话题统计数据/Get topic statistics
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取话题统计数据 ### 参数: - topic_name: 话题名称 ### 返回: - 话题统计数据  # [English] ### Purpose: - Get topic statistics ### Parameters: - topic_name: Topic name ### Return: - Topic statistics  # [示例/Example] topic_name &#x3D; \&quot;游戏\&quot;
    /// </remarks>
    /// <param name="topicName">话题名称/Topic name</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchTopicStatsApiV1WeiboWebFetchTopicStatsGet_0(
        utility::string_t topicName
    ) const;
    /// <summary>
    /// 获取用户信息/Get user information
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取用户信息 ### 参数: - uid: 用户id ### 返回: - 用户信息  # [English] ### Purpose: - Get user information ### Parameters: - uid: User id ### Return: - User information  # [示例/Example] uid &#x3D; \&quot;7277477906\&quot;
    /// </remarks>
    /// <param name="uid">用户id/User id</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchUserInfoApiV1WeiboWebFetchUserInfoGet(
        utility::string_t uid
    ) const;
    /// <summary>
    /// 获取用户信息/Get user information
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取用户信息 ### 参数: - uid: 用户id ### 返回: - 用户信息  # [English] ### Purpose: - Get user information ### Parameters: - uid: User id ### Return: - User information  # [示例/Example] uid &#x3D; \&quot;7277477906\&quot;
    /// </remarks>
    /// <param name="uid">用户id/User id</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchUserInfoApiV1WeiboWebFetchUserInfoGet_0(
        utility::string_t uid
    ) const;
    /// <summary>
    /// 获取用户信息V2/Get user information V2
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取用户信息V2 ### 参数: - uid: 用户id ### 返回: - 用户信息  # [English] ### Purpose: - Get user information V2 ### Parameters: - uid: User id ### Return: - User information  # [示例/Example] uid &#x3D; \&quot;7277477906\&quot;
    /// </remarks>
    /// <param name="uid">用户id/User id</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchUserInfoV2ApiV1WeiboWebFetchUserInfoV2Get(
        utility::string_t uid
    ) const;
    /// <summary>
    /// 获取用户信息V2/Get user information V2
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取用户信息V2 ### 参数: - uid: 用户id ### 返回: - 用户信息  # [English] ### Purpose: - Get user information V2 ### Parameters: - uid: User id ### Return: - User information  # [示例/Example] uid &#x3D; \&quot;7277477906\&quot;
    /// </remarks>
    /// <param name="uid">用户id/User id</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchUserInfoV2ApiV1WeiboWebFetchUserInfoV2Get_0(
        utility::string_t uid
    ) const;
    /// <summary>
    /// 获取微博用户文章数据/Get Weibo user article data
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取微博用户文章数据 ### 参数: - uid: 用户id - page: 页数 - feature: 特征 ### 返回: - 用户文章数据  # [English] ### Purpose: - Get Weibo user article data ### Parameters: - uid: User id - page: Page number - feature: Feature ### Return: - User article data  # [示例/Example] uid &#x3D; \&quot;7277477906\&quot; page &#x3D; 1 feature &#x3D; 0
    /// </remarks>
    /// <param name="uid">用户id/User id</param>
    /// <param name="page">页数/Page number (optional, default to 0)</param>
    /// <param name="feature">特征/Feature (optional, default to 0)</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchUserPostsApiV1WeiboWebFetchUserPostsGet(
        utility::string_t uid,
        boost::optional<int32_t> page,
        boost::optional<int32_t> feature
    ) const;
    /// <summary>
    /// 获取微博用户文章数据/Get Weibo user article data
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取微博用户文章数据 ### 参数: - uid: 用户id - page: 页数 - feature: 特征 ### 返回: - 用户文章数据  # [English] ### Purpose: - Get Weibo user article data ### Parameters: - uid: User id - page: Page number - feature: Feature ### Return: - User article data  # [示例/Example] uid &#x3D; \&quot;7277477906\&quot; page &#x3D; 1 feature &#x3D; 0
    /// </remarks>
    /// <param name="uid">用户id/User id</param>
    /// <param name="page">页数/Page number (optional, default to 0)</param>
    /// <param name="feature">特征/Feature (optional, default to 0)</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchUserPostsApiV1WeiboWebFetchUserPostsGet_0(
        utility::string_t uid,
        boost::optional<int32_t> page,
        boost::optional<int32_t> feature
    ) const;

protected:
    std::shared_ptr<const ApiClient> m_ApiClient;
};

}
}
}
}

#endif /* IO_TIKHUB_CLIENT_API_WeiboWebAPIApi_H_ */

