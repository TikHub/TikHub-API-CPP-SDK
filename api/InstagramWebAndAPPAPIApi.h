/**
 * TikHub.io - Your Ultimate Social Media Data & API Marketplace
 * High-performance asynchronous Douyin(抖音) TikTok Xiaohongshu(小红书) Kuaishou(快手) Weibo(微博) Instagram YouTube(油管) Twitter(X) Captcha Solver(验证码解决器) Temp Mail(临时邮箱) API(接口).
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.3.1.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * InstagramWebAndAPPAPIApi.h
 *
 * 
 */

#ifndef IO_TIKHUB_CLIENT_API_InstagramWebAndAPPAPIApi_H_
#define IO_TIKHUB_CLIENT_API_InstagramWebAndAPPAPIApi_H_


#include "../ApiClient.h"

#include "HttpValidationError.h"
#include "ResponseModel.h"
#include <cpprest/details/basic_types.h>


#include <boost/optional.hpp>

namespace io {
namespace tikhub {
namespace client {
namespace api {

using namespace org::openapitools::client::model;



class  InstagramWebAndAPPAPIApi 
{
public:

    explicit InstagramWebAndAPPAPIApi( std::shared_ptr<const ApiClient> apiClient );

    virtual ~InstagramWebAndAPPAPIApi();

    /// <summary>
    /// 根据评论ID获取评论回复数据/Get comment replies by comment ID
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 根据Instagram评论ID获取评论回复数据 - 由于此接口收到后端代理服务器的影响，请在请求此接口时适当调整timeout参数。 - 建议将timeout设置为60秒，以确保能够获取到数据，大多数情况下，数据获取时间在10秒以内。 ### 参数: - url: Instagram帖子URL - comment_id: Instagram评论ID - pagination_token: 分页token，第一次请求不需要传值，后续页需要传入上一页的返回值。 ### 返回: - 评论回复数据  # [English] ### Purpose: - Get comment replies by Instagram comment ID - Due to the impact of the backend proxy server, please adjust the timeout parameter appropriately when requesting this interface. - It is recommended to set the timeout to 60 seconds to ensure that the data can be obtained. In most cases, the data acquisition time is within 10 seconds. ### Parameters: - url: Instagram post URL - comment_id: Instagram comment ID - pagination_token: Pagination token, no need to pass value for the first request, pass the return value of the previous page for subsequent pages. ### Return: - Comment replies data  # [示例/Example] url &#x3D; \&quot;https://www.instagram.com/p/C3OqtMeRxrV/\&quot; comment_id &#x3D; \&quot;18033049183828491\&quot; pagination_token &#x3D; None
    /// </remarks>
    /// <param name="url">Instagram帖子URL/Instagram post URL</param>
    /// <param name="commentId">Instagram评论ID/Instagram comment ID</param>
    /// <param name="paginationToken">分页token/Pagination token (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchCommentRepliesByCommentIdApiV1InstagramWebAppFetchCommentRepliesByCommentIdGet(
        utility::string_t url,
        utility::string_t commentId,
        boost::optional<utility::string_t> paginationToken
    ) const;
    /// <summary>
    /// 根据评论ID获取评论回复数据/Get comment replies by comment ID
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 根据Instagram评论ID获取评论回复数据 - 由于此接口收到后端代理服务器的影响，请在请求此接口时适当调整timeout参数。 - 建议将timeout设置为60秒，以确保能够获取到数据，大多数情况下，数据获取时间在10秒以内。 ### 参数: - url: Instagram帖子URL - comment_id: Instagram评论ID - pagination_token: 分页token，第一次请求不需要传值，后续页需要传入上一页的返回值。 ### 返回: - 评论回复数据  # [English] ### Purpose: - Get comment replies by Instagram comment ID - Due to the impact of the backend proxy server, please adjust the timeout parameter appropriately when requesting this interface. - It is recommended to set the timeout to 60 seconds to ensure that the data can be obtained. In most cases, the data acquisition time is within 10 seconds. ### Parameters: - url: Instagram post URL - comment_id: Instagram comment ID - pagination_token: Pagination token, no need to pass value for the first request, pass the return value of the previous page for subsequent pages. ### Return: - Comment replies data  # [示例/Example] url &#x3D; \&quot;https://www.instagram.com/p/C3OqtMeRxrV/\&quot; comment_id &#x3D; \&quot;18033049183828491\&quot; pagination_token &#x3D; None
    /// </remarks>
    /// <param name="url">Instagram帖子URL/Instagram post URL</param>
    /// <param name="commentId">Instagram评论ID/Instagram comment ID</param>
    /// <param name="paginationToken">分页token/Pagination token (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchCommentRepliesByCommentIdApiV1InstagramWebAppFetchCommentRepliesByCommentIdGet_0(
        utility::string_t url,
        utility::string_t commentId,
        boost::optional<utility::string_t> paginationToken
    ) const;
    /// <summary>
    /// 综合搜索/Search all by query
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 综合搜索 - 由于此接口收到后端代理服务器的影响，请在请求此接口时适当调整timeout参数。 - 建议将timeout设置为60秒，以确保能够获取到数据，大多数情况下，数据获取时间在10秒以内。 ### 参数: - keyword: 关键词 ### 返回: - 搜索结果  # [English] ### Purpose: - Search all by query - Due to the impact of the backend proxy server, please adjust the timeout parameter appropriately when requesting this interface. - It is recommended to set the timeout to 60 seconds to ensure that the data can be obtained. In most cases, the data acquisition time is within 10 seconds. ### Parameters: - keyword: Query ### Return: - Search result  # [示例/Example] keyword &#x3D; \&quot;GitHub\&quot;
    /// </remarks>
    /// <param name="keyword">关键词/Query</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchGlobalSearchApiV1InstagramWebAppFetchGlobalSearchGet(
        utility::string_t keyword
    ) const;
    /// <summary>
    /// 综合搜索/Search all by query
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 综合搜索 - 由于此接口收到后端代理服务器的影响，请在请求此接口时适当调整timeout参数。 - 建议将timeout设置为60秒，以确保能够获取到数据，大多数情况下，数据获取时间在10秒以内。 ### 参数: - keyword: 关键词 ### 返回: - 搜索结果  # [English] ### Purpose: - Search all by query - Due to the impact of the backend proxy server, please adjust the timeout parameter appropriately when requesting this interface. - It is recommended to set the timeout to 60 seconds to ensure that the data can be obtained. In most cases, the data acquisition time is within 10 seconds. ### Parameters: - keyword: Query ### Return: - Search result  # [示例/Example] keyword &#x3D; \&quot;GitHub\&quot;
    /// </remarks>
    /// <param name="keyword">关键词/Query</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchGlobalSearchApiV1InstagramWebAppFetchGlobalSearchGet_0(
        utility::string_t keyword
    ) const;
    /// <summary>
    /// 根据关键词获取话题帖子/Get hashtag posts by query
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 根据关键词获取话题帖子 - 由于此接口收到后端代理服务器的影响，请在请求此接口时适当调整timeout参数。 - 建议将timeout设置为60秒，以确保能够获取到数据，大多数情况下，数据获取时间在10秒以内。 ### 参数: - keyword: 关键词 - pagination_token: 翻页游标，用于翻页，第一页不需要传值，后续页需要传入上一页的返回值。 - feed_type: Feed类型     - top: 热门（默认）     - recent: 最新     - clips: 快拍 ### 返回: - 话题帖子  # [English] ### Purpose: - Get hashtag posts by query - Due to the impact of the backend proxy server, please adjust the timeout parameter appropriately when requesting this interface. - It is recommended to set the timeout to 60 seconds to ensure that the data can be obtained. In most cases, the data acquisition time is within 10 seconds. ### Parameters: - keyword: Query - pagination_token: Pagination token, used for pagination, no need to pass value for the first page, pass the return value of the previous page for subsequent pages. - feed_type: Feed type     - top: Top (default)     - recent: Recent (sort by time)     - clips: Clips (show only Reels) ### Return: - Hashtag posts  # [示例/Example] keyword &#x3D; \&quot;GitHub\&quot; pagination_token &#x3D; None
    /// </remarks>
    /// <param name="keyword">关键词/Query</param>
    /// <param name="paginationToken">翻页令牌/Pagination token (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="feedType">Feed类型/Feed type (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchHashtagPostsByKeywordApiV1InstagramWebAppFetchHashtagPostsByKeywordGet(
        utility::string_t keyword,
        boost::optional<utility::string_t> paginationToken,
        boost::optional<utility::string_t> feedType
    ) const;
    /// <summary>
    /// 根据关键词获取话题帖子/Get hashtag posts by query
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 根据关键词获取话题帖子 - 由于此接口收到后端代理服务器的影响，请在请求此接口时适当调整timeout参数。 - 建议将timeout设置为60秒，以确保能够获取到数据，大多数情况下，数据获取时间在10秒以内。 ### 参数: - keyword: 关键词 - pagination_token: 翻页游标，用于翻页，第一页不需要传值，后续页需要传入上一页的返回值。 - feed_type: Feed类型     - top: 热门（默认）     - recent: 最新     - clips: 快拍 ### 返回: - 话题帖子  # [English] ### Purpose: - Get hashtag posts by query - Due to the impact of the backend proxy server, please adjust the timeout parameter appropriately when requesting this interface. - It is recommended to set the timeout to 60 seconds to ensure that the data can be obtained. In most cases, the data acquisition time is within 10 seconds. ### Parameters: - keyword: Query - pagination_token: Pagination token, used for pagination, no need to pass value for the first page, pass the return value of the previous page for subsequent pages. - feed_type: Feed type     - top: Top (default)     - recent: Recent (sort by time)     - clips: Clips (show only Reels) ### Return: - Hashtag posts  # [示例/Example] keyword &#x3D; \&quot;GitHub\&quot; pagination_token &#x3D; None
    /// </remarks>
    /// <param name="keyword">关键词/Query</param>
    /// <param name="paginationToken">翻页令牌/Pagination token (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="feedType">Feed类型/Feed type (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchHashtagPostsByKeywordApiV1InstagramWebAppFetchHashtagPostsByKeywordGet_0(
        utility::string_t keyword,
        boost::optional<utility::string_t> paginationToken,
        boost::optional<utility::string_t> feedType
    ) const;
    /// <summary>
    /// 根据highlights ID获取highlight数据/Get highlights by highlight ID
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 根据Instagram highlight ID获取highlight数据 - 由于此接口收到后端代理服务器的影响，请在请求此接口时适当调整timeout参数。 - 建议将timeout设置为60秒，以确保能够获取到数据，大多数情况下，数据获取时间在10秒以内。 ### 参数: - highlight_id: Instagram highlight ID ### 返回: - highlight数据  # [English] ### Purpose: - Get highlights by Instagram highlight ID - Due to the impact of the backend proxy server, please adjust the timeout parameter appropriately when requesting this interface. - It is recommended to set the timeout to 60 seconds to ensure that the data can be obtained. In most cases, the data acquisition time is within 10 seconds. ### Parameters: - highlight_id: Instagram highlight ID ### Return: - Highlight data  # [示例/Example] highlight_id &#x3D; \&quot;17871373118984285\&quot;
    /// </remarks>
    /// <param name="highlightId">Instagram highlight ID/Instagram highlight ID</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchHighlightsByHighlightIdApiV1InstagramWebAppFetchHighlightsByHighlightIdGet(
        utility::string_t highlightId
    ) const;
    /// <summary>
    /// 根据highlights ID获取highlight数据/Get highlights by highlight ID
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 根据Instagram highlight ID获取highlight数据 - 由于此接口收到后端代理服务器的影响，请在请求此接口时适当调整timeout参数。 - 建议将timeout设置为60秒，以确保能够获取到数据，大多数情况下，数据获取时间在10秒以内。 ### 参数: - highlight_id: Instagram highlight ID ### 返回: - highlight数据  # [English] ### Purpose: - Get highlights by Instagram highlight ID - Due to the impact of the backend proxy server, please adjust the timeout parameter appropriately when requesting this interface. - It is recommended to set the timeout to 60 seconds to ensure that the data can be obtained. In most cases, the data acquisition time is within 10 seconds. ### Parameters: - highlight_id: Instagram highlight ID ### Return: - Highlight data  # [示例/Example] highlight_id &#x3D; \&quot;17871373118984285\&quot;
    /// </remarks>
    /// <param name="highlightId">Instagram highlight ID/Instagram highlight ID</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchHighlightsByHighlightIdApiV1InstagramWebAppFetchHighlightsByHighlightIdGet_0(
        utility::string_t highlightId
    ) const;
    /// <summary>
    /// 根据地点ID获取地点相关的帖子/Get location posts by location ID
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 根据Instagram地点ID获取地点相关的帖子 - 由于此接口收到后端代理服务器的影响，请在请求此接口时适当调整timeout参数。 - 建议将timeout设置为60秒，以确保能够获取到数据，大多数情况下，数据获取时间在10秒以内。 ### 参数: - location_id: Instagram地点ID - max_id: 最大ID，用于翻页，第一页不需要传值，后续页需要传入上一页的返回值。 ### 返回: - 地点相关的帖子  # [English] ### Purpose: - Get location posts by Instagram location ID - Due to the impact of the backend proxy server, please adjust the timeout parameter appropriately when requesting this interface. - It is recommended to set the timeout to 60 seconds to ensure that the data can be obtained. In most cases, the data acquisition time is within 10 seconds. ### Parameters: - location_id: Instagram location ID - max_id: Max ID, used for pagination, no need to pass value for the first page, pass the return value of the previous page for subsequent pages. ### Return: - Location posts  # [示例/Example] location_id &#x3D; \&quot;115412053922647\&quot; max_id &#x3D; None
    /// </remarks>
    /// <param name="locationId">Instagram地点ID/Instagram location ID</param>
    /// <param name="maxId">最大ID/Max ID (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchLocationPostsByLocationIdApiV1InstagramWebAppFetchLocationPostsByLocationIdGet(
        utility::string_t locationId,
        boost::optional<utility::string_t> maxId
    ) const;
    /// <summary>
    /// 根据地点ID获取地点相关的帖子/Get location posts by location ID
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 根据Instagram地点ID获取地点相关的帖子 - 由于此接口收到后端代理服务器的影响，请在请求此接口时适当调整timeout参数。 - 建议将timeout设置为60秒，以确保能够获取到数据，大多数情况下，数据获取时间在10秒以内。 ### 参数: - location_id: Instagram地点ID - max_id: 最大ID，用于翻页，第一页不需要传值，后续页需要传入上一页的返回值。 ### 返回: - 地点相关的帖子  # [English] ### Purpose: - Get location posts by Instagram location ID - Due to the impact of the backend proxy server, please adjust the timeout parameter appropriately when requesting this interface. - It is recommended to set the timeout to 60 seconds to ensure that the data can be obtained. In most cases, the data acquisition time is within 10 seconds. ### Parameters: - location_id: Instagram location ID - max_id: Max ID, used for pagination, no need to pass value for the first page, pass the return value of the previous page for subsequent pages. ### Return: - Location posts  # [示例/Example] location_id &#x3D; \&quot;115412053922647\&quot; max_id &#x3D; None
    /// </remarks>
    /// <param name="locationId">Instagram地点ID/Instagram location ID</param>
    /// <param name="maxId">最大ID/Max ID (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchLocationPostsByLocationIdApiV1InstagramWebAppFetchLocationPostsByLocationIdGet_0(
        utility::string_t locationId,
        boost::optional<utility::string_t> maxId
    ) const;
    /// <summary>
    /// 根据音乐ID获取音乐数据/Get music data by music ID
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 根据Instagram音乐ID获取音乐数据 - 由于此接口收到后端代理服务器的影响，请在请求此接口时适当调整timeout参数。 - 建议将timeout设置为60秒，以确保能够获取到数据，大多数情况下，数据获取时间在10秒以内。 ### 参数: - music_id: Instagram音乐ID ### 返回: - 音乐数据  # [English] ### Purpose: - Get music data by Instagram music ID - Due to the impact of the backend proxy server, please adjust the timeout parameter appropriately when requesting this interface. - It is recommended to set the timeout to 60 seconds to ensure that the data can be obtained. In most cases, the data acquisition time is within 10 seconds. ### Parameters: - music_id: Instagram music ID ### Return: - Music data  # [示例/Example] music_id &#x3D; \&quot;841270117005292\&quot;
    /// </remarks>
    /// <param name="musicId">Instagram音乐ID/Instagram music ID</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchMusicInfoByMusicIdApiV1InstagramWebAppFetchMusicInfoByMusicIdGet(
        utility::string_t musicId
    ) const;
    /// <summary>
    /// 根据音乐ID获取音乐数据/Get music data by music ID
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 根据Instagram音乐ID获取音乐数据 - 由于此接口收到后端代理服务器的影响，请在请求此接口时适当调整timeout参数。 - 建议将timeout设置为60秒，以确保能够获取到数据，大多数情况下，数据获取时间在10秒以内。 ### 参数: - music_id: Instagram音乐ID ### 返回: - 音乐数据  # [English] ### Purpose: - Get music data by Instagram music ID - Due to the impact of the backend proxy server, please adjust the timeout parameter appropriately when requesting this interface. - It is recommended to set the timeout to 60 seconds to ensure that the data can be obtained. In most cases, the data acquisition time is within 10 seconds. ### Parameters: - music_id: Instagram music ID ### Return: - Music data  # [示例/Example] music_id &#x3D; \&quot;841270117005292\&quot;
    /// </remarks>
    /// <param name="musicId">Instagram音乐ID/Instagram music ID</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchMusicInfoByMusicIdApiV1InstagramWebAppFetchMusicInfoByMusicIdGet_0(
        utility::string_t musicId
    ) const;
    /// <summary>
    /// 根据URL获取帖子评论数据/Get post comments by URL
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 根据Instagram帖子URL获取帖子评论数据 - 由于此接口收到后端代理服务器的影响，请在请求此接口时适当调整timeout参数。 - 建议将timeout设置为60秒，以确保能够获取到数据，大多数情况下，数据获取时间在10秒以内。 ### 参数: - url: Instagram帖子URL - pagination_token: 分页token，第一次请求不需要传值，后续页需要传入上一页的返回值。 ### 返回: - 帖子评论数据  # [English] ### Purpose: - Get post comments by Instagram post URL - Due to the impact of the backend proxy server, please adjust the timeout parameter appropriately when requesting this interface. - It is recommended to set the timeout to 60 seconds to ensure that the data can be obtained. In most cases, the data acquisition time is within 10 seconds. ### Parameters: - url: Instagram post URL - pagination_token: Pagination token, no need to pass value for the first request, pass the return value of the previous page for subsequent pages. ### Return: - Post comments data  # [示例/Example] url &#x3D; \&quot;https://www.instagram.com/p/C3OqtMeRxrV/\&quot; pagination_token &#x3D; None
    /// </remarks>
    /// <param name="url">Instagram帖子URL/Instagram post URL</param>
    /// <param name="paginationToken">分页token/Pagination token (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchPostCommentsByUrlApiV1InstagramWebAppFetchPostCommentsByUrlGet(
        utility::string_t url,
        boost::optional<utility::string_t> paginationToken
    ) const;
    /// <summary>
    /// 根据URL获取帖子评论数据/Get post comments by URL
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 根据Instagram帖子URL获取帖子评论数据 - 由于此接口收到后端代理服务器的影响，请在请求此接口时适当调整timeout参数。 - 建议将timeout设置为60秒，以确保能够获取到数据，大多数情况下，数据获取时间在10秒以内。 ### 参数: - url: Instagram帖子URL - pagination_token: 分页token，第一次请求不需要传值，后续页需要传入上一页的返回值。 ### 返回: - 帖子评论数据  # [English] ### Purpose: - Get post comments by Instagram post URL - Due to the impact of the backend proxy server, please adjust the timeout parameter appropriately when requesting this interface. - It is recommended to set the timeout to 60 seconds to ensure that the data can be obtained. In most cases, the data acquisition time is within 10 seconds. ### Parameters: - url: Instagram post URL - pagination_token: Pagination token, no need to pass value for the first request, pass the return value of the previous page for subsequent pages. ### Return: - Post comments data  # [示例/Example] url &#x3D; \&quot;https://www.instagram.com/p/C3OqtMeRxrV/\&quot; pagination_token &#x3D; None
    /// </remarks>
    /// <param name="url">Instagram帖子URL/Instagram post URL</param>
    /// <param name="paginationToken">分页token/Pagination token (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchPostCommentsByUrlApiV1InstagramWebAppFetchPostCommentsByUrlGet_0(
        utility::string_t url,
        boost::optional<utility::string_t> paginationToken
    ) const;
    /// <summary>
    /// 根据帖子ID获取帖子数据/Get post data by post ID
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 根据Instagram帖子ID获取帖子数据 - 由于此接口收到后端代理服务器的影响，请在请求此接口时适当调整timeout参数。 - 建议将timeout设置为60秒，以确保能够获取到数据，大多数情况下，数据获取时间在10秒以内。 ### 参数: - post_id: Instagram帖子ID ### 返回: - 帖子数据  # [English] ### Purpose: - Get post data by Instagram post ID - Due to the impact of the backend proxy server, please adjust the timeout parameter appropriately when requesting this interface. - It is recommended to set the timeout to 60 seconds to ensure that the data can be obtained. In most cases, the data acquisition time is within 10 seconds. ### Parameters: - post_id: Instagram post ID ### Return: - Post data  # [示例/Example] post_id &#x3D; \&quot;3369328379222099122\&quot;
    /// </remarks>
    /// <param name="postId">Instagram帖子ID/Instagram post ID</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchPostInfoByPostIdApiV1InstagramWebAppFetchPostInfoByPostIdGet(
        utility::string_t postId
    ) const;
    /// <summary>
    /// 根据帖子ID获取帖子数据/Get post data by post ID
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 根据Instagram帖子ID获取帖子数据 - 由于此接口收到后端代理服务器的影响，请在请求此接口时适当调整timeout参数。 - 建议将timeout设置为60秒，以确保能够获取到数据，大多数情况下，数据获取时间在10秒以内。 ### 参数: - post_id: Instagram帖子ID ### 返回: - 帖子数据  # [English] ### Purpose: - Get post data by Instagram post ID - Due to the impact of the backend proxy server, please adjust the timeout parameter appropriately when requesting this interface. - It is recommended to set the timeout to 60 seconds to ensure that the data can be obtained. In most cases, the data acquisition time is within 10 seconds. ### Parameters: - post_id: Instagram post ID ### Return: - Post data  # [示例/Example] post_id &#x3D; \&quot;3369328379222099122\&quot;
    /// </remarks>
    /// <param name="postId">Instagram帖子ID/Instagram post ID</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchPostInfoByPostIdApiV1InstagramWebAppFetchPostInfoByPostIdGet_0(
        utility::string_t postId
    ) const;
    /// <summary>
    /// 根据URL获取帖子数据/Get post data by URL
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 根据Instagram帖子URL获取帖子数据 - 由于此接口收到后端代理服务器的影响，请在请求此接口时适当调整timeout参数。 - 建议将timeout设置为60秒，以确保能够获取到数据，大多数情况下，数据获取时间在10秒以内。 ### 参数: - url: Instagram帖子URL ### 返回: - 帖子数据  # [English] ### Purpose: - Get post data by Instagram post URL - Due to the impact of the backend proxy server, please adjust the timeout parameter appropriately when requesting this interface. - It is recommended to set the timeout to 60 seconds to ensure that the data can be obtained. In most cases, the data acquisition time is within 10 seconds. ### Parameters: - url: Instagram post URL ### Return: - Post data  # [示例/Example] url &#x3D; \&quot;https://www.instagram.com/p/C7CQk83LQSy/\&quot;
    /// </remarks>
    /// <param name="url">Instagram帖子URL/Instagram post URL</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchPostInfoByUrlApiV1InstagramWebAppFetchPostInfoByUrlGet(
        utility::string_t url
    ) const;
    /// <summary>
    /// 根据URL获取帖子数据/Get post data by URL
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 根据Instagram帖子URL获取帖子数据 - 由于此接口收到后端代理服务器的影响，请在请求此接口时适当调整timeout参数。 - 建议将timeout设置为60秒，以确保能够获取到数据，大多数情况下，数据获取时间在10秒以内。 ### 参数: - url: Instagram帖子URL ### 返回: - 帖子数据  # [English] ### Purpose: - Get post data by Instagram post URL - Due to the impact of the backend proxy server, please adjust the timeout parameter appropriately when requesting this interface. - It is recommended to set the timeout to 60 seconds to ensure that the data can be obtained. In most cases, the data acquisition time is within 10 seconds. ### Parameters: - url: Instagram post URL ### Return: - Post data  # [示例/Example] url &#x3D; \&quot;https://www.instagram.com/p/C7CQk83LQSy/\&quot;
    /// </remarks>
    /// <param name="url">Instagram帖子URL/Instagram post URL</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchPostInfoByUrlApiV1InstagramWebAppFetchPostInfoByUrlGet_0(
        utility::string_t url
    ) const;
    /// <summary>
    /// 根据URL获取帖子点赞数据/Get post likes by URL
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 根据Instagram帖子URL获取帖子点赞数据 - 由于此接口收到后端代理服务器的影响，请在请求此接口时适当调整timeout参数。 - 建议将timeout设置为60秒，以确保能够获取到数据，大多数情况下，数据获取时间在10秒以内。 ### 参数: - url: Instagram帖子URL ### 返回: - 帖子点赞数据  # [English] ### Purpose: - Get post likes by Instagram post URL - Due to the impact of the backend proxy server, please adjust the timeout parameter appropriately when requesting this interface. - It is recommended to set the timeout to 60 seconds to ensure that the data can be obtained. In most cases, the data acquisition time is within 10 seconds. ### Parameters: - url: Instagram post URL ### Return: - Post likes data  # [示例/Example] url &#x3D; \&quot;https://www.instagram.com/p/C3OqtMeRxrV/\&quot;
    /// </remarks>
    /// <param name="url">Instagram帖子URL/Instagram post URL</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchPostLikesByUrlApiV1InstagramWebAppFetchPostLikesByUrlGet(
        utility::string_t url
    ) const;
    /// <summary>
    /// 根据URL获取帖子点赞数据/Get post likes by URL
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 根据Instagram帖子URL获取帖子点赞数据 - 由于此接口收到后端代理服务器的影响，请在请求此接口时适当调整timeout参数。 - 建议将timeout设置为60秒，以确保能够获取到数据，大多数情况下，数据获取时间在10秒以内。 ### 参数: - url: Instagram帖子URL ### 返回: - 帖子点赞数据  # [English] ### Purpose: - Get post likes by Instagram post URL - Due to the impact of the backend proxy server, please adjust the timeout parameter appropriately when requesting this interface. - It is recommended to set the timeout to 60 seconds to ensure that the data can be obtained. In most cases, the data acquisition time is within 10 seconds. ### Parameters: - url: Instagram post URL ### Return: - Post likes data  # [示例/Example] url &#x3D; \&quot;https://www.instagram.com/p/C3OqtMeRxrV/\&quot;
    /// </remarks>
    /// <param name="url">Instagram帖子URL/Instagram post URL</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchPostLikesByUrlApiV1InstagramWebAppFetchPostLikesByUrlGet_0(
        utility::string_t url
    ) const;
    /// <summary>
    /// 根据帖子URL获取媒体数据/Get media data by URL
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 根据Instagram帖子URL获取媒体数据 - 由于此接口收到后端代理服务器的影响，请在请求此接口时适当调整timeout参数。 - 建议将timeout设置为60秒，以确保能够获取到数据，大多数情况下，数据获取时间在10秒以内。 ### 参数: - url: Instagram帖子URL ### 返回: - 媒体数据  # [English] ### Purpose: - Get media data by Instagram post URL - Due to the impact of the backend proxy server, please adjust the timeout parameter appropriately when requesting this interface. - It is recommended to set the timeout to 60 seconds to ensure that the data can be obtained. In most cases, the data acquisition time is within 10 seconds. ### Parameters: - url: Instagram post URL ### Return: - Media data  # [示例/Example] url &#x3D; \&quot;https://www.instagram.com/p/C7CQk83LQSy/\&quot;
    /// </remarks>
    /// <param name="url">Instagram帖子URL/Instagram post URL</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchPostMediaByUrlApiV1InstagramWebAppFetchPostMediaByUrlGet(
        utility::string_t url
    ) const;
    /// <summary>
    /// 根据帖子URL获取媒体数据/Get media data by URL
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 根据Instagram帖子URL获取媒体数据 - 由于此接口收到后端代理服务器的影响，请在请求此接口时适当调整timeout参数。 - 建议将timeout设置为60秒，以确保能够获取到数据，大多数情况下，数据获取时间在10秒以内。 ### 参数: - url: Instagram帖子URL ### 返回: - 媒体数据  # [English] ### Purpose: - Get media data by Instagram post URL - Due to the impact of the backend proxy server, please adjust the timeout parameter appropriately when requesting this interface. - It is recommended to set the timeout to 60 seconds to ensure that the data can be obtained. In most cases, the data acquisition time is within 10 seconds. ### Parameters: - url: Instagram post URL ### Return: - Media data  # [示例/Example] url &#x3D; \&quot;https://www.instagram.com/p/C7CQk83LQSy/\&quot;
    /// </remarks>
    /// <param name="url">Instagram帖子URL/Instagram post URL</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchPostMediaByUrlApiV1InstagramWebAppFetchPostMediaByUrlGet_0(
        utility::string_t url
    ) const;
    /// <summary>
    /// 根据用户ID获取与用户相关的其他用户/Get user related users by user ID
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 根据Instagram用户ID获取与用户相关的其他用户 - 由于此接口收到后端代理服务器的影响，请在请求此接口时适当调整timeout参数。 - 建议将timeout设置为60秒，以确保能够获取到数据，大多数情况下，数据获取时间在10秒以内。 ### 参数: - user_id: Instagram用户ID ### 返回: - 与用户相关的其他用户  # [English] ### Purpose: - Get user related users by Instagram user ID - Due to the impact of the backend proxy server, please adjust the timeout parameter appropriately when requesting this interface. - It is recommended to set the timeout to 60 seconds to ensure that the data can be obtained. In most cases, the data acquisition time is within 10 seconds. ### Parameters: - user_id: Instagram user ID ### Return: - User related users  # [示例/Example] user_id &#x3D; \&quot;25025320\&quot;
    /// </remarks>
    /// <param name="userId">Instagram用户ID/Instagram user ID</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchRelatedUsersByUserIdApiV1InstagramWebAppFetchRelatedUsersByUserIdGet(
        utility::string_t userId
    ) const;
    /// <summary>
    /// 根据用户ID获取与用户相关的其他用户/Get user related users by user ID
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 根据Instagram用户ID获取与用户相关的其他用户 - 由于此接口收到后端代理服务器的影响，请在请求此接口时适当调整timeout参数。 - 建议将timeout设置为60秒，以确保能够获取到数据，大多数情况下，数据获取时间在10秒以内。 ### 参数: - user_id: Instagram用户ID ### 返回: - 与用户相关的其他用户  # [English] ### Purpose: - Get user related users by Instagram user ID - Due to the impact of the backend proxy server, please adjust the timeout parameter appropriately when requesting this interface. - It is recommended to set the timeout to 60 seconds to ensure that the data can be obtained. In most cases, the data acquisition time is within 10 seconds. ### Parameters: - user_id: Instagram user ID ### Return: - User related users  # [示例/Example] user_id &#x3D; \&quot;25025320\&quot;
    /// </remarks>
    /// <param name="userId">Instagram用户ID/Instagram user ID</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchRelatedUsersByUserIdApiV1InstagramWebAppFetchRelatedUsersByUserIdGet_0(
        utility::string_t userId
    ) const;
    /// <summary>
    /// 根据关键词搜索话题数据/Search hashtags by query
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 根据关键词搜索话题数据 - 由于此接口收到后端代理服务器的影响，请在请求此接口时适当调整timeout参数。 - 建议将timeout设置为60秒，以确保能够获取到数据，大多数情况下，数据获取时间在10秒以内。 ### 参数: - keyword: 关键词 ### 返回: - 搜索结果  # [English] ### Purpose: - Search hashtags by query - Due to the impact of the backend proxy server, please adjust the timeout parameter appropriately when requesting this interface. - It is recommended to set the timeout to 60 seconds to ensure that the data can be obtained. In most cases, the data acquisition time is within 10 seconds. ### Parameters: - keyword: Query ### Return: - Search result  # [示例/Example] keyword &#x3D; \&quot;GitHub\&quot;
    /// </remarks>
    /// <param name="keyword">关键词/Query</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchSearchHashtagsByKeywordApiV1InstagramWebAppFetchSearchHashtagsByKeywordGet(
        utility::string_t keyword
    ) const;
    /// <summary>
    /// 根据关键词搜索话题数据/Search hashtags by query
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 根据关键词搜索话题数据 - 由于此接口收到后端代理服务器的影响，请在请求此接口时适当调整timeout参数。 - 建议将timeout设置为60秒，以确保能够获取到数据，大多数情况下，数据获取时间在10秒以内。 ### 参数: - keyword: 关键词 ### 返回: - 搜索结果  # [English] ### Purpose: - Search hashtags by query - Due to the impact of the backend proxy server, please adjust the timeout parameter appropriately when requesting this interface. - It is recommended to set the timeout to 60 seconds to ensure that the data can be obtained. In most cases, the data acquisition time is within 10 seconds. ### Parameters: - keyword: Query ### Return: - Search result  # [示例/Example] keyword &#x3D; \&quot;GitHub\&quot;
    /// </remarks>
    /// <param name="keyword">关键词/Query</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchSearchHashtagsByKeywordApiV1InstagramWebAppFetchSearchHashtagsByKeywordGet_0(
        utility::string_t keyword
    ) const;
    /// <summary>
    /// 根据关键词搜索地点数据/Search locations by query
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 根据关键词搜索地点数据 - 由于此接口收到后端代理服务器的影响，请在请求此接口时适当调整timeout参数。 - 建议将timeout设置为60秒，以确保能够获取到数据，大多数情况下，数据获取时间在10秒以内。 ### 参数: - keyword: 关键词 ### 返回: - 搜索结果  # [English] ### Purpose: - Search locations by query - Due to the impact of the backend proxy server, please adjust the timeout parameter appropriately when requesting this interface. - It is recommended to set the timeout to 60 seconds to ensure that the data can be obtained. In most cases, the data acquisition time is within 10 seconds. ### Parameters: - keyword: Query ### Return: - Search result  # [示例/Example] keyword &#x3D; \&quot;ShangHai\&quot;
    /// </remarks>
    /// <param name="keyword">关键词/Query</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchSearchLocationsByKeywordApiV1InstagramWebAppFetchSearchLocationsByKeywordGet(
        utility::string_t keyword
    ) const;
    /// <summary>
    /// 根据关键词搜索地点数据/Search locations by query
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 根据关键词搜索地点数据 - 由于此接口收到后端代理服务器的影响，请在请求此接口时适当调整timeout参数。 - 建议将timeout设置为60秒，以确保能够获取到数据，大多数情况下，数据获取时间在10秒以内。 ### 参数: - keyword: 关键词 ### 返回: - 搜索结果  # [English] ### Purpose: - Search locations by query - Due to the impact of the backend proxy server, please adjust the timeout parameter appropriately when requesting this interface. - It is recommended to set the timeout to 60 seconds to ensure that the data can be obtained. In most cases, the data acquisition time is within 10 seconds. ### Parameters: - keyword: Query ### Return: - Search result  # [示例/Example] keyword &#x3D; \&quot;ShangHai\&quot;
    /// </remarks>
    /// <param name="keyword">关键词/Query</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchSearchLocationsByKeywordApiV1InstagramWebAppFetchSearchLocationsByKeywordGet_0(
        utility::string_t keyword
    ) const;
    /// <summary>
    /// 根据关键词搜索用户/Search users by query
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 根据关键词搜索用户 - 由于此接口收到后端代理服务器的影响，请在请求此接口时适当调整timeout参数。 - 建议将timeout设置为60秒，以确保能够获取到数据，大多数情况下，数据获取时间在10秒以内。 ### 参数: - keyword: 关键词 ### 返回: - 搜索结果  # [English] ### Purpose: - Search users by query - Due to the impact of the backend proxy server, please adjust the timeout parameter appropriately when requesting this interface. - It is recommended to set the timeout to 60 seconds to ensure that the data can be obtained. In most cases, the data acquisition time is within 10 seconds. ### Parameters: - keyword: Query ### Return: - Search result  # [示例/Example] keyword &#x3D; \&quot;instagram\&quot;
    /// </remarks>
    /// <param name="keyword">关键词/Query</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchSearchUsersByKeywordApiV1InstagramWebAppFetchSearchUsersByKeywordGet(
        utility::string_t keyword
    ) const;
    /// <summary>
    /// 根据关键词搜索用户/Search users by query
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 根据关键词搜索用户 - 由于此接口收到后端代理服务器的影响，请在请求此接口时适当调整timeout参数。 - 建议将timeout设置为60秒，以确保能够获取到数据，大多数情况下，数据获取时间在10秒以内。 ### 参数: - keyword: 关键词 ### 返回: - 搜索结果  # [English] ### Purpose: - Search users by query - Due to the impact of the backend proxy server, please adjust the timeout parameter appropriately when requesting this interface. - It is recommended to set the timeout to 60 seconds to ensure that the data can be obtained. In most cases, the data acquisition time is within 10 seconds. ### Parameters: - keyword: Query ### Return: - Search result  # [示例/Example] keyword &#x3D; \&quot;instagram\&quot;
    /// </remarks>
    /// <param name="keyword">关键词/Query</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchSearchUsersByKeywordApiV1InstagramWebAppFetchSearchUsersByKeywordGet_0(
        utility::string_t keyword
    ) const;
    /// <summary>
    /// 根据用户名获取相似的账户数据/Get similar accounts by username
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 根据Instagram用户名获取相似的账户数据 - 由于此接口收到后端代理服务器的影响，请在请求此接口时适当调整timeout参数。 - 建议将timeout设置为60秒，以确保能够获取到数据，大多数情况下，数据获取时间在10秒以内。 ### 参数: - username: Instagram用户名 ### 返回: - 相似的账户数据  # [English] ### Purpose: - Get similar accounts by Instagram username - Due to the impact of the backend proxy server, please adjust the timeout parameter appropriately when requesting this interface. - It is recommended to set the timeout to 60 seconds to ensure that the data can be obtained. In most cases, the data acquisition time is within 10 seconds. ### Parameters: - username: Instagram username ### Return: - Similar accounts  # [示例/Example] username &#x3D; \&quot;daily_fuck_people\&quot;
    /// </remarks>
    /// <param name="username">Instagram用户名/Instagram username</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchSimilarAccountsByUsernameApiV1InstagramWebAppFetchSimilarAccountsByUsernameGet(
        utility::string_t username
    ) const;
    /// <summary>
    /// 根据用户名获取相似的账户数据/Get similar accounts by username
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 根据Instagram用户名获取相似的账户数据 - 由于此接口收到后端代理服务器的影响，请在请求此接口时适当调整timeout参数。 - 建议将timeout设置为60秒，以确保能够获取到数据，大多数情况下，数据获取时间在10秒以内。 ### 参数: - username: Instagram用户名 ### 返回: - 相似的账户数据  # [English] ### Purpose: - Get similar accounts by Instagram username - Due to the impact of the backend proxy server, please adjust the timeout parameter appropriately when requesting this interface. - It is recommended to set the timeout to 60 seconds to ensure that the data can be obtained. In most cases, the data acquisition time is within 10 seconds. ### Parameters: - username: Instagram username ### Return: - Similar accounts  # [示例/Example] username &#x3D; \&quot;daily_fuck_people\&quot;
    /// </remarks>
    /// <param name="username">Instagram用户名/Instagram username</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchSimilarAccountsByUsernameApiV1InstagramWebAppFetchSimilarAccountsByUsernameGet_0(
        utility::string_t username
    ) const;
    /// <summary>
    /// 根据用户ID获取用户数据关于信息/Get user data about by user ID
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 根据Instagram用户ID获取用户数据关于信息 - 由于此接口收到后端代理服务器的影响，请在请求此接口时适当调整timeout参数。 - 建议将timeout设置为60秒，以确保能够获取到数据，大多数情况下，数据获取时间在10秒以内。 ### 参数: - user_id: Instagram用户ID ### 返回: - 用户数据关于信息  # [English] ### Purpose: - Get user data about by Instagram user ID - Due to the impact of the backend proxy server, please adjust the timeout parameter appropriately when requesting this interface. - It is recommended to set the timeout to 60 seconds to ensure that the data can be obtained. In most cases, the data acquisition time is within 10 seconds. ### Parameters: - user_id: Instagram user ID ### Return: - User data about  # [示例/Example] user_id &#x3D; \&quot;25025320\&quot;
    /// </remarks>
    /// <param name="userId">Instagram用户ID/Instagram user ID</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchUserAboutInfoByIdApiV1InstagramWebAppFetchUserAboutInfoByUserIdGet(
        utility::string_t userId
    ) const;
    /// <summary>
    /// 根据用户ID获取用户数据关于信息/Get user data about by user ID
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 根据Instagram用户ID获取用户数据关于信息 - 由于此接口收到后端代理服务器的影响，请在请求此接口时适当调整timeout参数。 - 建议将timeout设置为60秒，以确保能够获取到数据，大多数情况下，数据获取时间在10秒以内。 ### 参数: - user_id: Instagram用户ID ### 返回: - 用户数据关于信息  # [English] ### Purpose: - Get user data about by Instagram user ID - Due to the impact of the backend proxy server, please adjust the timeout parameter appropriately when requesting this interface. - It is recommended to set the timeout to 60 seconds to ensure that the data can be obtained. In most cases, the data acquisition time is within 10 seconds. ### Parameters: - user_id: Instagram user ID ### Return: - User data about  # [示例/Example] user_id &#x3D; \&quot;25025320\&quot;
    /// </remarks>
    /// <param name="userId">Instagram用户ID/Instagram user ID</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchUserAboutInfoByIdApiV1InstagramWebAppFetchUserAboutInfoByUserIdGet_0(
        utility::string_t userId
    ) const;
    /// <summary>
    /// 根据用户名获取用户的粉丝数据/Get user followers by username
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 根据Instagram用户名获取用户的粉丝数据，只能获取公开账号的粉丝数据，一次最多获取50个粉丝数据。 - 由于此接口收到后端代理服务器的影响，请在请求此接口时适当调整timeout参数。 - 建议将timeout设置为60秒，以确保能够获取到数据，大多数情况下，数据获取时间在10秒以内。 - 为了获取更多的粉丝数据，可以使用返回的pagination_token参数进行分页。 ### 参数: - username: Instagram用户名 - pagination_token: 分页令牌，用于翻页，第一次请求不需要传值，后续请求需要传入上一次请求的返回值。 ### 返回: - 用户的粉丝数据  # [English] ### Purpose: - Get user followers by Instagram username, can only get the followers data of public accounts, up to 50 followers data at a time. - Due to the impact of the backend proxy server, please adjust the timeout parameter appropriately when requesting this interface. - It is recommended to set the timeout to 60 seconds to ensure that the data can be obtained. In most cases, the data acquisition time is within 10 seconds. - To get more followers data, you can use the returned pagination_token parameter for pagination. ### Parameters: - username: Instagram username - pagination_token: Pagination token, used for pagination, no need to pass value for the first request, pass the return value of the previous request for subsequent requests. ### Return: - User followers data  # [示例/Example] username &#x3D; \&quot;instagram\&quot; pagination_token &#x3D; None
    /// </remarks>
    /// <param name="username">Instagram用户名/Instagram username</param>
    /// <param name="paginationToken">分页令牌/Pagination token (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchUserFollowersByUsernameApiV1InstagramWebAppFetchUserFollowersByUsernameGet(
        utility::string_t username,
        boost::optional<utility::string_t> paginationToken
    ) const;
    /// <summary>
    /// 根据用户名获取用户的粉丝数据/Get user followers by username
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 根据Instagram用户名获取用户的粉丝数据，只能获取公开账号的粉丝数据，一次最多获取50个粉丝数据。 - 由于此接口收到后端代理服务器的影响，请在请求此接口时适当调整timeout参数。 - 建议将timeout设置为60秒，以确保能够获取到数据，大多数情况下，数据获取时间在10秒以内。 - 为了获取更多的粉丝数据，可以使用返回的pagination_token参数进行分页。 ### 参数: - username: Instagram用户名 - pagination_token: 分页令牌，用于翻页，第一次请求不需要传值，后续请求需要传入上一次请求的返回值。 ### 返回: - 用户的粉丝数据  # [English] ### Purpose: - Get user followers by Instagram username, can only get the followers data of public accounts, up to 50 followers data at a time. - Due to the impact of the backend proxy server, please adjust the timeout parameter appropriately when requesting this interface. - It is recommended to set the timeout to 60 seconds to ensure that the data can be obtained. In most cases, the data acquisition time is within 10 seconds. - To get more followers data, you can use the returned pagination_token parameter for pagination. ### Parameters: - username: Instagram username - pagination_token: Pagination token, used for pagination, no need to pass value for the first request, pass the return value of the previous request for subsequent requests. ### Return: - User followers data  # [示例/Example] username &#x3D; \&quot;instagram\&quot; pagination_token &#x3D; None
    /// </remarks>
    /// <param name="username">Instagram用户名/Instagram username</param>
    /// <param name="paginationToken">分页令牌/Pagination token (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchUserFollowersByUsernameApiV1InstagramWebAppFetchUserFollowersByUsernameGet_0(
        utility::string_t username,
        boost::optional<utility::string_t> paginationToken
    ) const;
    /// <summary>
    /// 根据用户名获取用户的正在关注的用户数据/Get user followings by username
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 根据Instagram用户名获取用户的正在关注的用户数据，只能获取公开账号的正在关注的用户数据，一次最多获取50个正在关注的用户数据。 - 由于此接口收到后端代理服务器的影响，请在请求此接口时适当调整timeout参数。 - 建议将timeout设置为60秒，以确保能够获取到数据，大多数情况下，数据获取时间在10秒以内。 - 为了获取更多的正在关注的用户数据，可以使用返回的pagination_token参数进行分页。 ### 参数: - username: Instagram用户名 - pagination_token: 分页令牌，用于翻页，第一次请求不需要传值，后续请求需要传入上一次请求的返回值。 ### 返回: - 用户的正在关注的用户数据  # [English] ### Purpose: - Get user followings by Instagram username, can only get the followings data of public accounts, up to 50 followings data at a time. - Due to the impact of the backend proxy server, please adjust the timeout parameter appropriately when requesting this interface. - It is recommended to set the timeout to 60 seconds to ensure that the data can be obtained. In most cases, the data acquisition time is within 10 seconds. - To get more followings data, you can use the returned pagination_token parameter for pagination. ### Parameters: - username: Instagram username - pagination_token: Pagination token, used for pagination, no need to pass value for the first request, pass the return value of the previous request for subsequent requests. ### Return: - User followings data  # [示例/Example] username &#x3D; \&quot;instagram\&quot; pagination_token &#x3D; None
    /// </remarks>
    /// <param name="username">Instagram用户名/Instagram username</param>
    /// <param name="paginationToken">分页令牌/Pagination token (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchUserFollowingByUsernameApiV1InstagramWebAppFetchUserFollowingByUsernameGet(
        utility::string_t username,
        boost::optional<utility::string_t> paginationToken
    ) const;
    /// <summary>
    /// 根据用户名获取用户的正在关注的用户数据/Get user followings by username
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 根据Instagram用户名获取用户的正在关注的用户数据，只能获取公开账号的正在关注的用户数据，一次最多获取50个正在关注的用户数据。 - 由于此接口收到后端代理服务器的影响，请在请求此接口时适当调整timeout参数。 - 建议将timeout设置为60秒，以确保能够获取到数据，大多数情况下，数据获取时间在10秒以内。 - 为了获取更多的正在关注的用户数据，可以使用返回的pagination_token参数进行分页。 ### 参数: - username: Instagram用户名 - pagination_token: 分页令牌，用于翻页，第一次请求不需要传值，后续请求需要传入上一次请求的返回值。 ### 返回: - 用户的正在关注的用户数据  # [English] ### Purpose: - Get user followings by Instagram username, can only get the followings data of public accounts, up to 50 followings data at a time. - Due to the impact of the backend proxy server, please adjust the timeout parameter appropriately when requesting this interface. - It is recommended to set the timeout to 60 seconds to ensure that the data can be obtained. In most cases, the data acquisition time is within 10 seconds. - To get more followings data, you can use the returned pagination_token parameter for pagination. ### Parameters: - username: Instagram username - pagination_token: Pagination token, used for pagination, no need to pass value for the first request, pass the return value of the previous request for subsequent requests. ### Return: - User followings data  # [示例/Example] username &#x3D; \&quot;instagram\&quot; pagination_token &#x3D; None
    /// </remarks>
    /// <param name="username">Instagram用户名/Instagram username</param>
    /// <param name="paginationToken">分页令牌/Pagination token (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchUserFollowingByUsernameApiV1InstagramWebAppFetchUserFollowingByUsernameGet_0(
        utility::string_t username,
        boost::optional<utility::string_t> paginationToken
    ) const;
    /// <summary>
    /// 根据用户名获取用户的highlights数据/Get user highlights by username
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 根据Instagram用户名获取用户的highlights数据 - 由于此接口收到后端代理服务器的影响，请在请求此接口时适当调整timeout参数。 - 建议将timeout设置为60秒，以确保能够获取到数据，大多数情况下，数据获取时间在10秒以内。 ### 参数: - username: Instagram用户名 ### 返回: - 用户的highlights数据  # [English] ### Purpose: - Get user highlights by Instagram username - Due to the impact of the backend proxy server, please adjust the timeout parameter appropriately when requesting this interface. - It is recommended to set the timeout to 60 seconds to ensure that the data can be obtained. In most cases, the data acquisition time is within 10 seconds. ### Parameters: - username: Instagram username ### Return: - User highlights data  # [示例/Example] username &#x3D; \&quot;instagram\&quot;
    /// </remarks>
    /// <param name="username">Instagram用户名/Instagram username</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchUserHighlightsByUsernameApiV1InstagramWebAppFetchUserHighlightsByUsernameGet(
        utility::string_t username
    ) const;
    /// <summary>
    /// 根据用户名获取用户的highlights数据/Get user highlights by username
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 根据Instagram用户名获取用户的highlights数据 - 由于此接口收到后端代理服务器的影响，请在请求此接口时适当调整timeout参数。 - 建议将timeout设置为60秒，以确保能够获取到数据，大多数情况下，数据获取时间在10秒以内。 ### 参数: - username: Instagram用户名 ### 返回: - 用户的highlights数据  # [English] ### Purpose: - Get user highlights by Instagram username - Due to the impact of the backend proxy server, please adjust the timeout parameter appropriately when requesting this interface. - It is recommended to set the timeout to 60 seconds to ensure that the data can be obtained. In most cases, the data acquisition time is within 10 seconds. ### Parameters: - username: Instagram username ### Return: - User highlights data  # [示例/Example] username &#x3D; \&quot;instagram\&quot;
    /// </remarks>
    /// <param name="username">Instagram用户名/Instagram username</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchUserHighlightsByUsernameApiV1InstagramWebAppFetchUserHighlightsByUsernameGet_0(
        utility::string_t username
    ) const;
    /// <summary>
    /// 根据用户ID获取用户数据/Get user data by user ID
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 根据Instagram用户ID获取用户数据 - 由于此接口收到后端代理服务器的影响，请在请求此接口时适当调整timeout参数。 - 建议将timeout设置为60秒，以确保能够获取到数据，大多数情况下，数据获取时间在10秒以内。 ### 参数: - user_id: Instagram用户ID ### 返回: - 用户数据  # [English] ### Purpose: - Get user data by Instagram user ID - Due to the impact of the backend proxy server, please adjust the timeout parameter appropriately when requesting this interface. - It is recommended to set the timeout to 60 seconds to ensure that the data can be obtained. In most cases, the data acquisition time is within 10 seconds. ### Parameters: - user_id: Instagram user ID ### Return: - User data  # [示例/Example] user_id &#x3D; \&quot;25025320\&quot;
    /// </remarks>
    /// <param name="userId">Instagram用户ID/Instagram user ID</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchUserInfoByIdApiV1InstagramWebAppFetchUserInfoByUserIdGet(
        utility::string_t userId
    ) const;
    /// <summary>
    /// 根据用户ID获取用户数据/Get user data by user ID
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 根据Instagram用户ID获取用户数据 - 由于此接口收到后端代理服务器的影响，请在请求此接口时适当调整timeout参数。 - 建议将timeout设置为60秒，以确保能够获取到数据，大多数情况下，数据获取时间在10秒以内。 ### 参数: - user_id: Instagram用户ID ### 返回: - 用户数据  # [English] ### Purpose: - Get user data by Instagram user ID - Due to the impact of the backend proxy server, please adjust the timeout parameter appropriately when requesting this interface. - It is recommended to set the timeout to 60 seconds to ensure that the data can be obtained. In most cases, the data acquisition time is within 10 seconds. ### Parameters: - user_id: Instagram user ID ### Return: - User data  # [示例/Example] user_id &#x3D; \&quot;25025320\&quot;
    /// </remarks>
    /// <param name="userId">Instagram用户ID/Instagram user ID</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchUserInfoByIdApiV1InstagramWebAppFetchUserInfoByUserIdGet_0(
        utility::string_t userId
    ) const;
    /// <summary>
    /// 根据用户ID获取用户数据V2/Get user data by user ID V2
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 根据Instagram用户ID获取用户数据 - 由于此接口收到后端代理服务器的影响，请在请求此接口时适当调整timeout参数。 - 建议将timeout设置为60秒，以确保能够获取到数据，大多数情况下，数据获取时间在10秒以内。 ### 参数: - user_id: Instagram用户ID ### 返回: - 用户数据  # [English] ### Purpose: - Get user data by Instagram user ID - Due to the impact of the backend proxy server, please adjust the timeout parameter appropriately when requesting this interface. - It is recommended to set the timeout to 60 seconds to ensure that the data can be obtained. In most cases, the data acquisition time is within 10 seconds. ### Parameters: - user_id: Instagram user ID ### Return: - User data  # [示例/Example] user_id &#x3D; \&quot;25025320\&quot;
    /// </remarks>
    /// <param name="userId">Instagram用户ID/Instagram user ID</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchUserInfoByIdV2ApiV1InstagramWebAppFetchUserInfoByUserIdV2Get(
        utility::string_t userId
    ) const;
    /// <summary>
    /// 根据用户ID获取用户数据V2/Get user data by user ID V2
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 根据Instagram用户ID获取用户数据 - 由于此接口收到后端代理服务器的影响，请在请求此接口时适当调整timeout参数。 - 建议将timeout设置为60秒，以确保能够获取到数据，大多数情况下，数据获取时间在10秒以内。 ### 参数: - user_id: Instagram用户ID ### 返回: - 用户数据  # [English] ### Purpose: - Get user data by Instagram user ID - Due to the impact of the backend proxy server, please adjust the timeout parameter appropriately when requesting this interface. - It is recommended to set the timeout to 60 seconds to ensure that the data can be obtained. In most cases, the data acquisition time is within 10 seconds. ### Parameters: - user_id: Instagram user ID ### Return: - User data  # [示例/Example] user_id &#x3D; \&quot;25025320\&quot;
    /// </remarks>
    /// <param name="userId">Instagram用户ID/Instagram user ID</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchUserInfoByIdV2ApiV1InstagramWebAppFetchUserInfoByUserIdV2Get_0(
        utility::string_t userId
    ) const;
    /// <summary>
    /// 根据用户名获取用户数据/Get user data by username
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 根据Instagram用户名获取用户数据 - 由于此接口收到后端代理服务器的影响，请在请求此接口时适当调整timeout参数。 - 建议将timeout设置为60秒，以确保能够获取到数据，大多数情况下，数据获取时间在10秒以内。 ### 参数: - username: Instagram用户名 ### 返回: - 用户数据  # [English] ### Purpose: - Get user data by Instagram username - Due to the impact of the backend proxy server, please adjust the timeout parameter appropriately when requesting this interface. - It is recommended to set the timeout to 60 seconds to ensure that the data can be obtained. In most cases, the data acquisition time is within 10 seconds. ### Parameters: - username: Instagram username ### Return: - User data  # [示例/Example] username &#x3D; \&quot;instagram\&quot;
    /// </remarks>
    /// <param name="username">Instagram用户名/Instagram username</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchUserInfoByUsernameApiV1InstagramWebAppFetchUserInfoByUsernameGet(
        utility::string_t username
    ) const;
    /// <summary>
    /// 根据用户名获取用户数据/Get user data by username
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 根据Instagram用户名获取用户数据 - 由于此接口收到后端代理服务器的影响，请在请求此接口时适当调整timeout参数。 - 建议将timeout设置为60秒，以确保能够获取到数据，大多数情况下，数据获取时间在10秒以内。 ### 参数: - username: Instagram用户名 ### 返回: - 用户数据  # [English] ### Purpose: - Get user data by Instagram username - Due to the impact of the backend proxy server, please adjust the timeout parameter appropriately when requesting this interface. - It is recommended to set the timeout to 60 seconds to ensure that the data can be obtained. In most cases, the data acquisition time is within 10 seconds. ### Parameters: - username: Instagram username ### Return: - User data  # [示例/Example] username &#x3D; \&quot;instagram\&quot;
    /// </remarks>
    /// <param name="username">Instagram用户名/Instagram username</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchUserInfoByUsernameApiV1InstagramWebAppFetchUserInfoByUsernameGet_0(
        utility::string_t username
    ) const;
    /// <summary>
    /// 根据用户名获取用户数据V2/Get user data by username V2
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 根据Instagram用户名获取用户数据 - 由于此接口收到后端代理服务器的影响，请在请求此接口时适当调整timeout参数。 - 建议将timeout设置为60秒，以确保能够获取到数据，大多数情况下，数据获取时间在10秒以内。 ### 参数: - username: Instagram用户名 ### 返回: - 用户数据  # [English] ### Purpose: - Get user data by Instagram username - Due to the impact of the backend proxy server, please adjust the timeout parameter appropriately when requesting this interface. - It is recommended to set the timeout to 60 seconds to ensure that the data can be obtained. In most cases, the data acquisition time is within 10 seconds. ### Parameters: - username: Instagram username ### Return: - User data  # [示例/Example] username &#x3D; \&quot;instagram\&quot;
    /// </remarks>
    /// <param name="username">Instagram用户名/Instagram username</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchUserInfoByUsernameV2ApiV1InstagramWebAppFetchUserInfoByUsernameV2Get(
        utility::string_t username
    ) const;
    /// <summary>
    /// 根据用户名获取用户数据V2/Get user data by username V2
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 根据Instagram用户名获取用户数据 - 由于此接口收到后端代理服务器的影响，请在请求此接口时适当调整timeout参数。 - 建议将timeout设置为60秒，以确保能够获取到数据，大多数情况下，数据获取时间在10秒以内。 ### 参数: - username: Instagram用户名 ### 返回: - 用户数据  # [English] ### Purpose: - Get user data by Instagram username - Due to the impact of the backend proxy server, please adjust the timeout parameter appropriately when requesting this interface. - It is recommended to set the timeout to 60 seconds to ensure that the data can be obtained. In most cases, the data acquisition time is within 10 seconds. ### Parameters: - username: Instagram username ### Return: - User data  # [示例/Example] username &#x3D; \&quot;instagram\&quot;
    /// </remarks>
    /// <param name="username">Instagram用户名/Instagram username</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchUserInfoByUsernameV2ApiV1InstagramWebAppFetchUserInfoByUsernameV2Get_0(
        utility::string_t username
    ) const;
    /// <summary>
    /// 根据用户名获取用户网页接口的个人信息/Get user info by username web API
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 根据Instagram用户名获取用户网页接口的个人信息 - 由于此接口收到后端代理服务器的影响，请在请求此接口时适当调整timeout参数。 - 建议将timeout设置为60秒，以确保能够获取到数据，大多数情况下，数据获取时间在10秒以内。 ### 参数: - username: Instagram用户名 ### 返回: - 用户网页接口的个人信息  # [English] ### Purpose: - Get user info by Instagram username web API - Due to the impact of the backend proxy server, please adjust the timeout parameter appropriately when requesting this interface. - It is recommended to set the timeout to 60 seconds to ensure that the data can be obtained. In most cases, the data acquisition time is within 10 seconds. ### Parameters: - username: Instagram username ### Return: - User info by Instagram username web API  # [示例/Example] username &#x3D; \&quot;instagram\&quot;
    /// </remarks>
    /// <param name="username">Instagram用户名/Instagram username</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchUserInfoByUsernameWebApiV1InstagramWebAppFetchUserInfoByUsernameWebGet(
        utility::string_t username
    ) const;
    /// <summary>
    /// 根据用户名获取用户网页接口的个人信息/Get user info by username web API
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 根据Instagram用户名获取用户网页接口的个人信息 - 由于此接口收到后端代理服务器的影响，请在请求此接口时适当调整timeout参数。 - 建议将timeout设置为60秒，以确保能够获取到数据，大多数情况下，数据获取时间在10秒以内。 ### 参数: - username: Instagram用户名 ### 返回: - 用户网页接口的个人信息  # [English] ### Purpose: - Get user info by Instagram username web API - Due to the impact of the backend proxy server, please adjust the timeout parameter appropriately when requesting this interface. - It is recommended to set the timeout to 60 seconds to ensure that the data can be obtained. In most cases, the data acquisition time is within 10 seconds. ### Parameters: - username: Instagram username ### Return: - User info by Instagram username web API  # [示例/Example] username &#x3D; \&quot;instagram\&quot;
    /// </remarks>
    /// <param name="username">Instagram用户名/Instagram username</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchUserInfoByUsernameWebApiV1InstagramWebAppFetchUserInfoByUsernameWebGet_0(
        utility::string_t username
    ) const;
    /// <summary>
    /// 根据用户ID获取用户发布的帖子/Get user posts by user ID
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 根据Instagram用户ID获取用户发布的帖子 - 由于此接口收到后端代理服务器的影响，请在请求此接口时适当调整timeout参数。 - 建议将timeout设置为60秒，以确保能够获取到数据，大多数情况下，数据获取时间在10秒以内。 ### 参数: - user_id: Instagram用户ID - count: 每页数量 - end_cursor: 结束游标，用于翻页，第一页不需要传值，后续页需要传入上一页的返回值。 ### 返回: - 用户发布的帖子  # [English] ### Purpose: - Get user posts by Instagram user ID - Due to the impact of the backend proxy server, please adjust the timeout parameter appropriately when requesting this interface. - It is recommended to set the timeout to 60 seconds to ensure that the data can be obtained. In most cases, the data acquisition time is within 10 seconds. ### Parameters: - user_id: Instagram user ID - count: Count per page - end_cursor: End cursor, used for pagination, no need to pass value for the first page, pass the return value of the previous page for subsequent pages. ### Return: - User posts  # [示例/Example] user_id &#x3D; \&quot;25025320\&quot; count &#x3D; 12 end_cursor &#x3D; None
    /// </remarks>
    /// <param name="userId">Instagram用户ID/Instagram user ID</param>
    /// <param name="count">每页数量/Count per page (optional, default to 0)</param>
    /// <param name="endCursor">结束游标/End cursor (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchUserPostsByUserIdApiV1InstagramWebAppFetchUserPostsByUserIdGet(
        utility::string_t userId,
        boost::optional<int32_t> count,
        boost::optional<utility::string_t> endCursor
    ) const;
    /// <summary>
    /// 根据用户ID获取用户发布的帖子/Get user posts by user ID
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 根据Instagram用户ID获取用户发布的帖子 - 由于此接口收到后端代理服务器的影响，请在请求此接口时适当调整timeout参数。 - 建议将timeout设置为60秒，以确保能够获取到数据，大多数情况下，数据获取时间在10秒以内。 ### 参数: - user_id: Instagram用户ID - count: 每页数量 - end_cursor: 结束游标，用于翻页，第一页不需要传值，后续页需要传入上一页的返回值。 ### 返回: - 用户发布的帖子  # [English] ### Purpose: - Get user posts by Instagram user ID - Due to the impact of the backend proxy server, please adjust the timeout parameter appropriately when requesting this interface. - It is recommended to set the timeout to 60 seconds to ensure that the data can be obtained. In most cases, the data acquisition time is within 10 seconds. ### Parameters: - user_id: Instagram user ID - count: Count per page - end_cursor: End cursor, used for pagination, no need to pass value for the first page, pass the return value of the previous page for subsequent pages. ### Return: - User posts  # [示例/Example] user_id &#x3D; \&quot;25025320\&quot; count &#x3D; 12 end_cursor &#x3D; None
    /// </remarks>
    /// <param name="userId">Instagram用户ID/Instagram user ID</param>
    /// <param name="count">每页数量/Count per page (optional, default to 0)</param>
    /// <param name="endCursor">结束游标/End cursor (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchUserPostsByUserIdApiV1InstagramWebAppFetchUserPostsByUserIdGet_0(
        utility::string_t userId,
        boost::optional<int32_t> count,
        boost::optional<utility::string_t> endCursor
    ) const;
    /// <summary>
    /// 根据用户ID获取用户发布的快拍/Get user reels by user ID
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 根据Instagram用户ID获取用户发布的快拍 - 由于此接口收到后端代理服务器的影响，请在请求此接口时适当调整timeout参数。 - 建议将timeout设置为60秒，以确保能够获取到数据，大多数情况下，数据获取时间在10秒以内。 ### 参数: - user_id: Instagram用户ID - count: 每页数量 - max_id: 最大ID，用于翻页，第一页不需要传值，后续页需要传入上一页的返回值。 ### 返回: - 用户发布的快拍  # [English] ### Purpose: - Get user reels by Instagram user ID - Due to the impact of the backend proxy server, please adjust the timeout parameter appropriately when requesting this interface. - It is recommended to set the timeout to 60 seconds to ensure that the data can be obtained. In most cases, the data acquisition time is within 10 seconds. ### Parameters: - user_id: Instagram user ID - count: Count per page - max_id: Max ID, used for pagination, no need to pass value for the first page, pass the return value of the previous page for subsequent pages. ### Return: - User reels  # [示例/Example] user_id &#x3D; \&quot;25025320\&quot; count &#x3D; 12 max_id &#x3D; None
    /// </remarks>
    /// <param name="userId">Instagram用户ID/Instagram user ID</param>
    /// <param name="count">每页数量/Count per page (optional, default to 0)</param>
    /// <param name="maxId">最大ID/Max ID (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchUserReelsByUserIdApiV1InstagramWebAppFetchUserReelsByUserIdGet(
        utility::string_t userId,
        boost::optional<int32_t> count,
        boost::optional<utility::string_t> maxId
    ) const;
    /// <summary>
    /// 根据用户ID获取用户发布的快拍/Get user reels by user ID
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 根据Instagram用户ID获取用户发布的快拍 - 由于此接口收到后端代理服务器的影响，请在请求此接口时适当调整timeout参数。 - 建议将timeout设置为60秒，以确保能够获取到数据，大多数情况下，数据获取时间在10秒以内。 ### 参数: - user_id: Instagram用户ID - count: 每页数量 - max_id: 最大ID，用于翻页，第一页不需要传值，后续页需要传入上一页的返回值。 ### 返回: - 用户发布的快拍  # [English] ### Purpose: - Get user reels by Instagram user ID - Due to the impact of the backend proxy server, please adjust the timeout parameter appropriately when requesting this interface. - It is recommended to set the timeout to 60 seconds to ensure that the data can be obtained. In most cases, the data acquisition time is within 10 seconds. ### Parameters: - user_id: Instagram user ID - count: Count per page - max_id: Max ID, used for pagination, no need to pass value for the first page, pass the return value of the previous page for subsequent pages. ### Return: - User reels  # [示例/Example] user_id &#x3D; \&quot;25025320\&quot; count &#x3D; 12 max_id &#x3D; None
    /// </remarks>
    /// <param name="userId">Instagram用户ID/Instagram user ID</param>
    /// <param name="count">每页数量/Count per page (optional, default to 0)</param>
    /// <param name="maxId">最大ID/Max ID (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchUserReelsByUserIdApiV1InstagramWebAppFetchUserReelsByUserIdGet_0(
        utility::string_t userId,
        boost::optional<int32_t> count,
        boost::optional<utility::string_t> maxId
    ) const;
    /// <summary>
    /// 根据用户名获取用户的Reels数据V2/Get user reels by username V2
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 根据Instagram用户名获取用户的Reels数据V2 - 由于此接口收到后端代理服务器的影响，请在请求此接口时适当调整timeout参数。 - 建议将timeout设置为60秒，以确保能够获取到数据，大多数情况下，数据获取时间在10秒以内。 ### 参数: - username: Instagram用户名 - pagination_token: 分页token，第一次请求不需要传值，后续页需要传入上一页的返回值。 ### 返回: - 用户的Reels数据  # [English] ### Purpose: - Get user reels by Instagram username V2 - Due to the impact of the backend proxy server, please adjust the timeout parameter appropriately when requesting this interface. - It is recommended to set the timeout to 60 seconds to ensure that the data can be obtained. In most cases, the data acquisition time is within 10 seconds. ### Parameters: - username: Instagram username - pagination_token: Pagination token, no need to pass value for the first request, pass the return value of the previous page for subsequent pages. ### Return: - User reels data  # [示例/Example] username &#x3D; \&quot;instagram\&quot; pagination_token &#x3D; None
    /// </remarks>
    /// <param name="username">Instagram用户名/Instagram username</param>
    /// <param name="paginationToken">分页token/Pagination token (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchUserReelsByUsernameV2ApiV1InstagramWebAppFetchUserReelsByUsernameV2Get(
        utility::string_t username,
        boost::optional<utility::string_t> paginationToken
    ) const;
    /// <summary>
    /// 根据用户名获取用户的Reels数据V2/Get user reels by username V2
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 根据Instagram用户名获取用户的Reels数据V2 - 由于此接口收到后端代理服务器的影响，请在请求此接口时适当调整timeout参数。 - 建议将timeout设置为60秒，以确保能够获取到数据，大多数情况下，数据获取时间在10秒以内。 ### 参数: - username: Instagram用户名 - pagination_token: 分页token，第一次请求不需要传值，后续页需要传入上一页的返回值。 ### 返回: - 用户的Reels数据  # [English] ### Purpose: - Get user reels by Instagram username V2 - Due to the impact of the backend proxy server, please adjust the timeout parameter appropriately when requesting this interface. - It is recommended to set the timeout to 60 seconds to ensure that the data can be obtained. In most cases, the data acquisition time is within 10 seconds. ### Parameters: - username: Instagram username - pagination_token: Pagination token, no need to pass value for the first request, pass the return value of the previous page for subsequent pages. ### Return: - User reels data  # [示例/Example] username &#x3D; \&quot;instagram\&quot; pagination_token &#x3D; None
    /// </remarks>
    /// <param name="username">Instagram用户名/Instagram username</param>
    /// <param name="paginationToken">分页token/Pagination token (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchUserReelsByUsernameV2ApiV1InstagramWebAppFetchUserReelsByUsernameV2Get_0(
        utility::string_t username,
        boost::optional<utility::string_t> paginationToken
    ) const;
    /// <summary>
    /// 根据用户名获取用户的Stories数据/Get user stories by username
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 根据Instagram用户名获取用户的Stories数据 - 由于此接口收到后端代理服务器的影响，请在请求此接口时适当调整timeout参数。 - 建议将timeout设置为60秒，以确保能够获取到数据，大多数情况下，数据获取时间在10秒以内。 ### 参数: - username: Instagram用户名 ### 返回: - 用户的Stories数据  # [English] ### Purpose: - Get user stories by Instagram username - Due to the impact of the backend proxy server, please adjust the timeout parameter appropriately when requesting this interface. - It is recommended to set the timeout to 60 seconds to ensure that the data can be obtained. In most cases, the data acquisition time is within 10 seconds. ### Parameters: - username: Instagram username ### Return: - User stories data  # [示例/Example] username &#x3D; \&quot;instagram\&quot;
    /// </remarks>
    /// <param name="username">Instagram用户名/Instagram username</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchUserStoriesByUsernameApiV1InstagramWebAppFetchUserStoriesByUsernameGet(
        utility::string_t username
    ) const;
    /// <summary>
    /// 根据用户名获取用户的Stories数据/Get user stories by username
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 根据Instagram用户名获取用户的Stories数据 - 由于此接口收到后端代理服务器的影响，请在请求此接口时适当调整timeout参数。 - 建议将timeout设置为60秒，以确保能够获取到数据，大多数情况下，数据获取时间在10秒以内。 ### 参数: - username: Instagram用户名 ### 返回: - 用户的Stories数据  # [English] ### Purpose: - Get user stories by Instagram username - Due to the impact of the backend proxy server, please adjust the timeout parameter appropriately when requesting this interface. - It is recommended to set the timeout to 60 seconds to ensure that the data can be obtained. In most cases, the data acquisition time is within 10 seconds. ### Parameters: - username: Instagram username ### Return: - User stories data  # [示例/Example] username &#x3D; \&quot;instagram\&quot;
    /// </remarks>
    /// <param name="username">Instagram用户名/Instagram username</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchUserStoriesByUsernameApiV1InstagramWebAppFetchUserStoriesByUsernameGet_0(
        utility::string_t username
    ) const;
    /// <summary>
    /// 根据用户ID获取用户被标记的帖子/Get user tagged posts by user ID
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 根据Instagram用户ID获取用户被标记的帖子 - 由于此接口收到后端代理服务器的影响，请在请求此接口时适当调整timeout参数。 - 建议将timeout设置为60秒，以确保能够获取到数据，大多数情况下，数据获取时间在10秒以内。 ### 参数: - user_id: Instagram用户ID - count: 每页数量 - end_cursor: 结束游标，用于翻页，第一页不需要传值，后续页需要传入上一页的返回值。 ### 返回: - 用户被标记的帖子  # [English] ### Purpose: - Get user tagged posts by Instagram user ID - Due to the impact of the backend proxy server, please adjust the timeout parameter appropriately when requesting this interface. - It is recommended to set the timeout to 60 seconds to ensure that the data can be obtained. In most cases, the data acquisition time is within 10 seconds. ### Parameters: - user_id: Instagram user ID - count: Count per page - end_cursor: End cursor, used for pagination, no need to pass value for the first page, pass the return value of the previous page for subsequent pages. ### Return: - User tagged posts  # [示例/Example] user_id &#x3D; \&quot;25025320\&quot; count &#x3D; 12 end_cursor &#x3D; None
    /// </remarks>
    /// <param name="userId">Instagram用户ID/Instagram user ID</param>
    /// <param name="count">每页数量/Count per page (optional, default to 0)</param>
    /// <param name="endCursor">结束游标/End cursor (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchUserTaggedPostsByUserIdApiV1InstagramWebAppFetchUserTaggedPostsByUserIdGet(
        utility::string_t userId,
        boost::optional<int32_t> count,
        boost::optional<utility::string_t> endCursor
    ) const;
    /// <summary>
    /// 根据用户ID获取用户被标记的帖子/Get user tagged posts by user ID
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 根据Instagram用户ID获取用户被标记的帖子 - 由于此接口收到后端代理服务器的影响，请在请求此接口时适当调整timeout参数。 - 建议将timeout设置为60秒，以确保能够获取到数据，大多数情况下，数据获取时间在10秒以内。 ### 参数: - user_id: Instagram用户ID - count: 每页数量 - end_cursor: 结束游标，用于翻页，第一页不需要传值，后续页需要传入上一页的返回值。 ### 返回: - 用户被标记的帖子  # [English] ### Purpose: - Get user tagged posts by Instagram user ID - Due to the impact of the backend proxy server, please adjust the timeout parameter appropriately when requesting this interface. - It is recommended to set the timeout to 60 seconds to ensure that the data can be obtained. In most cases, the data acquisition time is within 10 seconds. ### Parameters: - user_id: Instagram user ID - count: Count per page - end_cursor: End cursor, used for pagination, no need to pass value for the first page, pass the return value of the previous page for subsequent pages. ### Return: - User tagged posts  # [示例/Example] user_id &#x3D; \&quot;25025320\&quot; count &#x3D; 12 end_cursor &#x3D; None
    /// </remarks>
    /// <param name="userId">Instagram用户ID/Instagram user ID</param>
    /// <param name="count">每页数量/Count per page (optional, default to 0)</param>
    /// <param name="endCursor">结束游标/End cursor (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchUserTaggedPostsByUserIdApiV1InstagramWebAppFetchUserTaggedPostsByUserIdGet_0(
        utility::string_t userId,
        boost::optional<int32_t> count,
        boost::optional<utility::string_t> endCursor
    ) const;
    /// <summary>
    /// 根据用户名获取用户的tv_posts数据/Get user tv_posts by username
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 根据Instagram用户名获取用户的tv_posts数据 - 由于此接口收到后端代理服务器的影响，请在请求此接口时适当调整timeout参数。 - 建议将timeout设置为60秒，以确保能够获取到数据，大多数情况下，数据获取时间在10秒以内。 ### 参数: - username: Instagram用户名 - pagination_token: 分页token，第一次请求不需要传值，后续页需要传入上一页的返回值。 ### 返回: - 用户的tv_posts数据  # [English] ### Purpose: - Get user tv_posts by Instagram username - Due to the impact of the backend proxy server, please adjust the timeout parameter appropriately when requesting this interface. - It is recommended to set the timeout to 60 seconds to ensure that the data can be obtained. In most cases, the data acquisition time is within 10 seconds. ### Parameters: - username: Instagram username - pagination_token: Pagination token, no need to pass value for the first request, pass the return value of the previous page for subsequent pages. ### Return: - User tv_posts data  # [示例/Example] username &#x3D; \&quot;instagram\&quot; pagination_token &#x3D; None
    /// </remarks>
    /// <param name="username">Instagram用户名/Instagram username</param>
    /// <param name="paginationToken">分页token/Pagination token (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchUserTvPostsByUsernameApiV1InstagramWebAppFetchUserTvPostsByUsernameGet(
        utility::string_t username,
        boost::optional<utility::string_t> paginationToken
    ) const;
    /// <summary>
    /// 根据用户名获取用户的tv_posts数据/Get user tv_posts by username
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 根据Instagram用户名获取用户的tv_posts数据 - 由于此接口收到后端代理服务器的影响，请在请求此接口时适当调整timeout参数。 - 建议将timeout设置为60秒，以确保能够获取到数据，大多数情况下，数据获取时间在10秒以内。 ### 参数: - username: Instagram用户名 - pagination_token: 分页token，第一次请求不需要传值，后续页需要传入上一页的返回值。 ### 返回: - 用户的tv_posts数据  # [English] ### Purpose: - Get user tv_posts by Instagram username - Due to the impact of the backend proxy server, please adjust the timeout parameter appropriately when requesting this interface. - It is recommended to set the timeout to 60 seconds to ensure that the data can be obtained. In most cases, the data acquisition time is within 10 seconds. ### Parameters: - username: Instagram username - pagination_token: Pagination token, no need to pass value for the first request, pass the return value of the previous page for subsequent pages. ### Return: - User tv_posts data  # [示例/Example] username &#x3D; \&quot;instagram\&quot; pagination_token &#x3D; None
    /// </remarks>
    /// <param name="username">Instagram用户名/Instagram username</param>
    /// <param name="paginationToken">分页token/Pagination token (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchUserTvPostsByUsernameApiV1InstagramWebAppFetchUserTvPostsByUsernameGet_0(
        utility::string_t username,
        boost::optional<utility::string_t> paginationToken
    ) const;

protected:
    std::shared_ptr<const ApiClient> m_ApiClient;
};

}
}
}
}

#endif /* IO_TIKHUB_CLIENT_API_InstagramWebAndAPPAPIApi_H_ */

