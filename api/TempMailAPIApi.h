/**
 * TikHub.io - Your Ultimate Social Media Data & API Marketplace
 * High-performance asynchronous Douyin(抖音) TikTok Xiaohongshu(小红书) Kuaishou(快手) Weibo(微博) Instagram YouTube(油管) Twitter(X) Captcha Solver(验证码解决器) Temp Mail(临时邮箱) API(接口).
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.3.1.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * TempMailAPIApi.h
 *
 * 
 */

#ifndef IO_TIKHUB_CLIENT_API_TempMailAPIApi_H_
#define IO_TIKHUB_CLIENT_API_TempMailAPIApi_H_


#include "../ApiClient.h"

#include "HttpValidationError.h"
#include "ResponseModel.h"
#include <cpprest/details/basic_types.h>


#include <boost/optional.hpp>

namespace io {
namespace tikhub {
namespace client {
namespace api {

using namespace org::openapitools::client::model;



class  TempMailAPIApi 
{
public:

    explicit TempMailAPIApi( std::shared_ptr<const ApiClient> apiClient );

    virtual ~TempMailAPIApi();

    /// <summary>
    /// Get Email By Id
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 通过邮件ID获取邮件数据 ### 参数: - token: 邮箱Bearer Token - message_id: 邮件ID ### 返回: - 邮件数据  # [English] ### Purpose: - Get email data by email ID ### Parameters: - token: Email Bearer Token - message_id: Email ID ### Returns: - Email data
    /// </remarks>
    /// <param name="token">Bearer Token</param>
    /// <param name="messageId">Message ID</param>
    pplx::task<std::shared_ptr<ResponseModel>> getEmailByIdApiV1TempMailV1GetEmailByIdGet(
        utility::string_t token,
        utility::string_t messageId
    ) const;
    /// <summary>
    /// Get Email By Id
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 通过邮件ID获取邮件数据 ### 参数: - token: 邮箱Bearer Token - message_id: 邮件ID ### 返回: - 邮件数据  # [English] ### Purpose: - Get email data by email ID ### Parameters: - token: Email Bearer Token - message_id: Email ID ### Returns: - Email data
    /// </remarks>
    /// <param name="token">Bearer Token</param>
    /// <param name="messageId">Message ID</param>
    pplx::task<std::shared_ptr<ResponseModel>> getEmailByIdApiV1TempMailV1GetEmailByIdGet_0(
        utility::string_t token,
        utility::string_t messageId
    ) const;
    /// <summary>
    /// Get Emails
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取邮件列表 ### 参数: - token: 邮箱Bearer Token ### 返回: - emails: 邮件列表  # [English] ### Purpose: - Get a list of emails ### Parameters: - token: Email Bearer Token ### Returns: - emails: List of emails
    /// </remarks>
    /// <param name="token">Bearer Token</param>
    pplx::task<std::shared_ptr<ResponseModel>> getEmailsApiV1TempMailV1GetEmailsInboxGet(
        utility::string_t token
    ) const;
    /// <summary>
    /// Get Emails
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取邮件列表 ### 参数: - token: 邮箱Bearer Token ### 返回: - emails: 邮件列表  # [English] ### Purpose: - Get a list of emails ### Parameters: - token: Email Bearer Token ### Returns: - emails: List of emails
    /// </remarks>
    /// <param name="token">Bearer Token</param>
    pplx::task<std::shared_ptr<ResponseModel>> getEmailsApiV1TempMailV1GetEmailsInboxGet_0(
        utility::string_t token
    ) const;
    /// <summary>
    /// Get Temp Email
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取一个临时邮箱地址 - 用于注册或者接收邮件，该邮箱地址不会被删除，也不会被其他人使用。 - 该邮箱无法发送邮件，只能接收邮件。 - 请自行保存邮箱地址、用户名、密码、Bearer Token，我们无法帮助您找回这些关键信息。 ### 参数: - 无 ### 返回: - domain: 邮箱域名 - name: 邮箱用户名 - password: 邮箱密码 - email_address: 邮箱地址 - token: 邮箱Bearer Token  # [English] ### Purpose: - Get a temporary email address - Used for registration or receiving emails, this email address will not be deleted or used by others. - This email cannot send emails, only receive emails. - Please save the email address, username, password, and Bearer Token yourself, we cannot help you retrieve this critical information. ### Parameters: - None ### Returns: - domain: Email domain - name: Email username - password: Email password - email_address: Email address - token: Email Bearer Token
    /// </remarks>
    pplx::task<std::shared_ptr<ResponseModel>> getTempEmailApiV1TempMailV1GetTempEmailAddressGet(
    ) const;
    /// <summary>
    /// Get Temp Email
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取一个临时邮箱地址 - 用于注册或者接收邮件，该邮箱地址不会被删除，也不会被其他人使用。 - 该邮箱无法发送邮件，只能接收邮件。 - 请自行保存邮箱地址、用户名、密码、Bearer Token，我们无法帮助您找回这些关键信息。 ### 参数: - 无 ### 返回: - domain: 邮箱域名 - name: 邮箱用户名 - password: 邮箱密码 - email_address: 邮箱地址 - token: 邮箱Bearer Token  # [English] ### Purpose: - Get a temporary email address - Used for registration or receiving emails, this email address will not be deleted or used by others. - This email cannot send emails, only receive emails. - Please save the email address, username, password, and Bearer Token yourself, we cannot help you retrieve this critical information. ### Parameters: - None ### Returns: - domain: Email domain - name: Email username - password: Email password - email_address: Email address - token: Email Bearer Token
    /// </remarks>
    pplx::task<std::shared_ptr<ResponseModel>> getTempEmailApiV1TempMailV1GetTempEmailAddressGet_0(
    ) const;

protected:
    std::shared_ptr<const ApiClient> m_ApiClient;
};

}
}
}
}

#endif /* IO_TIKHUB_CLIENT_API_TempMailAPIApi_H_ */

