/**
 * TikHub.io - Your Ultimate Social Media Data & API Marketplace
 * High-performance asynchronous Douyin(抖音) TikTok Xiaohongshu(小红书) Kuaishou(快手) Weibo(微博) Instagram YouTube(油管) Twitter(X) Captcha Solver(验证码解决器) Temp Mail(临时邮箱) API(接口).
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.3.1.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * XiaohongshuWebV2APIApi.h
 *
 * 
 */

#ifndef IO_TIKHUB_CLIENT_API_XiaohongshuWebV2APIApi_H_
#define IO_TIKHUB_CLIENT_API_XiaohongshuWebV2APIApi_H_


#include "../ApiClient.h"

#include "HttpValidationError.h"
#include "ResponseModel.h"
#include <cpprest/details/basic_types.h>


#include <boost/optional.hpp>

namespace io {
namespace tikhub {
namespace client {
namespace api {

using namespace org::openapitools::client::model;



class  XiaohongshuWebV2APIApi 
{
public:

    explicit XiaohongshuWebV2APIApi( std::shared_ptr<const ApiClient> apiClient );

    virtual ~XiaohongshuWebV2APIApi();

    /// <summary>
    /// 获取推荐笔记/Fetch feed notes
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取推荐笔记 ### 参数: - note_id: 笔记ID，可以从小红书的分享链接中获取 ### 返回: - 推荐笔记  # [English] ### Purpose: - Get feed notes ### Parameters: - note_id: Note ID, can be obtained from the sharing link of Xiaohongshu website. ### Return: - Feed notes  # [示例/Example] note_id &#x3D; \&quot;66c9cc31000000001f03a4bc\&quot;
    /// </remarks>
    /// <param name="noteId">笔记ID/Note ID</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchFeedNotesApiV1XiaohongshuWebV2FetchFeedNotesGet(
        utility::string_t noteId
    ) const;
    /// <summary>
    /// 获取推荐笔记/Fetch feed notes
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取推荐笔记 ### 参数: - note_id: 笔记ID，可以从小红书的分享链接中获取 ### 返回: - 推荐笔记  # [English] ### Purpose: - Get feed notes ### Parameters: - note_id: Note ID, can be obtained from the sharing link of Xiaohongshu website. ### Return: - Feed notes  # [示例/Example] note_id &#x3D; \&quot;66c9cc31000000001f03a4bc\&quot;
    /// </remarks>
    /// <param name="noteId">笔记ID/Note ID</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchFeedNotesApiV1XiaohongshuWebV2FetchFeedNotesGet_0(
        utility::string_t noteId
    ) const;
    /// <summary>
    /// 获取用户粉丝列表/Fetch follower list
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取用户粉丝列表 ### 参数: - user_id: 用户ID - cursor: 游标 ### 返回: - 用户粉丝列表  # [English] ### Purpose: - Get follower list ### Parameters: - user_id: User ID - cursor: Cursor ### Return: - Follower list  # [示例/Example] user_id &#x3D; \&quot;604a28420000000001005211\&quot; cursor &#x3D; \&quot;\&quot;
    /// </remarks>
    /// <param name="userId">用户ID/User ID</param>
    /// <param name="cursor">游标/Cursor (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchFollowerListApiV1XiaohongshuWebV2FetchFollowerListGet(
        utility::string_t userId,
        boost::optional<utility::string_t> cursor
    ) const;
    /// <summary>
    /// 获取用户粉丝列表/Fetch follower list
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取用户粉丝列表 ### 参数: - user_id: 用户ID - cursor: 游标 ### 返回: - 用户粉丝列表  # [English] ### Purpose: - Get follower list ### Parameters: - user_id: User ID - cursor: Cursor ### Return: - Follower list  # [示例/Example] user_id &#x3D; \&quot;604a28420000000001005211\&quot; cursor &#x3D; \&quot;\&quot;
    /// </remarks>
    /// <param name="userId">用户ID/User ID</param>
    /// <param name="cursor">游标/Cursor (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchFollowerListApiV1XiaohongshuWebV2FetchFollowerListGet_0(
        utility::string_t userId,
        boost::optional<utility::string_t> cursor
    ) const;
    /// <summary>
    /// 获取用户关注列表/Fetch following list
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取用户关注列表 ### 参数: - user_id: 用户ID - cursor: 游标 ### 返回: - 用户关注列表  # [English] ### Purpose: - Get following list ### Parameters: - user_id: User ID - cursor: Cursor ### Return: - Following list  # [示例/Example] user_id &#x3D; \&quot;604a28420000000001005211\&quot; cursor &#x3D; \&quot;\&quot;
    /// </remarks>
    /// <param name="userId">用户ID/User ID</param>
    /// <param name="cursor">游标/Cursor (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchFollowingListApiV1XiaohongshuWebV2FetchFollowingListGet(
        utility::string_t userId,
        boost::optional<utility::string_t> cursor
    ) const;
    /// <summary>
    /// 获取用户关注列表/Fetch following list
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取用户关注列表 ### 参数: - user_id: 用户ID - cursor: 游标 ### 返回: - 用户关注列表  # [English] ### Purpose: - Get following list ### Parameters: - user_id: User ID - cursor: Cursor ### Return: - Following list  # [示例/Example] user_id &#x3D; \&quot;604a28420000000001005211\&quot; cursor &#x3D; \&quot;\&quot;
    /// </remarks>
    /// <param name="userId">用户ID/User ID</param>
    /// <param name="cursor">游标/Cursor (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchFollowingListApiV1XiaohongshuWebV2FetchFollowingListGet_0(
        utility::string_t userId,
        boost::optional<utility::string_t> cursor
    ) const;
    /// <summary>
    /// 获取主页笔记/Fetch home notes
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取主页笔记 ### 参数: - user_id: 用户ID - cursor: 游标 ### 返回: - 主页笔记  # [English] ### Purpose: - Get home notes ### Parameters: - user_id: User ID - cursor: Cursor ### Return: - Home notes  # [示例/Example] user_id &#x3D; \&quot;5f3e0d00000000001f03a4bc\&quot; cursor &#x3D; \&quot;\&quot;
    /// </remarks>
    /// <param name="userId">用户ID/User ID</param>
    /// <param name="cursor">游标/Cursor (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchHomeNotesApiV1XiaohongshuWebV2FetchHomeNotesGet(
        utility::string_t userId,
        boost::optional<utility::string_t> cursor
    ) const;
    /// <summary>
    /// 获取主页笔记/Fetch home notes
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取主页笔记 ### 参数: - user_id: 用户ID - cursor: 游标 ### 返回: - 主页笔记  # [English] ### Purpose: - Get home notes ### Parameters: - user_id: User ID - cursor: Cursor ### Return: - Home notes  # [示例/Example] user_id &#x3D; \&quot;5f3e0d00000000001f03a4bc\&quot; cursor &#x3D; \&quot;\&quot;
    /// </remarks>
    /// <param name="userId">用户ID/User ID</param>
    /// <param name="cursor">游标/Cursor (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchHomeNotesApiV1XiaohongshuWebV2FetchHomeNotesGet_0(
        utility::string_t userId,
        boost::optional<utility::string_t> cursor
    ) const;
    /// <summary>
    /// 获取笔记评论/Fetch note comments
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取笔记评论 ### 参数: - note_id: 笔记ID - cursor: 游标 ### 返回: - 笔记评论  # [English] ### Purpose: - Get note comments ### Parameters: - note_id: Note ID - cursor: Cursor ### Return: - Note comments  # [示例/Example] note_id &#x3D; \&quot;651ccaa9000000001f03d7f7\&quot; cursor &#x3D; \&quot;\&quot;
    /// </remarks>
    /// <param name="noteId">笔记ID/Note ID</param>
    /// <param name="cursor">游标/Cursor (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchNoteCommentsApiV1XiaohongshuWebV2FetchNoteCommentsGet(
        utility::string_t noteId,
        boost::optional<utility::string_t> cursor
    ) const;
    /// <summary>
    /// 获取笔记评论/Fetch note comments
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取笔记评论 ### 参数: - note_id: 笔记ID - cursor: 游标 ### 返回: - 笔记评论  # [English] ### Purpose: - Get note comments ### Parameters: - note_id: Note ID - cursor: Cursor ### Return: - Note comments  # [示例/Example] note_id &#x3D; \&quot;651ccaa9000000001f03d7f7\&quot; cursor &#x3D; \&quot;\&quot;
    /// </remarks>
    /// <param name="noteId">笔记ID/Note ID</param>
    /// <param name="cursor">游标/Cursor (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchNoteCommentsApiV1XiaohongshuWebV2FetchNoteCommentsGet_0(
        utility::string_t noteId,
        boost::optional<utility::string_t> cursor
    ) const;
    /// <summary>
    /// 获取搜索笔记/Fetch search notes
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取搜索笔记 ### 参数: - keywords：搜索关键词 - sort_type：排序方式     - general：综合     - time_descending：最新     - popularity_descending：最热 - note_type: 笔记类型     - 0：全部     - 1：视频     - 2：图文 ### 返回: - 搜索笔记  # [English] ### Purpose: - Get search notes ### Parameters: - keywords: Search keywords - sort_type: Sort type     - general: General     - time_descending: Latest     - popularity_descending: Popular - note_type: Note type     - 0: All     - 1: Video     - 2: Note ### Return: - Search notes  # [示例/Example] keywords &#x3D; \&quot;口红\&quot; page &#x3D; 1 sort_type &#x3D; \&quot;general\&quot; note_type &#x3D; \&quot;1\&quot;
    /// </remarks>
    /// <param name="keywords">搜索关键词/Search keywords</param>
    /// <param name="page">页码/Page number (optional, default to 0)</param>
    /// <param name="sortType">排序方式/Sort type (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="noteType">笔记类型/Note type (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchSearchNotesApiV1XiaohongshuWebV2FetchSearchNotesGet(
        utility::string_t keywords,
        boost::optional<int32_t> page,
        boost::optional<utility::string_t> sortType,
        boost::optional<utility::string_t> noteType
    ) const;
    /// <summary>
    /// 获取搜索笔记/Fetch search notes
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取搜索笔记 ### 参数: - keywords：搜索关键词 - sort_type：排序方式     - general：综合     - time_descending：最新     - popularity_descending：最热 - note_type: 笔记类型     - 0：全部     - 1：视频     - 2：图文 ### 返回: - 搜索笔记  # [English] ### Purpose: - Get search notes ### Parameters: - keywords: Search keywords - sort_type: Sort type     - general: General     - time_descending: Latest     - popularity_descending: Popular - note_type: Note type     - 0: All     - 1: Video     - 2: Note ### Return: - Search notes  # [示例/Example] keywords &#x3D; \&quot;口红\&quot; page &#x3D; 1 sort_type &#x3D; \&quot;general\&quot; note_type &#x3D; \&quot;1\&quot;
    /// </remarks>
    /// <param name="keywords">搜索关键词/Search keywords</param>
    /// <param name="page">页码/Page number (optional, default to 0)</param>
    /// <param name="sortType">排序方式/Sort type (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="noteType">笔记类型/Note type (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchSearchNotesApiV1XiaohongshuWebV2FetchSearchNotesGet_0(
        utility::string_t keywords,
        boost::optional<int32_t> page,
        boost::optional<utility::string_t> sortType,
        boost::optional<utility::string_t> noteType
    ) const;
    /// <summary>
    /// 获取子评论/Fetch sub comments
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取子评论 ### 参数: - note_id: 笔记ID - comment_id: 评论ID - cursor: 游标 ### 返回: - 子评论  # [English] ### Purpose: - Get sub comments ### Parameters: - note_id: Note ID - comment_id: Comment ID - cursor: Cursor ### Return: - Sub comments  # [示例/Example] note_id &#x3D; \&quot;673c894c0000000007033f92\&quot; comment_id &#x3D; \&quot;673ecdfc000000001503bf8b\&quot; cursor &#x3D; \&quot;\&quot;
    /// </remarks>
    /// <param name="noteId">笔记ID/Note ID</param>
    /// <param name="commentId">评论ID/Comment ID</param>
    /// <param name="cursor">游标/Cursor (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchSubCommentsApiV1XiaohongshuWebV2FetchSubCommentsGet(
        utility::string_t noteId,
        utility::string_t commentId,
        boost::optional<utility::string_t> cursor
    ) const;
    /// <summary>
    /// 获取子评论/Fetch sub comments
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取子评论 ### 参数: - note_id: 笔记ID - comment_id: 评论ID - cursor: 游标 ### 返回: - 子评论  # [English] ### Purpose: - Get sub comments ### Parameters: - note_id: Note ID - comment_id: Comment ID - cursor: Cursor ### Return: - Sub comments  # [示例/Example] note_id &#x3D; \&quot;673c894c0000000007033f92\&quot; comment_id &#x3D; \&quot;673ecdfc000000001503bf8b\&quot; cursor &#x3D; \&quot;\&quot;
    /// </remarks>
    /// <param name="noteId">笔记ID/Note ID</param>
    /// <param name="commentId">评论ID/Comment ID</param>
    /// <param name="cursor">游标/Cursor (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchSubCommentsApiV1XiaohongshuWebV2FetchSubCommentsGet_0(
        utility::string_t noteId,
        utility::string_t commentId,
        boost::optional<utility::string_t> cursor
    ) const;
    /// <summary>
    /// 获取用户信息/Fetch user info
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取用户信息 ### 参数: - user_id: 用户ID ### 返回: - 用户信息  # [English] ### Purpose: - Get user info ### Parameters: - user_id: User ID ### Return: - User info  # [示例/Example] user_id &#x3D; \&quot;5e3a8ee700000000010070c6\&quot;
    /// </remarks>
    /// <param name="userId">用户ID/User ID</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchUserInfoApiV1XiaohongshuWebV2FetchUserInfoGet(
        utility::string_t userId
    ) const;
    /// <summary>
    /// 获取用户信息/Fetch user info
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 获取用户信息 ### 参数: - user_id: 用户ID ### 返回: - 用户信息  # [English] ### Purpose: - Get user info ### Parameters: - user_id: User ID ### Return: - User info  # [示例/Example] user_id &#x3D; \&quot;5e3a8ee700000000010070c6\&quot;
    /// </remarks>
    /// <param name="userId">用户ID/User ID</param>
    pplx::task<std::shared_ptr<ResponseModel>> fetchUserInfoApiV1XiaohongshuWebV2FetchUserInfoGet_0(
        utility::string_t userId
    ) const;

protected:
    std::shared_ptr<const ApiClient> m_ApiClient;
};

}
}
}
}

#endif /* IO_TIKHUB_CLIENT_API_XiaohongshuWebV2APIApi_H_ */

