/**
 * TikHub.io - Your Ultimate Social Media Data & API Marketplace
 * High-performance asynchronous Douyin(抖音) TikTok Xiaohongshu(小红书) Kuaishou(快手) Weibo(微博) Instagram YouTube(油管) Twitter(X) Captcha Solver(验证码解决器) Temp Mail(临时邮箱) API(接口).
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.3.1.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * HybridParsingApi.h
 *
 * 
 */

#ifndef IO_TIKHUB_CLIENT_API_HybridParsingApi_H_
#define IO_TIKHUB_CLIENT_API_HybridParsingApi_H_


#include "../ApiClient.h"

#include "HttpValidationError.h"
#include "ResponseModel.h"
#include <cpprest/details/basic_types.h>


#include <boost/optional.hpp>

namespace io {
namespace tikhub {
namespace client {
namespace api {

using namespace org::openapitools::client::model;



class  HybridParsingApi 
{
public:

    explicit HybridParsingApi( std::shared_ptr<const ApiClient> apiClient );

    virtual ~HybridParsingApi();

    /// <summary>
    /// 混合解析单一视频接口/Hybrid parsing single video endpoint
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 该接口用于解析抖音/TikTok单一视频的数据。 ### 参数: - &#x60;url&#x60;: 视频链接、分享链接、分享文本。 ### 返回: - &#x60;data&#x60;: 视频数据。  # [English] ### Purpose: - This endpoint is used to parse data of a single Douyin/TikTok video. ### Parameters: - &#x60;url&#x60;: Video link, share link, or share text. ### Returns: - &#x60;data&#x60;: Video data.  # [Example] url &#x3D; \&quot;https://v.douyin.com/L4FJNR3/\&quot;
    /// </remarks>
    /// <param name="url"></param>
    /// <param name="minimal">是否返回最小数据/Whether to return minimal data (optional, default to false)</param>
    /// <param name="base64Url">是否Base64编码提交URL/Base64 encoding URL (optional, default to false)</param>
    pplx::task<std::shared_ptr<ResponseModel>> hybridParsingSingleVideoApiV1HybridVideoDataGet(
        utility::string_t url,
        boost::optional<bool> minimal,
        boost::optional<bool> base64Url
    ) const;
    /// <summary>
    /// 混合解析单一视频接口/Hybrid parsing single video endpoint
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 该接口用于解析抖音/TikTok单一视频的数据。 ### 参数: - &#x60;url&#x60;: 视频链接、分享链接、分享文本。 ### 返回: - &#x60;data&#x60;: 视频数据。  # [English] ### Purpose: - This endpoint is used to parse data of a single Douyin/TikTok video. ### Parameters: - &#x60;url&#x60;: Video link, share link, or share text. ### Returns: - &#x60;data&#x60;: Video data.  # [Example] url &#x3D; \&quot;https://v.douyin.com/L4FJNR3/\&quot;
    /// </remarks>
    /// <param name="url"></param>
    /// <param name="minimal">是否返回最小数据/Whether to return minimal data (optional, default to false)</param>
    /// <param name="base64Url">是否Base64编码提交URL/Base64 encoding URL (optional, default to false)</param>
    pplx::task<std::shared_ptr<ResponseModel>> hybridParsingSingleVideoApiV1HybridVideoDataGet_0(
        utility::string_t url,
        boost::optional<bool> minimal,
        boost::optional<bool> base64Url
    ) const;
    /// <summary>
    /// 混合解析单一视频接口/Hybrid parsing single video endpoint
    /// </summary>
    /// <remarks>
    /// # [中文] ### 用途: - 该接口用于解析抖音/TikTok单一视频的数据。 ### 参数: - &#x60;url&#x60;: 视频链接、分享链接、分享文本。 ### 返回: - &#x60;data&#x60;: 视频数据。  # [English] ### Purpose: - This endpoint is used to parse data of a single Douyin/TikTok video. ### Parameters: - &#x60;url&#x60;: Video link, share link, or share text. ### Returns: - &#x60;data&#x60;: Video data.  # [Example] url &#x3D; \&quot;https://v.douyin.com/L4FJNR3/\&quot;
    /// </remarks>
    /// <param name="url"></param>
    /// <param name="minimal">是否返回最小数据/Whether to return minimal data (optional, default to false)</param>
    /// <param name="base64Url">是否Base64编码提交URL/Base64 encoding URL (optional, default to false)</param>
    pplx::task<std::shared_ptr<ResponseModel>> hybridParsingSingleVideoApiV1HybridVideoDataGet_1(
        utility::string_t url,
        boost::optional<bool> minimal,
        boost::optional<bool> base64Url
    ) const;

protected:
    std::shared_ptr<const ApiClient> m_ApiClient;
};

}
}
}
}

#endif /* IO_TIKHUB_CLIENT_API_HybridParsingApi_H_ */

