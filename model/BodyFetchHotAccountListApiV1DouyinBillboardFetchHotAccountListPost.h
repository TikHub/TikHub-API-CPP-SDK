/**
 * TikHub.io - Your Ultimate Social Media Data & API Marketplace
 * High-performance asynchronous Douyin(抖音) TikTok Xiaohongshu(小红书) Kuaishou(快手) Weibo(微博) Instagram YouTube(油管) Twitter(X) Captcha Solver(验证码解决器) Temp Mail(临时邮箱) API(接口).
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.3.1.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * BodyFetchHotAccountListApiV1DouyinBillboardFetchHotAccountListPost.h
 *
 * Body_fetch_hot_account_list_api_v1_douyin_billboard_fetch_hot_account_list_post
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_BodyFetchHotAccountListApiV1DouyinBillboardFetchHotAccountListPost_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_BodyFetchHotAccountListApiV1DouyinBillboardFetchHotAccountListPost_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>
#include "Object.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// Body_fetch_hot_account_list_api_v1_douyin_billboard_fetch_hot_account_list_post
/// </summary>
class  BodyFetchHotAccountListApiV1DouyinBillboardFetchHotAccountListPost
    : public ModelBase
{
public:
    BodyFetchHotAccountListApiV1DouyinBillboardFetchHotAccountListPost();
    virtual ~BodyFetchHotAccountListApiV1DouyinBillboardFetchHotAccountListPost();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// BodyFetchHotAccountListApiV1DouyinBillboardFetchHotAccountListPost members

    /// <summary>
    /// Date Window，时间窗口，格式 小时，默认24小时
    /// </summary>
    utility::string_t getDateWindow() const;
    bool dateWindowIsSet() const;
    void unsetDate_window();

    void setDateWindow(const utility::string_t& value);

    /// <summary>
    /// Page Num，页码，默认1
    /// </summary>
    utility::string_t getPageNum() const;
    bool pageNumIsSet() const;
    void unsetPage_num();

    void setPageNum(const utility::string_t& value);

    /// <summary>
    /// Page Size，每页数量，默认10
    /// </summary>
    utility::string_t getPageSize() const;
    bool pageSizeIsSet() const;
    void unsetPage_size();

    void setPageSize(const utility::string_t& value);

    /// <summary>
    /// Query Tag，子级垂类标签，空则为全部，多个标签需传入{\&quot;value\&quot;: \&quot;{顶级垂类标签id}\&quot;, \&quot;children\&quot;: [{\&quot;value\&quot;: \&quot;{子级垂类标签id}\&quot;}, {\&quot;value\&quot;: \&quot;{子级垂类标签id}\&quot;}]}
    /// </summary>
    std::shared_ptr<Object> getQueryTag() const;
    bool queryTagIsSet() const;
    void unsetQuery_tag();

    void setQueryTag(const std::shared_ptr<Object>& value);


protected:
    utility::string_t m_Date_window;
    bool m_Date_windowIsSet;
    utility::string_t m_Page_num;
    bool m_Page_numIsSet;
    utility::string_t m_Page_size;
    bool m_Page_sizeIsSet;
    std::shared_ptr<Object> m_Query_tag;
    bool m_Query_tagIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_BodyFetchHotAccountListApiV1DouyinBillboardFetchHotAccountListPost_H_ */
