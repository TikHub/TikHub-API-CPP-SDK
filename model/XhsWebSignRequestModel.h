/**
 * TikHub.io - Your Ultimate Social Media Data & API Marketplace
 * High-performance asynchronous Douyin(抖音) TikTok Xiaohongshu(小红书) Kuaishou(快手) Weibo(微博) Instagram YouTube(油管) Twitter(X) Captcha Solver(验证码解决器) Temp Mail(临时邮箱) API(接口).
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.3.1.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * XhsWebSignRequestModel.h
 *
 * XhsWebSignRequestModel
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_XhsWebSignRequestModel_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_XhsWebSignRequestModel_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>
#include "Object.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// XhsWebSignRequestModel
/// </summary>
class  XhsWebSignRequestModel
    : public ModelBase
{
public:
    XhsWebSignRequestModel();
    virtual ~XhsWebSignRequestModel();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// XhsWebSignRequestModel members

    /// <summary>
    /// Path，请求接口的路径/Request API path
    /// </summary>
    utility::string_t getPath() const;
    bool pathIsSet() const;
    void unsetPath();

    void setPath(const utility::string_t& value);

    /// <summary>
    /// Data，请求API的荷载数据/Payload data of request API
    /// </summary>
    std::shared_ptr<Object> getData() const;
    bool dataIsSet() const;
    void unsetData();

    void setData(const std::shared_ptr<Object>& value);

    /// <summary>
    /// Cookie，请求接口的Cookie/Request API cookie
    /// </summary>
    utility::string_t getCookie() const;
    bool cookieIsSet() const;
    void unsetCookie();

    void setCookie(const utility::string_t& value);


protected:
    utility::string_t m_Path;
    bool m_PathIsSet;
    std::shared_ptr<Object> m_Data;
    bool m_DataIsSet;
    utility::string_t m_Cookie;
    bool m_CookieIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_XhsWebSignRequestModel_H_ */
