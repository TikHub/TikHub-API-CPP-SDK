/**
 * TikHub.io - Your Ultimate Social Media Data & API Marketplace
 * High-performance asynchronous Douyin(抖音) TikTok Xiaohongshu(小红书) Kuaishou(快手) Weibo(微博) Instagram YouTube(油管) Twitter(X) Captcha Solver(验证码解决器) Temp Mail(临时邮箱) API(接口).
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.3.1.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * GetNoteInfoV5Request.h
 *
 * GetNoteInfoV5Request
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_GetNoteInfoV5Request_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_GetNoteInfoV5Request_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// GetNoteInfoV5Request
/// </summary>
class  GetNoteInfoV5Request
    : public ModelBase
{
public:
    GetNoteInfoV5Request();
    virtual ~GetNoteInfoV5Request();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// GetNoteInfoV5Request members

    /// <summary>
    /// Note Id，笔记ID/Note ID
    /// </summary>
    utility::string_t getNoteId() const;
    bool noteIdIsSet() const;
    void unsetNote_id();

    void setNoteId(const utility::string_t& value);

    /// <summary>
    /// Xsec Token，X-Sec-Token，可以从搜索接口中获取/X-Sec-Token, can be obtained from the search interface
    /// </summary>
    utility::string_t getXsecToken() const;
    bool xsecTokenIsSet() const;
    void unsetXsec_token();

    void setXsecToken(const utility::string_t& value);

    /// <summary>
    /// Cookie，用户自行提供的已登录的网页Cookie/User provided logged-in web Cookie
    /// </summary>
    utility::string_t getCookie() const;
    bool cookieIsSet() const;
    void unsetCookie();

    void setCookie(const utility::string_t& value);

    /// <summary>
    /// Proxy，代理，格式：http://用户名:密码@IP:端口/Proxy, format: http://username:password@IP:port
    /// </summary>
    utility::string_t getProxy() const;
    bool proxyIsSet() const;
    void unsetProxy();

    void setProxy(const utility::string_t& value);


protected:
    utility::string_t m_Note_id;
    bool m_Note_idIsSet;
    utility::string_t m_Xsec_token;
    bool m_Xsec_tokenIsSet;
    utility::string_t m_Cookie;
    bool m_CookieIsSet;
    utility::string_t m_Proxy;
    bool m_ProxyIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_GetNoteInfoV5Request_H_ */
